{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { REACT_BLOCK_TYPE, REACT_MEMO_TYPE, REACT_FORWARD_REF_TYPE } from 'shared/ReactSymbols';\nexport default function block(query, render) {\n  if (__DEV__) {\n    if (typeof query !== 'function') {\n      console.error('Blocks require a query function but was given %s.', query === null ? 'null' : typeof query);\n    }\n\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      console.error('Blocks require a render function but received a `memo` ' + 'component. Use `memo` on an inner component instead.');\n    } else if (render != null && render.$$typeof === REACT_FORWARD_REF_TYPE) {\n      console.error('Blocks require a render function but received a `forwardRef` ' + 'component. Use `forwardRef` on an inner component instead.');\n    } else if (typeof render !== 'function') {\n      console.error('Blocks require a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else if (render.length !== 0 && render.length !== 2) {\n      // Warn if it's not accepting two args.\n      // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object\n      console.error('Block render functions accept exactly two parameters: props and data. %s', render.length === 1 ? 'Did you forget to use the data parameter?' : 'Any additional parameter will be undefined.');\n    }\n\n    if (render != null && (render.defaultProps != null || render.propTypes != null)) {\n      console.error('Block render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n    }\n  }\n\n  return function () {\n    let args = arguments;\n    return {\n      $$typeof: REACT_BLOCK_TYPE,\n      query: function () {\n        return query.apply(null, args);\n      },\n      render: render\n    };\n  };\n}","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react/src/block.js"],"names":["REACT_BLOCK_TYPE","REACT_MEMO_TYPE","REACT_FORWARD_REF_TYPE","block","query","render","__DEV__","console","error","$$typeof","length","defaultProps","propTypes","args","arguments","apply"],"mappings":"AAAA;;;;;;AAOA,SACEA,gBADF,EAEEC,eAFF,EAGEC,sBAHF,QAIO,qBAJP;AAWA,eAAe,SAASC,KAAT,CACbC,KADa,EAEbC,MAFa,EAGoB;AACjC,MAAIC,OAAJ,EAAa;AACX,QAAI,OAAOF,KAAP,KAAiB,UAArB,EAAiC;AAC/BG,MAAAA,OAAO,CAACC,KAAR,CACE,mDADF,EAEEJ,KAAK,KAAK,IAAV,GAAiB,MAAjB,GAA0B,OAAOA,KAFnC;AAID;;AACD,QAAIC,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAACI,QAAP,KAAoBR,eAA1C,EAA2D;AACzDM,MAAAA,OAAO,CAACC,KAAR,CACE,4DACE,sDAFJ;AAID,KALD,MAKO,IAAIH,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAACI,QAAP,KAAoBP,sBAA1C,EAAkE;AACvEK,MAAAA,OAAO,CAACC,KAAR,CACE,kEACE,4DAFJ;AAID,KALM,MAKA,IAAI,OAAOH,MAAP,KAAkB,UAAtB,EAAkC;AACvCE,MAAAA,OAAO,CAACC,KAAR,CACE,oDADF,EAEEH,MAAM,KAAK,IAAX,GAAkB,MAAlB,GAA2B,OAAOA,MAFpC;AAID,KALM,MAKA,IAAIA,MAAM,CAACK,MAAP,KAAkB,CAAlB,IAAuBL,MAAM,CAACK,MAAP,KAAkB,CAA7C,EAAgD;AACrD;AACA;AACAH,MAAAA,OAAO,CAACC,KAAR,CACE,0EADF,EAEEH,MAAM,CAACK,MAAP,KAAkB,CAAlB,GACI,2CADJ,GAEI,6CAJN;AAMD;;AAED,QACEL,MAAM,IAAI,IAAV,KACCA,MAAM,CAACM,YAAP,IAAuB,IAAvB,IAA+BN,MAAM,CAACO,SAAP,IAAoB,IADpD,CADF,EAGE;AACAL,MAAAA,OAAO,CAACC,KAAR,CACE,sEACE,8CAFJ;AAID;AACF;;AACD,SAAO,YAAyB;AAC9B,QAAIK,IAAI,GAAGC,SAAX;AACA,WAAO;AACLL,MAAAA,QAAQ,EAAET,gBADL;AAELI,MAAAA,KAAK,EAAE,YAAW;AAChB,eAAOA,KAAK,CAACW,KAAN,CAAY,IAAZ,EAAkBF,IAAlB,CAAP;AACD,OAJI;AAKLR,MAAAA,MAAM,EAAEA;AALH,KAAP;AAOD,GATD;AAUD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  REACT_BLOCK_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_FORWARD_REF_TYPE,\n} from 'shared/ReactSymbols';\n\nopaque type Block<Props>: React$AbstractComponent<\n  Props,\n  null,\n> = React$AbstractComponent<Props, null>;\n\nexport default function block<Args, Props, Data>(\n  query: (...args: Args) => Data,\n  render: (props: Props, data: Data) => React$Node,\n): (...args: Args) => Block<Props> {\n  if (__DEV__) {\n    if (typeof query !== 'function') {\n      console.error(\n        'Blocks require a query function but was given %s.',\n        query === null ? 'null' : typeof query,\n      );\n    }\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      console.error(\n        'Blocks require a render function but received a `memo` ' +\n          'component. Use `memo` on an inner component instead.',\n      );\n    } else if (render != null && render.$$typeof === REACT_FORWARD_REF_TYPE) {\n      console.error(\n        'Blocks require a render function but received a `forwardRef` ' +\n          'component. Use `forwardRef` on an inner component instead.',\n      );\n    } else if (typeof render !== 'function') {\n      console.error(\n        'Blocks require a render function but was given %s.',\n        render === null ? 'null' : typeof render,\n      );\n    } else if (render.length !== 0 && render.length !== 2) {\n      // Warn if it's not accepting two args.\n      // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object\n      console.error(\n        'Block render functions accept exactly two parameters: props and data. %s',\n        render.length === 1\n          ? 'Did you forget to use the data parameter?'\n          : 'Any additional parameter will be undefined.',\n      );\n    }\n\n    if (\n      render != null &&\n      (render.defaultProps != null || render.propTypes != null)\n    ) {\n      console.error(\n        'Block render functions do not support propTypes or defaultProps. ' +\n          'Did you accidentally pass a React component?',\n      );\n    }\n  }\n  return function(): Block<Props> {\n    let args = arguments;\n    return {\n      $$typeof: REACT_BLOCK_TYPE,\n      query: function() {\n        return query.apply(null, args);\n      },\n      render: render,\n    };\n  };\n}\n"]},"metadata":{},"sourceType":"module"}