{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { unsafeCastStringToDOMTopLevelType, unsafeCastDOMTopLevelTypeToString } from 'legacy-events/TopLevelEventTypes';\nimport getVendorPrefixedEventName from './getVendorPrefixedEventName';\n/**\n * To identify top level events in ReactDOM, we use constants defined by this\n * module. This is the only module that uses the unsafe* methods to express\n * that the constants actually correspond to the browser event names. This lets\n * us save some bundle size by avoiding a top level type -> event name map.\n * The rest of ReactDOM code should import top level types from this file.\n */\n\nexport const TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');\nexport const TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));\nexport const TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));\nexport const TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));\nexport const TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');\nexport const TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');\nexport const TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');\nexport const TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');\nexport const TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');\nexport const TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');\nexport const TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');\nexport const TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');\nexport const TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');\nexport const TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');\nexport const TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');\nexport const TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');\nexport const TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');\nexport const TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');\nexport const TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');\nexport const TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');\nexport const TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');\nexport const TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');\nexport const TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');\nexport const TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');\nexport const TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');\nexport const TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');\nexport const TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');\nexport const TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');\nexport const TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');\nexport const TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');\nexport const TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');\nexport const TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');\nexport const TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');\nexport const TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');\nexport const TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');\nexport const TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');\nexport const TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');\nexport const TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');\nexport const TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');\nexport const TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');\nexport const TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');\nexport const TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');\nexport const TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');\nexport const TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');\nexport const TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');\nexport const TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');\nexport const TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');\nexport const TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');\nexport const TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');\nexport const TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');\nexport const TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');\nexport const TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');\nexport const TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');\nexport const TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');\nexport const TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');\nexport const TOP_POINTER_ENTER = unsafeCastStringToDOMTopLevelType('pointerenter');\nexport const TOP_POINTER_LEAVE = unsafeCastStringToDOMTopLevelType('pointerleave');\nexport const TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');\nexport const TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');\nexport const TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');\nexport const TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');\nexport const TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');\nexport const TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');\nexport const TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');\nexport const TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');\nexport const TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');\nexport const TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');\nexport const TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');\nexport const TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');\nexport const TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');\nexport const TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');\nexport const TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');\nexport const TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');\nexport const TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');\nexport const TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');\nexport const TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');\nexport const TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');\nexport const TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');\nexport const TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));\nexport const TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');\nexport const TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');\nexport const TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel'); // List of events that need to be individually attached to media elements.\n// Note that events in this list will *not* be listened to at the top level\n// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.\n\nexport const mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];\nexport function getRawEventName(topLevelType) {\n  return unsafeCastDOMTopLevelTypeToString(topLevelType);\n}","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react-dom/src/events/DOMTopLevelEventTypes.js"],"names":["unsafeCastStringToDOMTopLevelType","unsafeCastDOMTopLevelTypeToString","getVendorPrefixedEventName","TOP_ABORT","TOP_ANIMATION_END","TOP_ANIMATION_ITERATION","TOP_ANIMATION_START","TOP_BLUR","TOP_CAN_PLAY","TOP_CAN_PLAY_THROUGH","TOP_CANCEL","TOP_CHANGE","TOP_CLICK","TOP_CLOSE","TOP_COMPOSITION_END","TOP_COMPOSITION_START","TOP_COMPOSITION_UPDATE","TOP_CONTEXT_MENU","TOP_COPY","TOP_CUT","TOP_DOUBLE_CLICK","TOP_AUX_CLICK","TOP_DRAG","TOP_DRAG_END","TOP_DRAG_ENTER","TOP_DRAG_EXIT","TOP_DRAG_LEAVE","TOP_DRAG_OVER","TOP_DRAG_START","TOP_DROP","TOP_DURATION_CHANGE","TOP_EMPTIED","TOP_ENCRYPTED","TOP_ENDED","TOP_ERROR","TOP_FOCUS","TOP_GOT_POINTER_CAPTURE","TOP_INPUT","TOP_INVALID","TOP_KEY_DOWN","TOP_KEY_PRESS","TOP_KEY_UP","TOP_LOAD","TOP_LOAD_START","TOP_LOADED_DATA","TOP_LOADED_METADATA","TOP_LOST_POINTER_CAPTURE","TOP_MOUSE_DOWN","TOP_MOUSE_MOVE","TOP_MOUSE_OUT","TOP_MOUSE_OVER","TOP_MOUSE_UP","TOP_PASTE","TOP_PAUSE","TOP_PLAY","TOP_PLAYING","TOP_POINTER_CANCEL","TOP_POINTER_DOWN","TOP_POINTER_ENTER","TOP_POINTER_LEAVE","TOP_POINTER_MOVE","TOP_POINTER_OUT","TOP_POINTER_OVER","TOP_POINTER_UP","TOP_PROGRESS","TOP_RATE_CHANGE","TOP_RESET","TOP_SCROLL","TOP_SEEKED","TOP_SEEKING","TOP_SELECTION_CHANGE","TOP_STALLED","TOP_SUBMIT","TOP_SUSPEND","TOP_TEXT_INPUT","TOP_TIME_UPDATE","TOP_TOGGLE","TOP_TOUCH_CANCEL","TOP_TOUCH_END","TOP_TOUCH_MOVE","TOP_TOUCH_START","TOP_TRANSITION_END","TOP_VOLUME_CHANGE","TOP_WAITING","TOP_WHEEL","mediaEventTypes","getRawEventName","topLevelType"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DOMTopLevelEventType} from 'legacy-events/TopLevelEventTypes';\n\nimport {\n  unsafeCastStringToDOMTopLevelType,\n  unsafeCastDOMTopLevelTypeToString,\n} from 'legacy-events/TopLevelEventTypes';\nimport getVendorPrefixedEventName from './getVendorPrefixedEventName';\n\n/**\n * To identify top level events in ReactDOM, we use constants defined by this\n * module. This is the only module that uses the unsafe* methods to express\n * that the constants actually correspond to the browser event names. This lets\n * us save some bundle size by avoiding a top level type -> event name map.\n * The rest of ReactDOM code should import top level types from this file.\n */\nexport const TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');\nexport const TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(\n  getVendorPrefixedEventName('animationend'),\n);\nexport const TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(\n  getVendorPrefixedEventName('animationiteration'),\n);\nexport const TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(\n  getVendorPrefixedEventName('animationstart'),\n);\nexport const TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');\nexport const TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');\nexport const TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType(\n  'canplaythrough',\n);\nexport const TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');\nexport const TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');\nexport const TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');\nexport const TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');\nexport const TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType(\n  'compositionend',\n);\nexport const TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType(\n  'compositionstart',\n);\nexport const TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType(\n  'compositionupdate',\n);\nexport const TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType(\n  'contextmenu',\n);\nexport const TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');\nexport const TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');\nexport const TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');\nexport const TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');\nexport const TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');\nexport const TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');\nexport const TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');\nexport const TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');\nexport const TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');\nexport const TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');\nexport const TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');\nexport const TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');\nexport const TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType(\n  'durationchange',\n);\nexport const TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');\nexport const TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');\nexport const TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');\nexport const TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');\nexport const TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');\nexport const TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType(\n  'gotpointercapture',\n);\nexport const TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');\nexport const TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');\nexport const TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');\nexport const TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');\nexport const TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');\nexport const TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');\nexport const TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');\nexport const TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');\nexport const TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType(\n  'loadedmetadata',\n);\nexport const TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType(\n  'lostpointercapture',\n);\nexport const TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');\nexport const TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');\nexport const TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');\nexport const TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');\nexport const TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');\nexport const TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');\nexport const TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');\nexport const TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');\nexport const TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');\nexport const TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType(\n  'pointercancel',\n);\nexport const TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType(\n  'pointerdown',\n);\nexport const TOP_POINTER_ENTER = unsafeCastStringToDOMTopLevelType(\n  'pointerenter',\n);\nexport const TOP_POINTER_LEAVE = unsafeCastStringToDOMTopLevelType(\n  'pointerleave',\n);\nexport const TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType(\n  'pointermove',\n);\nexport const TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');\nexport const TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType(\n  'pointerover',\n);\nexport const TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');\nexport const TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');\nexport const TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');\nexport const TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');\nexport const TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');\nexport const TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');\nexport const TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');\nexport const TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType(\n  'selectionchange',\n);\nexport const TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');\nexport const TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');\nexport const TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');\nexport const TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');\nexport const TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');\nexport const TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');\nexport const TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType(\n  'touchcancel',\n);\nexport const TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');\nexport const TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');\nexport const TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');\nexport const TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(\n  getVendorPrefixedEventName('transitionend'),\n);\nexport const TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType(\n  'volumechange',\n);\nexport const TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');\nexport const TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');\n\n// List of events that need to be individually attached to media elements.\n// Note that events in this list will *not* be listened to at the top level\n// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.\nexport const mediaEventTypes = [\n  TOP_ABORT,\n  TOP_CAN_PLAY,\n  TOP_CAN_PLAY_THROUGH,\n  TOP_DURATION_CHANGE,\n  TOP_EMPTIED,\n  TOP_ENCRYPTED,\n  TOP_ENDED,\n  TOP_ERROR,\n  TOP_LOADED_DATA,\n  TOP_LOADED_METADATA,\n  TOP_LOAD_START,\n  TOP_PAUSE,\n  TOP_PLAY,\n  TOP_PLAYING,\n  TOP_PROGRESS,\n  TOP_RATE_CHANGE,\n  TOP_SEEKED,\n  TOP_SEEKING,\n  TOP_STALLED,\n  TOP_SUSPEND,\n  TOP_TIME_UPDATE,\n  TOP_VOLUME_CHANGE,\n  TOP_WAITING,\n];\n\nexport function getRawEventName(topLevelType: DOMTopLevelEventType): string {\n  return unsafeCastDOMTopLevelTypeToString(topLevelType);\n}\n"]},"metadata":{},"sourceType":"module"}