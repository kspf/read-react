{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE } from 'shared/ReactSymbols';\nexport default function forwardRef(render) {\n  if (__DEV__) {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      console.error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      console.error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        console.error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        console.error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render\n  };\n}","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react/src/forwardRef.js"],"names":["REACT_FORWARD_REF_TYPE","REACT_MEMO_TYPE","forwardRef","render","__DEV__","$$typeof","console","error","length","defaultProps","propTypes"],"mappings":"AAAA;;;;;;AAOA,SAAQA,sBAAR,EAAgCC,eAAhC,QAAsD,qBAAtD;AAEA,eAAe,SAASC,UAAT,CACbC,MADa,EAEb;AACA,MAAIC,OAAJ,EAAa;AACX,QAAID,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAACE,QAAP,KAAoBJ,eAA1C,EAA2D;AACzDK,MAAAA,OAAO,CAACC,KAAR,CACE,iEACE,mDADF,GAEE,wBAHJ;AAKD,KAND,MAMO,IAAI,OAAOJ,MAAP,KAAkB,UAAtB,EAAkC;AACvCG,MAAAA,OAAO,CAACC,KAAR,CACE,yDADF,EAEEJ,MAAM,KAAK,IAAX,GAAkB,MAAlB,GAA2B,OAAOA,MAFpC;AAID,KALM,MAKA;AACL,UAAIA,MAAM,CAACK,MAAP,KAAkB,CAAlB,IAAuBL,MAAM,CAACK,MAAP,KAAkB,CAA7C,EAAgD;AAC9CF,QAAAA,OAAO,CAACC,KAAR,CACE,8EADF,EAEEJ,MAAM,CAACK,MAAP,KAAkB,CAAlB,GACI,0CADJ,GAEI,6CAJN;AAMD;AACF;;AAED,QAAIL,MAAM,IAAI,IAAd,EAAoB;AAClB,UAAIA,MAAM,CAACM,YAAP,IAAuB,IAAvB,IAA+BN,MAAM,CAACO,SAAP,IAAoB,IAAvD,EAA6D;AAC3DJ,QAAAA,OAAO,CAACC,KAAR,CACE,2EACE,8CAFJ;AAID;AACF;AACF;;AAED,SAAO;AACLF,IAAAA,QAAQ,EAAEL,sBADL;AAELG,IAAAA;AAFK,GAAP;AAID","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nexport default function forwardRef<Props, ElementType: React$ElementType>(\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\n) {\n  if (__DEV__) {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      console.error(\n        'forwardRef requires a render function but received a `memo` ' +\n          'component. Instead of forwardRef(memo(...)), use ' +\n          'memo(forwardRef(...)).',\n      );\n    } else if (typeof render !== 'function') {\n      console.error(\n        'forwardRef requires a render function but was given %s.',\n        render === null ? 'null' : typeof render,\n      );\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        console.error(\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\n          render.length === 1\n            ? 'Did you forget to use the ref parameter?'\n            : 'Any additional parameter will be undefined.',\n        );\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        console.error(\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\n            'Did you accidentally pass a React component?',\n        );\n      }\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}