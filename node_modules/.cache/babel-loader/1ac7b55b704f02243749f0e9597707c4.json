{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as DOMTopLevelEventTypes from './DOMTopLevelEventTypes';\nimport { DiscreteEvent, UserBlockingEvent, ContinuousEvent } from 'shared/ReactTypes'; // Needed for SimpleEventPlugin, rather than\n// do it in two places, which duplicates logic\n// and increases the bundle size, we do it all\n// here once. If we remove or refactor the\n// SimpleEventPlugin, we should also remove or\n// update the below line.\n\nexport const simpleEventPluginEventTypes = {};\nexport const topLevelEventsToDispatchConfig = new Map();\nconst eventPriorities = new Map(); // We store most of the events in this module in pairs of two strings so we can re-use\n// the code required to apply the same logic for event prioritization and that of the\n// SimpleEventPlugin. This complicates things slightly, but the aim is to reduce code\n// duplication (for which there would be quite a bit). For the events that are not needed\n// for the SimpleEventPlugin (otherDiscreteEvents) we process them separately as an\n// array of top level events.\n// Lastly, we ignore prettier so we can keep the formatting sane.\n// prettier-ignore\n\nconst discreteEventPairsForSimpleEventPlugin = [DOMTopLevelEventTypes.TOP_BLUR, 'blur', DOMTopLevelEventTypes.TOP_CANCEL, 'cancel', DOMTopLevelEventTypes.TOP_CLICK, 'click', DOMTopLevelEventTypes.TOP_CLOSE, 'close', DOMTopLevelEventTypes.TOP_CONTEXT_MENU, 'contextMenu', DOMTopLevelEventTypes.TOP_COPY, 'copy', DOMTopLevelEventTypes.TOP_CUT, 'cut', DOMTopLevelEventTypes.TOP_AUX_CLICK, 'auxClick', DOMTopLevelEventTypes.TOP_DOUBLE_CLICK, 'doubleClick', DOMTopLevelEventTypes.TOP_DRAG_END, 'dragEnd', DOMTopLevelEventTypes.TOP_DRAG_START, 'dragStart', DOMTopLevelEventTypes.TOP_DROP, 'drop', DOMTopLevelEventTypes.TOP_FOCUS, 'focus', DOMTopLevelEventTypes.TOP_INPUT, 'input', DOMTopLevelEventTypes.TOP_INVALID, 'invalid', DOMTopLevelEventTypes.TOP_KEY_DOWN, 'keyDown', DOMTopLevelEventTypes.TOP_KEY_PRESS, 'keyPress', DOMTopLevelEventTypes.TOP_KEY_UP, 'keyUp', DOMTopLevelEventTypes.TOP_MOUSE_DOWN, 'mouseDown', DOMTopLevelEventTypes.TOP_MOUSE_UP, 'mouseUp', DOMTopLevelEventTypes.TOP_PASTE, 'paste', DOMTopLevelEventTypes.TOP_PAUSE, 'pause', DOMTopLevelEventTypes.TOP_PLAY, 'play', DOMTopLevelEventTypes.TOP_POINTER_CANCEL, 'pointerCancel', DOMTopLevelEventTypes.TOP_POINTER_DOWN, 'pointerDown', DOMTopLevelEventTypes.TOP_POINTER_UP, 'pointerUp', DOMTopLevelEventTypes.TOP_RATE_CHANGE, 'rateChange', DOMTopLevelEventTypes.TOP_RESET, 'reset', DOMTopLevelEventTypes.TOP_SEEKED, 'seeked', DOMTopLevelEventTypes.TOP_SUBMIT, 'submit', DOMTopLevelEventTypes.TOP_TOUCH_CANCEL, 'touchCancel', DOMTopLevelEventTypes.TOP_TOUCH_END, 'touchEnd', DOMTopLevelEventTypes.TOP_TOUCH_START, 'touchStart', DOMTopLevelEventTypes.TOP_VOLUME_CHANGE, 'volumeChange'];\nconst otherDiscreteEvents = [DOMTopLevelEventTypes.TOP_CHANGE, DOMTopLevelEventTypes.TOP_SELECTION_CHANGE, DOMTopLevelEventTypes.TOP_TEXT_INPUT, DOMTopLevelEventTypes.TOP_COMPOSITION_START, DOMTopLevelEventTypes.TOP_COMPOSITION_END, DOMTopLevelEventTypes.TOP_COMPOSITION_UPDATE]; // prettier-ignore\n\nconst userBlockingPairsForSimpleEventPlugin = [DOMTopLevelEventTypes.TOP_DRAG, 'drag', DOMTopLevelEventTypes.TOP_DRAG_ENTER, 'dragEnter', DOMTopLevelEventTypes.TOP_DRAG_EXIT, 'dragExit', DOMTopLevelEventTypes.TOP_DRAG_LEAVE, 'dragLeave', DOMTopLevelEventTypes.TOP_DRAG_OVER, 'dragOver', DOMTopLevelEventTypes.TOP_MOUSE_MOVE, 'mouseMove', DOMTopLevelEventTypes.TOP_MOUSE_OUT, 'mouseOut', DOMTopLevelEventTypes.TOP_MOUSE_OVER, 'mouseOver', DOMTopLevelEventTypes.TOP_POINTER_MOVE, 'pointerMove', DOMTopLevelEventTypes.TOP_POINTER_OUT, 'pointerOut', DOMTopLevelEventTypes.TOP_POINTER_OVER, 'pointerOver', DOMTopLevelEventTypes.TOP_SCROLL, 'scroll', DOMTopLevelEventTypes.TOP_TOGGLE, 'toggle', DOMTopLevelEventTypes.TOP_TOUCH_MOVE, 'touchMove', DOMTopLevelEventTypes.TOP_WHEEL, 'wheel']; // prettier-ignore\n\nconst continuousPairsForSimpleEventPlugin = [DOMTopLevelEventTypes.TOP_ABORT, 'abort', DOMTopLevelEventTypes.TOP_ANIMATION_END, 'animationEnd', DOMTopLevelEventTypes.TOP_ANIMATION_ITERATION, 'animationIteration', DOMTopLevelEventTypes.TOP_ANIMATION_START, 'animationStart', DOMTopLevelEventTypes.TOP_CAN_PLAY, 'canPlay', DOMTopLevelEventTypes.TOP_CAN_PLAY_THROUGH, 'canPlayThrough', DOMTopLevelEventTypes.TOP_DURATION_CHANGE, 'durationChange', DOMTopLevelEventTypes.TOP_EMPTIED, 'emptied', DOMTopLevelEventTypes.TOP_ENCRYPTED, 'encrypted', DOMTopLevelEventTypes.TOP_ENDED, 'ended', DOMTopLevelEventTypes.TOP_ERROR, 'error', DOMTopLevelEventTypes.TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture', DOMTopLevelEventTypes.TOP_LOAD, 'load', DOMTopLevelEventTypes.TOP_LOADED_DATA, 'loadedData', DOMTopLevelEventTypes.TOP_LOADED_METADATA, 'loadedMetadata', DOMTopLevelEventTypes.TOP_LOAD_START, 'loadStart', DOMTopLevelEventTypes.TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture', DOMTopLevelEventTypes.TOP_PLAYING, 'playing', DOMTopLevelEventTypes.TOP_PROGRESS, 'progress', DOMTopLevelEventTypes.TOP_SEEKING, 'seeking', DOMTopLevelEventTypes.TOP_STALLED, 'stalled', DOMTopLevelEventTypes.TOP_SUSPEND, 'suspend', DOMTopLevelEventTypes.TOP_TIME_UPDATE, 'timeUpdate', DOMTopLevelEventTypes.TOP_TRANSITION_END, 'transitionEnd', DOMTopLevelEventTypes.TOP_WAITING, 'waiting'];\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: [TOP_ABORT],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = new Map([\n *   [TOP_ABORT, { sameConfig }],\n * ]);\n */\n\nfunction processSimpleEventPluginPairsByPriority(eventTypes, priority) {\n  // As the event types are in pairs of two, we need to iterate\n  // through in twos. The events are in pairs of two to save code\n  // and improve init perf of processing this array, as it will\n  // result in far fewer object allocations and property accesses\n  // if we only use three arrays to process all the categories of\n  // instead of tuples.\n  for (let i = 0; i < eventTypes.length; i += 2) {\n    const topEvent = eventTypes[i];\n    const event = eventTypes[i + 1];\n    const capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n    const onEvent = 'on' + capitalizedEvent;\n    const config = {\n      phasedRegistrationNames: {\n        bubbled: onEvent,\n        captured: onEvent + 'Capture'\n      },\n      dependencies: [topEvent],\n      eventPriority: priority\n    };\n    eventPriorities.set(topEvent, priority);\n    topLevelEventsToDispatchConfig.set(topEvent, config);\n    simpleEventPluginEventTypes[event] = config;\n  }\n}\n\nfunction processTopEventPairsByPriority(eventTypes, priority) {\n  for (let i = 0; i < eventTypes.length; i++) {\n    eventPriorities.set(eventTypes[i], priority);\n  }\n} // SimpleEventPlugin\n\n\nprocessSimpleEventPluginPairsByPriority(discreteEventPairsForSimpleEventPlugin, DiscreteEvent);\nprocessSimpleEventPluginPairsByPriority(userBlockingPairsForSimpleEventPlugin, UserBlockingEvent);\nprocessSimpleEventPluginPairsByPriority(continuousPairsForSimpleEventPlugin, ContinuousEvent); // Not used by SimpleEventPlugin\n\nprocessTopEventPairsByPriority(otherDiscreteEvents, DiscreteEvent);\nexport function getEventPriorityForPluginSystem(topLevelType) {\n  const priority = eventPriorities.get(topLevelType); // Default to a ContinuousEvent. Note: we might\n  // want to warn if we can't detect the priority\n  // for the event.\n\n  return priority === undefined ? ContinuousEvent : priority;\n}","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react-dom/src/events/DOMEventProperties.js"],"names":["DOMTopLevelEventTypes","DiscreteEvent","UserBlockingEvent","ContinuousEvent","simpleEventPluginEventTypes","topLevelEventsToDispatchConfig","Map","eventPriorities","discreteEventPairsForSimpleEventPlugin","TOP_BLUR","TOP_CANCEL","TOP_CLICK","TOP_CLOSE","TOP_CONTEXT_MENU","TOP_COPY","TOP_CUT","TOP_AUX_CLICK","TOP_DOUBLE_CLICK","TOP_DRAG_END","TOP_DRAG_START","TOP_DROP","TOP_FOCUS","TOP_INPUT","TOP_INVALID","TOP_KEY_DOWN","TOP_KEY_PRESS","TOP_KEY_UP","TOP_MOUSE_DOWN","TOP_MOUSE_UP","TOP_PASTE","TOP_PAUSE","TOP_PLAY","TOP_POINTER_CANCEL","TOP_POINTER_DOWN","TOP_POINTER_UP","TOP_RATE_CHANGE","TOP_RESET","TOP_SEEKED","TOP_SUBMIT","TOP_TOUCH_CANCEL","TOP_TOUCH_END","TOP_TOUCH_START","TOP_VOLUME_CHANGE","otherDiscreteEvents","TOP_CHANGE","TOP_SELECTION_CHANGE","TOP_TEXT_INPUT","TOP_COMPOSITION_START","TOP_COMPOSITION_END","TOP_COMPOSITION_UPDATE","userBlockingPairsForSimpleEventPlugin","TOP_DRAG","TOP_DRAG_ENTER","TOP_DRAG_EXIT","TOP_DRAG_LEAVE","TOP_DRAG_OVER","TOP_MOUSE_MOVE","TOP_MOUSE_OUT","TOP_MOUSE_OVER","TOP_POINTER_MOVE","TOP_POINTER_OUT","TOP_POINTER_OVER","TOP_SCROLL","TOP_TOGGLE","TOP_TOUCH_MOVE","TOP_WHEEL","continuousPairsForSimpleEventPlugin","TOP_ABORT","TOP_ANIMATION_END","TOP_ANIMATION_ITERATION","TOP_ANIMATION_START","TOP_CAN_PLAY","TOP_CAN_PLAY_THROUGH","TOP_DURATION_CHANGE","TOP_EMPTIED","TOP_ENCRYPTED","TOP_ENDED","TOP_ERROR","TOP_GOT_POINTER_CAPTURE","TOP_LOAD","TOP_LOADED_DATA","TOP_LOADED_METADATA","TOP_LOAD_START","TOP_LOST_POINTER_CAPTURE","TOP_PLAYING","TOP_PROGRESS","TOP_SEEKING","TOP_STALLED","TOP_SUSPEND","TOP_TIME_UPDATE","TOP_TRANSITION_END","TOP_WAITING","processSimpleEventPluginPairsByPriority","eventTypes","priority","i","length","topEvent","event","capitalizedEvent","toUpperCase","slice","onEvent","config","phasedRegistrationNames","bubbled","captured","dependencies","eventPriority","set","processTopEventPairsByPriority","getEventPriorityForPluginSystem","topLevelType","get","undefined"],"mappings":"AAAA;;;;;;;;AAgBA,OAAO,KAAKA,qBAAZ,MAAuC,yBAAvC;AACA,SACEC,aADF,EAEEC,iBAFF,EAGEC,eAHF,QAIO,mBAJP,C,CAMA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,2BAA2B,GAAG,EAApC;AAEP,OAAO,MAAMC,8BAGZ,GAAG,IAAIC,GAAJ,EAHG;AAKP,MAAMC,eAAe,GAAG,IAAID,GAAJ,EAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA,MAAME,sCAAsC,GAAG,CAC7CR,qBAAqB,CAACS,QADuB,EACb,MADa,EAE7CT,qBAAqB,CAACU,UAFuB,EAEX,QAFW,EAG7CV,qBAAqB,CAACW,SAHuB,EAGZ,OAHY,EAI7CX,qBAAqB,CAACY,SAJuB,EAIZ,OAJY,EAK7CZ,qBAAqB,CAACa,gBALuB,EAKL,aALK,EAM7Cb,qBAAqB,CAACc,QANuB,EAMb,MANa,EAO7Cd,qBAAqB,CAACe,OAPuB,EAOd,KAPc,EAQ7Cf,qBAAqB,CAACgB,aARuB,EAQR,UARQ,EAS7ChB,qBAAqB,CAACiB,gBATuB,EASL,aATK,EAU7CjB,qBAAqB,CAACkB,YAVuB,EAUT,SAVS,EAW7ClB,qBAAqB,CAACmB,cAXuB,EAWP,WAXO,EAY7CnB,qBAAqB,CAACoB,QAZuB,EAYb,MAZa,EAa7CpB,qBAAqB,CAACqB,SAbuB,EAaZ,OAbY,EAc7CrB,qBAAqB,CAACsB,SAduB,EAcZ,OAdY,EAe7CtB,qBAAqB,CAACuB,WAfuB,EAeV,SAfU,EAgB7CvB,qBAAqB,CAACwB,YAhBuB,EAgBT,SAhBS,EAiB7CxB,qBAAqB,CAACyB,aAjBuB,EAiBR,UAjBQ,EAkB7CzB,qBAAqB,CAAC0B,UAlBuB,EAkBX,OAlBW,EAmB7C1B,qBAAqB,CAAC2B,cAnBuB,EAmBP,WAnBO,EAoB7C3B,qBAAqB,CAAC4B,YApBuB,EAoBT,SApBS,EAqB7C5B,qBAAqB,CAAC6B,SArBuB,EAqBZ,OArBY,EAsB7C7B,qBAAqB,CAAC8B,SAtBuB,EAsBZ,OAtBY,EAuB7C9B,qBAAqB,CAAC+B,QAvBuB,EAuBb,MAvBa,EAwB7C/B,qBAAqB,CAACgC,kBAxBuB,EAwBH,eAxBG,EAyB7ChC,qBAAqB,CAACiC,gBAzBuB,EAyBL,aAzBK,EA0B7CjC,qBAAqB,CAACkC,cA1BuB,EA0BP,WA1BO,EA2B7ClC,qBAAqB,CAACmC,eA3BuB,EA2BN,YA3BM,EA4B7CnC,qBAAqB,CAACoC,SA5BuB,EA4BZ,OA5BY,EA6B7CpC,qBAAqB,CAACqC,UA7BuB,EA6BX,QA7BW,EA8B7CrC,qBAAqB,CAACsC,UA9BuB,EA8BX,QA9BW,EA+B7CtC,qBAAqB,CAACuC,gBA/BuB,EA+BL,aA/BK,EAgC7CvC,qBAAqB,CAACwC,aAhCuB,EAgCR,UAhCQ,EAiC7CxC,qBAAqB,CAACyC,eAjCuB,EAiCN,YAjCM,EAkC7CzC,qBAAqB,CAAC0C,iBAlCuB,EAkCJ,cAlCI,CAA/C;AAqCA,MAAMC,mBAAmB,GAAG,CAC1B3C,qBAAqB,CAAC4C,UADI,EAE1B5C,qBAAqB,CAAC6C,oBAFI,EAG1B7C,qBAAqB,CAAC8C,cAHI,EAI1B9C,qBAAqB,CAAC+C,qBAJI,EAK1B/C,qBAAqB,CAACgD,mBALI,EAM1BhD,qBAAqB,CAACiD,sBANI,CAA5B,C,CASA;;AACA,MAAMC,qCAAqC,GAAG,CAC5ClD,qBAAqB,CAACmD,QADsB,EACZ,MADY,EAE5CnD,qBAAqB,CAACoD,cAFsB,EAEN,WAFM,EAG5CpD,qBAAqB,CAACqD,aAHsB,EAGP,UAHO,EAI5CrD,qBAAqB,CAACsD,cAJsB,EAIN,WAJM,EAK5CtD,qBAAqB,CAACuD,aALsB,EAKP,UALO,EAM5CvD,qBAAqB,CAACwD,cANsB,EAMN,WANM,EAO5CxD,qBAAqB,CAACyD,aAPsB,EAOP,UAPO,EAQ5CzD,qBAAqB,CAAC0D,cARsB,EAQN,WARM,EAS5C1D,qBAAqB,CAAC2D,gBATsB,EASJ,aATI,EAU5C3D,qBAAqB,CAAC4D,eAVsB,EAUL,YAVK,EAW5C5D,qBAAqB,CAAC6D,gBAXsB,EAWJ,aAXI,EAY5C7D,qBAAqB,CAAC8D,UAZsB,EAYV,QAZU,EAa5C9D,qBAAqB,CAAC+D,UAbsB,EAaV,QAbU,EAc5C/D,qBAAqB,CAACgE,cAdsB,EAcN,WAdM,EAe5ChE,qBAAqB,CAACiE,SAfsB,EAeX,OAfW,CAA9C,C,CAkBA;;AACA,MAAMC,mCAAmC,GAAG,CAC1ClE,qBAAqB,CAACmE,SADoB,EACT,OADS,EAE1CnE,qBAAqB,CAACoE,iBAFoB,EAED,cAFC,EAG1CpE,qBAAqB,CAACqE,uBAHoB,EAGK,oBAHL,EAI1CrE,qBAAqB,CAACsE,mBAJoB,EAIC,gBAJD,EAK1CtE,qBAAqB,CAACuE,YALoB,EAKN,SALM,EAM1CvE,qBAAqB,CAACwE,oBANoB,EAME,gBANF,EAO1CxE,qBAAqB,CAACyE,mBAPoB,EAOC,gBAPD,EAQ1CzE,qBAAqB,CAAC0E,WARoB,EAQP,SARO,EAS1C1E,qBAAqB,CAAC2E,aAToB,EASL,WATK,EAU1C3E,qBAAqB,CAAC4E,SAVoB,EAUT,OAVS,EAW1C5E,qBAAqB,CAAC6E,SAXoB,EAWT,OAXS,EAY1C7E,qBAAqB,CAAC8E,uBAZoB,EAYK,mBAZL,EAa1C9E,qBAAqB,CAAC+E,QAboB,EAaV,MAbU,EAc1C/E,qBAAqB,CAACgF,eAdoB,EAcH,YAdG,EAe1ChF,qBAAqB,CAACiF,mBAfoB,EAeC,gBAfD,EAgB1CjF,qBAAqB,CAACkF,cAhBoB,EAgBJ,WAhBI,EAiB1ClF,qBAAqB,CAACmF,wBAjBoB,EAiBM,oBAjBN,EAkB1CnF,qBAAqB,CAACoF,WAlBoB,EAkBP,SAlBO,EAmB1CpF,qBAAqB,CAACqF,YAnBoB,EAmBN,UAnBM,EAoB1CrF,qBAAqB,CAACsF,WApBoB,EAoBP,SApBO,EAqB1CtF,qBAAqB,CAACuF,WArBoB,EAqBP,SArBO,EAsB1CvF,qBAAqB,CAACwF,WAtBoB,EAsBP,SAtBO,EAuB1CxF,qBAAqB,CAACyF,eAvBoB,EAuBH,YAvBG,EAwB1CzF,qBAAqB,CAAC0F,kBAxBoB,EAwBA,eAxBA,EAyB1C1F,qBAAqB,CAAC2F,WAzBoB,EAyBP,SAzBO,CAA5C;AA4BA;;;;;;;;;;;;;;;;;;;AAmBA,SAASC,uCAAT,CACEC,UADF,EAEEC,QAFF,EAGQ;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,CAAC,IAAI,CAA5C,EAA+C;AAC7C,UAAME,QAAQ,GAAKJ,UAAU,CAACE,CAAD,CAA7B;AACA,UAAMG,KAAK,GAAKL,UAAU,CAACE,CAAC,GAAG,CAAL,CAA1B;AACA,UAAMI,gBAAgB,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASE,WAAT,KAAyBF,KAAK,CAACG,KAAN,CAAY,CAAZ,CAAlD;AACA,UAAMC,OAAO,GAAG,OAAOH,gBAAvB;AAEA,UAAMI,MAAM,GAAG;AACbC,MAAAA,uBAAuB,EAAE;AACvBC,QAAAA,OAAO,EAAEH,OADc;AAEvBI,QAAAA,QAAQ,EAAEJ,OAAO,GAAG;AAFG,OADZ;AAKbK,MAAAA,YAAY,EAAE,CAACV,QAAD,CALD;AAMbW,MAAAA,aAAa,EAAEd;AANF,KAAf;AAQAvF,IAAAA,eAAe,CAACsG,GAAhB,CAAoBZ,QAApB,EAA8BH,QAA9B;AACAzF,IAAAA,8BAA8B,CAACwG,GAA/B,CAAmCZ,QAAnC,EAA6CM,MAA7C;AACAnG,IAAAA,2BAA2B,CAAC8F,KAAD,CAA3B,GAAqCK,MAArC;AACD;AACF;;AAED,SAASO,8BAAT,CACEjB,UADF,EAEEC,QAFF,EAGQ;AACN,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1CxF,IAAAA,eAAe,CAACsG,GAAhB,CAAoBhB,UAAU,CAACE,CAAD,CAA9B,EAAmCD,QAAnC;AACD;AACF,C,CAED;;;AACAF,uCAAuC,CACrCpF,sCADqC,EAErCP,aAFqC,CAAvC;AAIA2F,uCAAuC,CACrC1C,qCADqC,EAErChD,iBAFqC,CAAvC;AAIA0F,uCAAuC,CACrC1B,mCADqC,EAErC/D,eAFqC,CAAvC,C,CAIA;;AACA2G,8BAA8B,CAACnE,mBAAD,EAAsB1C,aAAtB,CAA9B;AAEA,OAAO,SAAS8G,+BAAT,CACLC,YADK,EAEU;AACf,QAAMlB,QAAQ,GAAGvF,eAAe,CAAC0G,GAAhB,CAAoBD,YAApB,CAAjB,CADe,CAEf;AACA;AACA;;AACA,SAAOlB,QAAQ,KAAKoB,SAAb,GAAyB/G,eAAzB,GAA2C2F,QAAlD;AACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {EventPriority} from 'shared/ReactTypes';\nimport type {\n  TopLevelType,\n  DOMTopLevelEventType,\n} from 'legacy-events/TopLevelEventTypes';\nimport type {DispatchConfig} from 'legacy-events/ReactSyntheticEventType';\n\nimport * as DOMTopLevelEventTypes from './DOMTopLevelEventTypes';\nimport {\n  DiscreteEvent,\n  UserBlockingEvent,\n  ContinuousEvent,\n} from 'shared/ReactTypes';\n\n// Needed for SimpleEventPlugin, rather than\n// do it in two places, which duplicates logic\n// and increases the bundle size, we do it all\n// here once. If we remove or refactor the\n// SimpleEventPlugin, we should also remove or\n// update the below line.\nexport const simpleEventPluginEventTypes = {};\n\nexport const topLevelEventsToDispatchConfig: Map<\n  TopLevelType,\n  DispatchConfig,\n> = new Map();\n\nconst eventPriorities = new Map();\n\n// We store most of the events in this module in pairs of two strings so we can re-use\n// the code required to apply the same logic for event prioritization and that of the\n// SimpleEventPlugin. This complicates things slightly, but the aim is to reduce code\n// duplication (for which there would be quite a bit). For the events that are not needed\n// for the SimpleEventPlugin (otherDiscreteEvents) we process them separately as an\n// array of top level events.\n\n// Lastly, we ignore prettier so we can keep the formatting sane.\n\n// prettier-ignore\nconst discreteEventPairsForSimpleEventPlugin = [\n  DOMTopLevelEventTypes.TOP_BLUR, 'blur',\n  DOMTopLevelEventTypes.TOP_CANCEL, 'cancel',\n  DOMTopLevelEventTypes.TOP_CLICK, 'click',\n  DOMTopLevelEventTypes.TOP_CLOSE, 'close',\n  DOMTopLevelEventTypes.TOP_CONTEXT_MENU, 'contextMenu',\n  DOMTopLevelEventTypes.TOP_COPY, 'copy',\n  DOMTopLevelEventTypes.TOP_CUT, 'cut',\n  DOMTopLevelEventTypes.TOP_AUX_CLICK, 'auxClick',\n  DOMTopLevelEventTypes.TOP_DOUBLE_CLICK, 'doubleClick',\n  DOMTopLevelEventTypes.TOP_DRAG_END, 'dragEnd',\n  DOMTopLevelEventTypes.TOP_DRAG_START, 'dragStart',\n  DOMTopLevelEventTypes.TOP_DROP, 'drop',\n  DOMTopLevelEventTypes.TOP_FOCUS, 'focus',\n  DOMTopLevelEventTypes.TOP_INPUT, 'input',\n  DOMTopLevelEventTypes.TOP_INVALID, 'invalid',\n  DOMTopLevelEventTypes.TOP_KEY_DOWN, 'keyDown',\n  DOMTopLevelEventTypes.TOP_KEY_PRESS, 'keyPress',\n  DOMTopLevelEventTypes.TOP_KEY_UP, 'keyUp',\n  DOMTopLevelEventTypes.TOP_MOUSE_DOWN, 'mouseDown',\n  DOMTopLevelEventTypes.TOP_MOUSE_UP, 'mouseUp',\n  DOMTopLevelEventTypes.TOP_PASTE, 'paste',\n  DOMTopLevelEventTypes.TOP_PAUSE, 'pause',\n  DOMTopLevelEventTypes.TOP_PLAY, 'play',\n  DOMTopLevelEventTypes.TOP_POINTER_CANCEL, 'pointerCancel',\n  DOMTopLevelEventTypes.TOP_POINTER_DOWN, 'pointerDown',\n  DOMTopLevelEventTypes.TOP_POINTER_UP, 'pointerUp',\n  DOMTopLevelEventTypes.TOP_RATE_CHANGE, 'rateChange',\n  DOMTopLevelEventTypes.TOP_RESET, 'reset',\n  DOMTopLevelEventTypes.TOP_SEEKED, 'seeked',\n  DOMTopLevelEventTypes.TOP_SUBMIT, 'submit',\n  DOMTopLevelEventTypes.TOP_TOUCH_CANCEL, 'touchCancel',\n  DOMTopLevelEventTypes.TOP_TOUCH_END, 'touchEnd',\n  DOMTopLevelEventTypes.TOP_TOUCH_START, 'touchStart',\n  DOMTopLevelEventTypes.TOP_VOLUME_CHANGE, 'volumeChange',\n];\n\nconst otherDiscreteEvents = [\n  DOMTopLevelEventTypes.TOP_CHANGE,\n  DOMTopLevelEventTypes.TOP_SELECTION_CHANGE,\n  DOMTopLevelEventTypes.TOP_TEXT_INPUT,\n  DOMTopLevelEventTypes.TOP_COMPOSITION_START,\n  DOMTopLevelEventTypes.TOP_COMPOSITION_END,\n  DOMTopLevelEventTypes.TOP_COMPOSITION_UPDATE,\n];\n\n// prettier-ignore\nconst userBlockingPairsForSimpleEventPlugin = [\n  DOMTopLevelEventTypes.TOP_DRAG, 'drag',\n  DOMTopLevelEventTypes.TOP_DRAG_ENTER, 'dragEnter',\n  DOMTopLevelEventTypes.TOP_DRAG_EXIT, 'dragExit',\n  DOMTopLevelEventTypes.TOP_DRAG_LEAVE, 'dragLeave',\n  DOMTopLevelEventTypes.TOP_DRAG_OVER, 'dragOver',\n  DOMTopLevelEventTypes.TOP_MOUSE_MOVE, 'mouseMove',\n  DOMTopLevelEventTypes.TOP_MOUSE_OUT, 'mouseOut',\n  DOMTopLevelEventTypes.TOP_MOUSE_OVER, 'mouseOver',\n  DOMTopLevelEventTypes.TOP_POINTER_MOVE, 'pointerMove',\n  DOMTopLevelEventTypes.TOP_POINTER_OUT, 'pointerOut',\n  DOMTopLevelEventTypes.TOP_POINTER_OVER, 'pointerOver',\n  DOMTopLevelEventTypes.TOP_SCROLL, 'scroll',\n  DOMTopLevelEventTypes.TOP_TOGGLE, 'toggle',\n  DOMTopLevelEventTypes.TOP_TOUCH_MOVE, 'touchMove',\n  DOMTopLevelEventTypes.TOP_WHEEL, 'wheel',\n];\n\n// prettier-ignore\nconst continuousPairsForSimpleEventPlugin = [\n  DOMTopLevelEventTypes.TOP_ABORT, 'abort',\n  DOMTopLevelEventTypes.TOP_ANIMATION_END, 'animationEnd',\n  DOMTopLevelEventTypes.TOP_ANIMATION_ITERATION, 'animationIteration',\n  DOMTopLevelEventTypes.TOP_ANIMATION_START, 'animationStart',\n  DOMTopLevelEventTypes.TOP_CAN_PLAY, 'canPlay',\n  DOMTopLevelEventTypes.TOP_CAN_PLAY_THROUGH, 'canPlayThrough',\n  DOMTopLevelEventTypes.TOP_DURATION_CHANGE, 'durationChange',\n  DOMTopLevelEventTypes.TOP_EMPTIED, 'emptied',\n  DOMTopLevelEventTypes.TOP_ENCRYPTED, 'encrypted',\n  DOMTopLevelEventTypes.TOP_ENDED, 'ended',\n  DOMTopLevelEventTypes.TOP_ERROR, 'error',\n  DOMTopLevelEventTypes.TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture',\n  DOMTopLevelEventTypes.TOP_LOAD, 'load',\n  DOMTopLevelEventTypes.TOP_LOADED_DATA, 'loadedData',\n  DOMTopLevelEventTypes.TOP_LOADED_METADATA, 'loadedMetadata',\n  DOMTopLevelEventTypes.TOP_LOAD_START, 'loadStart',\n  DOMTopLevelEventTypes.TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture',\n  DOMTopLevelEventTypes.TOP_PLAYING, 'playing',\n  DOMTopLevelEventTypes.TOP_PROGRESS, 'progress',\n  DOMTopLevelEventTypes.TOP_SEEKING, 'seeking',\n  DOMTopLevelEventTypes.TOP_STALLED, 'stalled',\n  DOMTopLevelEventTypes.TOP_SUSPEND, 'suspend',\n  DOMTopLevelEventTypes.TOP_TIME_UPDATE, 'timeUpdate',\n  DOMTopLevelEventTypes.TOP_TRANSITION_END, 'transitionEnd',\n  DOMTopLevelEventTypes.TOP_WAITING, 'waiting',\n];\n\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: [TOP_ABORT],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = new Map([\n *   [TOP_ABORT, { sameConfig }],\n * ]);\n */\n\nfunction processSimpleEventPluginPairsByPriority(\n  eventTypes: Array<DOMTopLevelEventType | string>,\n  priority: EventPriority,\n): void {\n  // As the event types are in pairs of two, we need to iterate\n  // through in twos. The events are in pairs of two to save code\n  // and improve init perf of processing this array, as it will\n  // result in far fewer object allocations and property accesses\n  // if we only use three arrays to process all the categories of\n  // instead of tuples.\n  for (let i = 0; i < eventTypes.length; i += 2) {\n    const topEvent = ((eventTypes[i]: any): DOMTopLevelEventType);\n    const event = ((eventTypes[i + 1]: any): string);\n    const capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n    const onEvent = 'on' + capitalizedEvent;\n\n    const config = {\n      phasedRegistrationNames: {\n        bubbled: onEvent,\n        captured: onEvent + 'Capture',\n      },\n      dependencies: [topEvent],\n      eventPriority: priority,\n    };\n    eventPriorities.set(topEvent, priority);\n    topLevelEventsToDispatchConfig.set(topEvent, config);\n    simpleEventPluginEventTypes[event] = config;\n  }\n}\n\nfunction processTopEventPairsByPriority(\n  eventTypes: Array<DOMTopLevelEventType | string>,\n  priority: EventPriority,\n): void {\n  for (let i = 0; i < eventTypes.length; i++) {\n    eventPriorities.set(eventTypes[i], priority);\n  }\n}\n\n// SimpleEventPlugin\nprocessSimpleEventPluginPairsByPriority(\n  discreteEventPairsForSimpleEventPlugin,\n  DiscreteEvent,\n);\nprocessSimpleEventPluginPairsByPriority(\n  userBlockingPairsForSimpleEventPlugin,\n  UserBlockingEvent,\n);\nprocessSimpleEventPluginPairsByPriority(\n  continuousPairsForSimpleEventPlugin,\n  ContinuousEvent,\n);\n// Not used by SimpleEventPlugin\nprocessTopEventPairsByPriority(otherDiscreteEvents, DiscreteEvent);\n\nexport function getEventPriorityForPluginSystem(\n  topLevelType: TopLevelType,\n): EventPriority {\n  const priority = eventPriorities.get(topLevelType);\n  // Default to a ContinuousEvent. Note: we might\n  // want to warn if we can't detect the priority\n  // for the event.\n  return priority === undefined ? ContinuousEvent : priority;\n}\n"]},"metadata":{},"sourceType":"module"}