{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nexport function addEventBubbleListener(element, eventType, listener) {\n  element.addEventListener(eventType, listener, false);\n}\nexport function addEventCaptureListener(element, eventType, listener) {\n  element.addEventListener(eventType, listener, true);\n}\nexport function addEventCaptureListenerWithPassiveFlag(element, eventType, listener, passive) {\n  element.addEventListener(eventType, listener, {\n    capture: true,\n    passive\n  });\n}","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react-dom/src/events/EventListener.js"],"names":["addEventBubbleListener","element","eventType","listener","addEventListener","addEventCaptureListener","addEventCaptureListenerWithPassiveFlag","passive","capture"],"mappings":"AAAA;;;;;;;;AASA,OAAO,SAASA,sBAAT,CACLC,OADK,EAELC,SAFK,EAGLC,QAHK,EAIC;AACNF,EAAAA,OAAO,CAACG,gBAAR,CAAyBF,SAAzB,EAAoCC,QAApC,EAA8C,KAA9C;AACD;AAED,OAAO,SAASE,uBAAT,CACLJ,OADK,EAELC,SAFK,EAGLC,QAHK,EAIC;AACNF,EAAAA,OAAO,CAACG,gBAAR,CAAyBF,SAAzB,EAAoCC,QAApC,EAA8C,IAA9C;AACD;AAED,OAAO,SAASG,sCAAT,CACLL,OADK,EAELC,SAFK,EAGLC,QAHK,EAILI,OAJK,EAKC;AACNN,EAAAA,OAAO,CAACG,gBAAR,CAAyBF,SAAzB,EAAoCC,QAApC,EAA8C;AAC5CK,IAAAA,OAAO,EAAE,IADmC;AAE5CD,IAAAA;AAF4C,GAA9C;AAID","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function addEventBubbleListener(\n  element: Document | Element | Node,\n  eventType: string,\n  listener: Function,\n): void {\n  element.addEventListener(eventType, listener, false);\n}\n\nexport function addEventCaptureListener(\n  element: Document | Element | Node,\n  eventType: string,\n  listener: Function,\n): void {\n  element.addEventListener(eventType, listener, true);\n}\n\nexport function addEventCaptureListenerWithPassiveFlag(\n  element: Document | Element | Node,\n  eventType: string,\n  listener: Function,\n  passive: boolean,\n): void {\n  element.addEventListener(eventType, listener, {\n    capture: true,\n    passive,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}