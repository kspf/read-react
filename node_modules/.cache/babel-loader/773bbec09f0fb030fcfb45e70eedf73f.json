{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'shared/invariant';\nimport { REACT_RESPONDER_TYPE } from 'shared/ReactSymbols';\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\n\nfunction resolveDispatcher() {\n  const dispatcher = ReactCurrentDispatcher.current;\n  invariant(dispatcher !== null, 'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.');\n  return dispatcher;\n}\n\nexport function useContext(Context, unstable_observedBits) {\n  const dispatcher = resolveDispatcher();\n\n  if (__DEV__) {\n    if (unstable_observedBits !== undefined) {\n      console.error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\\n\\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '');\n    } // TODO: add a more generic warning for invalid values.\n\n\n    if (Context._context !== undefined) {\n      const realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        console.error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        console.error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\nexport function useState(initialState) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nexport function useReducer(reducer, initialArg, init) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nexport function useRef(initialValue) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nexport function useEffect(create, deps) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nexport function useLayoutEffect(create, deps) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nexport function useCallback(callback, deps) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nexport function useMemo(create, deps) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nexport function useImperativeHandle(ref, create, deps) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nexport function useDebugValue(value, formatterFn) {\n  if (__DEV__) {\n    const dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\nexport const emptyObject = {};\nexport function useResponder(responder, listenerProps) {\n  const dispatcher = resolveDispatcher();\n\n  if (__DEV__) {\n    if (responder == null || responder.$$typeof !== REACT_RESPONDER_TYPE) {\n      console.error('useResponder: invalid first argument. Expected an event responder, but instead got %s', responder);\n      return;\n    }\n  }\n\n  return dispatcher.useResponder(responder, listenerProps || emptyObject);\n}\nexport function useTransition(config) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useTransition(config);\n}\nexport function useDeferredValue(value, config) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value, config);\n}","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react/src/ReactHooks.js"],"names":["invariant","REACT_RESPONDER_TYPE","ReactCurrentDispatcher","resolveDispatcher","dispatcher","current","useContext","Context","unstable_observedBits","__DEV__","undefined","console","error","Array","isArray","arguments","_context","realContext","Consumer","Provider","useState","initialState","useReducer","reducer","initialArg","init","useRef","initialValue","useEffect","create","deps","useLayoutEffect","useCallback","callback","useMemo","useImperativeHandle","ref","useDebugValue","value","formatterFn","emptyObject","useResponder","responder","listenerProps","$$typeof","useTransition","config","useDeferredValue"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  ReactContext,\n  ReactEventResponder,\n  ReactEventResponderListener,\n} from 'shared/ReactTypes';\nimport invariant from 'shared/invariant';\nimport {REACT_RESPONDER_TYPE} from 'shared/ReactSymbols';\n\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\n\ntype BasicStateAction<S> = (S => S) | S;\ntype Dispatch<A> = A => void;\n\nfunction resolveDispatcher() {\n  const dispatcher = ReactCurrentDispatcher.current;\n  invariant(\n    dispatcher !== null,\n    'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n      ' one of the following reasons:\\n' +\n      '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n      '2. You might be breaking the Rules of Hooks\\n' +\n      '3. You might have more than one copy of React in the same app\\n' +\n      'See https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.',\n  );\n  return dispatcher;\n}\n\nexport function useContext<T>(\n  Context: ReactContext<T>,\n  unstable_observedBits: number | boolean | void,\n) {\n  const dispatcher = resolveDispatcher();\n  if (__DEV__) {\n    if (unstable_observedBits !== undefined) {\n      console.error(\n        'useContext() second argument is reserved for future ' +\n          'use in React. Passing it is not supported. ' +\n          'You passed: %s.%s',\n        unstable_observedBits,\n        typeof unstable_observedBits === 'number' && Array.isArray(arguments[2])\n          ? '\\n\\nDid you call array.map(useContext)? ' +\n              'Calling Hooks inside a loop is not supported. ' +\n              'Learn more at https://fb.me/rules-of-hooks'\n          : '',\n      );\n    }\n\n    // TODO: add a more generic warning for invalid values.\n    if ((Context: any)._context !== undefined) {\n      const realContext = (Context: any)._context;\n      // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n      if (realContext.Consumer === Context) {\n        console.error(\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\n        );\n      } else if (realContext.Provider === Context) {\n        console.error(\n          'Calling useContext(Context.Provider) is not supported. ' +\n            'Did you mean to call useContext(Context) instead?',\n        );\n      }\n    }\n  }\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\n\nexport function useState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\n\nexport function useReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\n\nexport function useRef<T>(initialValue: T): {|current: T|} {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\n\nexport function useEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\n\nexport function useLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\n\nexport function useCallback<T>(\n  callback: T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\n\nexport function useMemo<T>(\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\n\nexport function useImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\n\nexport function useDebugValue<T>(\n  value: T,\n  formatterFn: ?(value: T) => mixed,\n): void {\n  if (__DEV__) {\n    const dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\nexport const emptyObject = {};\n\nexport function useResponder(\n  responder: ReactEventResponder<any, any>,\n  listenerProps: ?Object,\n): ?ReactEventResponderListener<any, any> {\n  const dispatcher = resolveDispatcher();\n  if (__DEV__) {\n    if (responder == null || responder.$$typeof !== REACT_RESPONDER_TYPE) {\n      console.error(\n        'useResponder: invalid first argument. Expected an event responder, but instead got %s',\n        responder,\n      );\n      return;\n    }\n  }\n  return dispatcher.useResponder(responder, listenerProps || emptyObject);\n}\n\nexport function useTransition(\n  config: ?Object,\n): [(() => void) => void, boolean] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useTransition(config);\n}\n\nexport function useDeferredValue<T>(value: T, config: ?Object): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value, config);\n}\n"]},"metadata":{},"sourceType":"module"}