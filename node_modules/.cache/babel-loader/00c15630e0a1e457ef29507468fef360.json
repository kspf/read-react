{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { registrationNameModules } from 'legacy-events/EventPluginRegistry';\nimport { canUseDOM } from 'shared/ExecutionEnvironment';\nimport endsWith from 'shared/endsWith';\nimport { setListenToResponderEventTypes } from '../events/DeprecatedDOMEventResponderSystem';\nimport { getValueForAttribute, getValueForProperty, setValueForProperty } from './DOMPropertyOperations';\nimport { initWrapperState as ReactDOMInputInitWrapperState, getHostProps as ReactDOMInputGetHostProps, postMountWrapper as ReactDOMInputPostMountWrapper, updateChecked as ReactDOMInputUpdateChecked, updateWrapper as ReactDOMInputUpdateWrapper, restoreControlledState as ReactDOMInputRestoreControlledState } from './ReactDOMInput';\nimport { getHostProps as ReactDOMOptionGetHostProps, postMountWrapper as ReactDOMOptionPostMountWrapper, validateProps as ReactDOMOptionValidateProps } from './ReactDOMOption';\nimport { initWrapperState as ReactDOMSelectInitWrapperState, getHostProps as ReactDOMSelectGetHostProps, postMountWrapper as ReactDOMSelectPostMountWrapper, restoreControlledState as ReactDOMSelectRestoreControlledState, postUpdateWrapper as ReactDOMSelectPostUpdateWrapper } from './ReactDOMSelect';\nimport { initWrapperState as ReactDOMTextareaInitWrapperState, getHostProps as ReactDOMTextareaGetHostProps, postMountWrapper as ReactDOMTextareaPostMountWrapper, updateWrapper as ReactDOMTextareaUpdateWrapper, restoreControlledState as ReactDOMTextareaRestoreControlledState } from './ReactDOMTextarea';\nimport { track } from './inputValueTracking';\nimport setInnerHTML from './setInnerHTML';\nimport setTextContent from './setTextContent';\nimport { TOP_ERROR, TOP_INVALID, TOP_LOAD, TOP_RESET, TOP_SUBMIT, TOP_TOGGLE } from '../events/DOMTopLevelEventTypes';\nimport { getListenerMapForElement } from '../events/DOMEventListenerMap';\nimport { addResponderEventSystemEvent, removeActiveResponderEventSystemEvent, trapBubbledEvent } from '../events/ReactDOMEventListener.js';\nimport { mediaEventTypes } from '../events/DOMTopLevelEventTypes';\nimport { createDangerousStringForStyles, setValueForStyles, validateShorthandPropertyCollisionInDev } from '../shared/CSSPropertyOperations';\nimport { Namespaces, getIntrinsicNamespace } from '../shared/DOMNamespaces';\nimport { getPropertyInfo, shouldIgnoreAttribute, shouldRemoveAttribute } from '../shared/DOMProperty';\nimport assertValidProps from '../shared/assertValidProps';\nimport { DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE } from '../shared/HTMLNodeType';\nimport isCustomComponent from '../shared/isCustomComponent';\nimport possibleStandardNames from '../shared/possibleStandardNames';\nimport { validateProperties as validateARIAProperties } from '../shared/ReactDOMInvalidARIAHook';\nimport { validateProperties as validateInputProperties } from '../shared/ReactDOMNullInputValuePropHook';\nimport { validateProperties as validateUnknownProperties } from '../shared/ReactDOMUnknownPropertyHook';\nimport { enableDeprecatedFlareAPI, enableTrustedTypesIntegration } from 'shared/ReactFeatureFlags';\nimport { legacyListenToEvent } from '../events/DOMLegacyEventPluginSystem';\nlet didWarnInvalidHydration = false;\nlet didWarnScriptTags = false;\nconst DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\nconst SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\nconst SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\nconst AUTOFOCUS = 'autoFocus';\nconst CHILDREN = 'children';\nconst STYLE = 'style';\nconst HTML = '__html';\nconst DEPRECATED_flareListeners = 'DEPRECATED_flareListeners';\nconst {\n  html: HTML_NAMESPACE\n} = Namespaces;\nlet warnedUnknownTags;\nlet suppressHydrationWarning;\nlet validatePropertiesInDevelopment;\nlet warnForTextDifference;\nlet warnForPropDifference;\nlet warnForExtraAttributes;\nlet warnForInvalidEventListener;\nlet canDiffStyleForHydrationWarning;\nlet normalizeMarkupForTextOrAttribute;\nlet normalizeHTML;\n\nif (__DEV__) {\n  warnedUnknownTags = {\n    // Chrome is the only major browser not shipping <time>. But as of July\n    // 2017 it intends to ship it due to widespread usage. We intentionally\n    // *don't* warn for <time> even if it's unrecognized by Chrome because\n    // it soon will be, and many apps have been using it anyway.\n    time: true,\n    // There are working polyfills for <dialog>. Let people use it.\n    dialog: true,\n    // Electron ships a custom <webview> tag to display external web content in\n    // an isolated frame and process.\n    // This tag is not present in non Electron environments such as JSDom which\n    // is often used for testing purposes.\n    // @see https://electronjs.org/docs/api/webview-tag\n    webview: true\n  };\n\n  validatePropertiesInDevelopment = function (type, props) {\n    validateARIAProperties(type, props);\n    validateInputProperties(type, props);\n    validateUnknownProperties(type, props,\n    /* canUseEventSystem */\n    true);\n  }; // IE 11 parses & normalizes the style attribute as opposed to other\n  // browsers. It adds spaces and sorts the properties in some\n  // non-alphabetical order. Handling that would require sorting CSS\n  // properties in the client & server versions or applying\n  // `expectedStyle` to a temporary DOM node to read its `style` attribute\n  // normalized. Since it only affects IE, we're skipping style warnings\n  // in that browser completely in favor of doing all that work.\n  // See https://github.com/facebook/react/issues/11807\n\n\n  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode; // HTML parsing normalizes CR and CRLF to LF.\n  // It also can turn \\u0000 into \\uFFFD inside attributes.\n  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream\n  // If we have a mismatch, it might be caused by that.\n  // We will still patch up in this case but not fire the warning.\n\n  const NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g;\n  const NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\n\n  normalizeMarkupForTextOrAttribute = function (markup) {\n    const markupString = typeof markup === 'string' ? markup : '' + markup;\n    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');\n  };\n\n  warnForTextDifference = function (serverText, clientText) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    const normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);\n    const normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);\n\n    if (normalizedServerText === normalizedClientText) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText);\n  };\n\n  warnForPropDifference = function (propName, serverValue, clientValue) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    const normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);\n    const normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);\n\n    if (normalizedServerValue === normalizedClientValue) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));\n  };\n\n  warnForExtraAttributes = function (attributeNames) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    const names = [];\n    attributeNames.forEach(function (name) {\n      names.push(name);\n    });\n    console.error('Extra attributes from the server: %s', names);\n  };\n\n  warnForInvalidEventListener = function (registrationName, listener) {\n    if (listener === false) {\n      console.error('Expected `%s` listener to be a function, instead got `false`.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);\n    } else {\n      console.error('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);\n    }\n  }; // Parse the HTML and read it back to normalize the HTML string so that it\n  // can be used for comparison.\n\n\n  normalizeHTML = function (parent, html) {\n    // We could have created a separate document here to avoid\n    // re-initializing custom elements if they exist. But this breaks\n    // how <noscript> is being handled. So we use the same document.\n    // See the discussion in https://github.com/facebook/react/pull/11157.\n    const testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);\n    testElement.innerHTML = html;\n    return testElement.innerHTML;\n  };\n}\n\nfunction ensureListeningTo(rootContainerElement, registrationName) {\n  const isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;\n  const doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;\n  legacyListenToEvent(registrationName, doc);\n}\n\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;\n}\n\nfunction noop() {}\n\nexport function trapClickOnNonInteractiveElement(node) {\n  // Mobile Safari does not fire properly bubble click events on\n  // non-interactive elements, which means delegated click listeners do not\n  // fire. The workaround for this bug involves attaching an empty click\n  // listener on the target node.\n  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n  // Just set it using the onclick property so that we don't have to manage any\n  // bookkeeping for it. Not sure if we need to clear it when the listener is\n  // removed.\n  // TODO: Only do this for the relevant Safaris maybe?\n  node.onclick = noop;\n}\n\nfunction setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {\n  for (const propKey in nextProps) {\n    if (!nextProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n\n    const nextProp = nextProps[propKey];\n\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      } // Relies on `updateStylesByID` not mutating `styleUpdates`.\n\n\n      setValueForStyles(domElement, nextProp);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n\n      if (nextHtml != null) {\n        setInnerHTML(domElement, nextHtml);\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string') {\n        // Avoid setting initial textContent when the text is empty. In IE11 setting\n        // textContent on a <textarea> will cause the placeholder to not\n        // show within the <textarea> until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        const canSetTextContent = tag !== 'textarea' || nextProp !== '';\n\n        if (canSetTextContent) {\n          setTextContent(domElement, nextProp);\n        }\n      } else if (typeof nextProp === 'number') {\n        setTextContent(domElement, '' + nextProp);\n      }\n    } else if (enableDeprecatedFlareAPI && propKey === DEPRECATED_flareListeners || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) {// Noop\n    } else if (propKey === AUTOFOCUS) {// We polyfill it separately on the client during commit.\n      // We could have excluded it in the property list instead of\n      // adding a special case here, but then it wouldn't be emitted\n      // on server rendering (but we *do* want to emit it in SSR).\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n    } else if (nextProp != null) {\n      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\n    }\n  }\n}\n\nfunction updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {\n  // TODO: Handle wasCustomComponentTag\n  for (let i = 0; i < updatePayload.length; i += 2) {\n    const propKey = updatePayload[i];\n    const propValue = updatePayload[i + 1];\n\n    if (propKey === STYLE) {\n      setValueForStyles(domElement, propValue);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      setInnerHTML(domElement, propValue);\n    } else if (propKey === CHILDREN) {\n      setTextContent(domElement, propValue);\n    } else {\n      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\n    }\n  }\n}\n\nexport function createElement(type, props, rootContainerElement, parentNamespace) {\n  let isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML\n  // tags get no namespace.\n\n  const ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);\n  let domElement;\n  let namespaceURI = parentNamespace;\n\n  if (namespaceURI === HTML_NAMESPACE) {\n    namespaceURI = getIntrinsicNamespace(type);\n  }\n\n  if (namespaceURI === HTML_NAMESPACE) {\n    if (__DEV__) {\n      isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to\n      // allow <SVG> or <mATH>.\n\n      if (!isCustomComponentTag && type !== type.toLowerCase()) {\n        console.error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type);\n      }\n    }\n\n    if (type === 'script') {\n      // Create the script via .innerHTML so its \"parser-inserted\" flag is\n      // set to true and it does not execute\n      const div = ownerDocument.createElement('div');\n\n      if (__DEV__) {\n        if (enableTrustedTypesIntegration && !didWarnScriptTags) {\n          console.error('Encountered a script tag while rendering React component. ' + 'Scripts inside React components are never executed when rendering ' + 'on the client. Consider using template tag instead ' + '(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template).');\n          didWarnScriptTags = true;\n        }\n      }\n\n      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\n      // This is guaranteed to yield a script element.\n\n      const firstChild = div.firstChild;\n      domElement = div.removeChild(firstChild);\n    } else if (typeof props.is === 'string') {\n      // $FlowIssue `createElement` should be updated for Web Components\n      domElement = ownerDocument.createElement(type, {\n        is: props.is\n      });\n    } else {\n      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\n      // See discussion in https://github.com/facebook/react/pull/6896\n      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n      domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`\n      // attributes on `select`s needs to be added before `option`s are inserted.\n      // This prevents:\n      // - a bug where the `select` does not scroll to the correct option because singular\n      //  `select` elements automatically pick the first item #13222\n      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239\n      // See https://github.com/facebook/react/issues/13222\n      // and https://github.com/facebook/react/issues/14239\n\n      if (type === 'select') {\n        const node = domElement;\n\n        if (props.multiple) {\n          node.multiple = true;\n        } else if (props.size) {\n          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where\n          // it is possible that no option is selected.\n          //\n          // This is only necessary when a select in \"single selection mode\".\n          node.size = props.size;\n        }\n      }\n    }\n  } else {\n    domElement = ownerDocument.createElementNS(namespaceURI, type);\n  }\n\n  if (__DEV__) {\n    if (namespaceURI === HTML_NAMESPACE) {\n      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {\n        warnedUnknownTags[type] = true;\n        console.error('The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);\n      }\n    }\n  }\n\n  return domElement;\n}\nexport function createTextNode(text, rootContainerElement) {\n  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);\n}\nexport function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {\n  const isCustomComponentTag = isCustomComponent(tag, rawProps);\n\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, rawProps);\n  } // TODO: Make sure that we check isMounted before firing any of these events.\n\n\n  let props;\n\n  switch (tag) {\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      trapBubbledEvent(TOP_LOAD, domElement);\n      props = rawProps;\n      break;\n\n    case 'video':\n    case 'audio':\n      // Create listener for each media event\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        trapBubbledEvent(mediaEventTypes[i], domElement);\n      }\n\n      props = rawProps;\n      break;\n\n    case 'source':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      props = rawProps;\n      break;\n\n    case 'img':\n    case 'image':\n    case 'link':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      trapBubbledEvent(TOP_LOAD, domElement);\n      props = rawProps;\n      break;\n\n    case 'form':\n      trapBubbledEvent(TOP_RESET, domElement);\n      trapBubbledEvent(TOP_SUBMIT, domElement);\n      props = rawProps;\n      break;\n\n    case 'details':\n      trapBubbledEvent(TOP_TOGGLE, domElement);\n      props = rawProps;\n      break;\n\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      props = ReactDOMInputGetHostProps(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      props = ReactDOMOptionGetHostProps(domElement, rawProps);\n      break;\n\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      props = ReactDOMSelectGetHostProps(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      props = ReactDOMTextareaGetHostProps(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n\n    default:\n      props = rawProps;\n  }\n\n  assertValidProps(tag, props);\n  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      ReactDOMInputPostMountWrapper(domElement, rawProps, false);\n      break;\n\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n\n    case 'option':\n      ReactDOMOptionPostMountWrapper(domElement, rawProps);\n      break;\n\n    case 'select':\n      ReactDOMSelectPostMountWrapper(domElement, rawProps);\n      break;\n\n    default:\n      if (typeof props.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n} // Calculate the diff between the two objects.\n\nexport function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, nextRawProps);\n  }\n\n  let updatePayload = null;\n  let lastProps;\n  let nextProps;\n\n  switch (tag) {\n    case 'input':\n      lastProps = ReactDOMInputGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMInputGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    case 'option':\n      lastProps = ReactDOMOptionGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMOptionGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    case 'select':\n      lastProps = ReactDOMSelectGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMSelectGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    case 'textarea':\n      lastProps = ReactDOMTextareaGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMTextareaGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    default:\n      lastProps = lastRawProps;\n      nextProps = nextRawProps;\n\n      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n\n  assertValidProps(tag, nextProps);\n  let propKey;\n  let styleName;\n  let styleUpdates = null;\n\n  for (propKey in lastProps) {\n    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n      continue;\n    }\n\n    if (propKey === STYLE) {\n      const lastStyle = lastProps[propKey];\n\n      for (styleName in lastStyle) {\n        if (lastStyle.hasOwnProperty(styleName)) {\n          if (!styleUpdates) {\n            styleUpdates = {};\n          }\n\n          styleUpdates[styleName] = '';\n        }\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {// Noop. This is handled by the clear text mechanism.\n    } else if (enableDeprecatedFlareAPI && propKey === DEPRECATED_flareListeners || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) {// Noop\n    } else if (propKey === AUTOFOCUS) {// Noop. It doesn't work on updates anyway.\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      // This is a special case. If any listener updates we need to ensure\n      // that the \"current\" fiber pointer gets updated so we need a commit\n      // to update this element.\n      if (!updatePayload) {\n        updatePayload = [];\n      }\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the whitelist in the commit phase instead.\n      (updatePayload = updatePayload || []).push(propKey, null);\n    }\n  }\n\n  for (propKey in nextProps) {\n    const nextProp = nextProps[propKey];\n    const lastProp = lastProps != null ? lastProps[propKey] : undefined;\n\n    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n      continue;\n    }\n\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n\n      if (lastProp) {\n        // Unset styles on `lastProp` but not on `nextProp`.\n        for (styleName in lastProp) {\n          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n\n            styleUpdates[styleName] = '';\n          }\n        } // Update styles that changed since `lastProp`.\n\n\n        for (styleName in nextProp) {\n          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n\n            styleUpdates[styleName] = nextProp[styleName];\n          }\n        }\n      } else {\n        // Relies on `updateStylesByID` not mutating `styleUpdates`.\n        if (!styleUpdates) {\n          if (!updatePayload) {\n            updatePayload = [];\n          }\n\n          updatePayload.push(propKey, styleUpdates);\n        }\n\n        styleUpdates = nextProp;\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n      const lastHtml = lastProp ? lastProp[HTML] : undefined;\n\n      if (nextHtml != null) {\n        if (lastHtml !== nextHtml) {\n          (updatePayload = updatePayload || []).push(propKey, nextHtml);\n        }\n      } else {// TODO: It might be too late to clear this if we have children\n        // inserted already.\n      }\n    } else if (propKey === CHILDREN) {\n      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {\n        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\n      }\n    } else if (enableDeprecatedFlareAPI && propKey === DEPRECATED_flareListeners || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) {// Noop\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        // We eagerly listen to this even though we haven't committed yet.\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n\n      if (!updatePayload && lastProp !== nextProp) {\n        // This is a special case. If any listener updates we need to ensure\n        // that the \"current\" props pointer gets updated so we need a commit\n        // to update this element.\n        updatePayload = [];\n      }\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the whitelist during the commit.\n      (updatePayload = updatePayload || []).push(propKey, nextProp);\n    }\n  }\n\n  if (styleUpdates) {\n    if (__DEV__) {\n      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);\n    }\n\n    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);\n  }\n\n  return updatePayload;\n} // Apply the diff.\n\nexport function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {\n  // Update checked *before* name.\n  // In the middle of an update, it is possible to have multiple checked.\n  // When a checked radio tries to change name, browser makes another radio's checked false.\n  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {\n    ReactDOMInputUpdateChecked(domElement, nextRawProps);\n  }\n\n  const wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\n  const isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.\n\n  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props\n  // changed.\n\n  switch (tag) {\n    case 'input':\n      // Update the wrapper around inputs *after* updating props. This has to\n      // happen after `updateDOMProperties`. Otherwise HTML5 input validations\n      // raise warnings and prevent the new value from being assigned.\n      ReactDOMInputUpdateWrapper(domElement, nextRawProps);\n      break;\n\n    case 'textarea':\n      ReactDOMTextareaUpdateWrapper(domElement, nextRawProps);\n      break;\n\n    case 'select':\n      // <select> value update needs to occur after <option> children\n      // reconciliation\n      ReactDOMSelectPostUpdateWrapper(domElement, nextRawProps);\n      break;\n  }\n}\n\nfunction getPossibleStandardName(propName) {\n  if (__DEV__) {\n    const lowerCasedName = propName.toLowerCase();\n\n    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      return null;\n    }\n\n    return possibleStandardNames[lowerCasedName] || null;\n  }\n\n  return null;\n}\n\nexport function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {\n  let isCustomComponentTag;\n  let extraAttributeNames;\n\n  if (__DEV__) {\n    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING] === true;\n    isCustomComponentTag = isCustomComponent(tag, rawProps);\n    validatePropertiesInDevelopment(tag, rawProps);\n  } // TODO: Make sure that we check isMounted before firing any of these events.\n\n\n  switch (tag) {\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      trapBubbledEvent(TOP_LOAD, domElement);\n      break;\n\n    case 'video':\n    case 'audio':\n      // Create listener for each media event\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        trapBubbledEvent(mediaEventTypes[i], domElement);\n      }\n\n      break;\n\n    case 'source':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      break;\n\n    case 'img':\n    case 'image':\n    case 'link':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      trapBubbledEvent(TOP_LOAD, domElement);\n      break;\n\n    case 'form':\n      trapBubbledEvent(TOP_RESET, domElement);\n      trapBubbledEvent(TOP_SUBMIT, domElement);\n      break;\n\n    case 'details':\n      trapBubbledEvent(TOP_TOGGLE, domElement);\n      break;\n\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      break;\n\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n  }\n\n  assertValidProps(tag, rawProps);\n\n  if (__DEV__) {\n    extraAttributeNames = new Set();\n    const attributes = domElement.attributes;\n\n    for (let i = 0; i < attributes.length; i++) {\n      const name = attributes[i].name.toLowerCase();\n\n      switch (name) {\n        // Built-in SSR attribute is whitelisted\n        case 'data-reactroot':\n          break;\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n\n        case 'value':\n          break;\n\n        case 'checked':\n          break;\n\n        case 'selected':\n          break;\n\n        default:\n          // Intentionally use the original name.\n          // See discussion in https://github.com/facebook/react/pull/10676.\n          extraAttributeNames.add(attributes[i].name);\n      }\n    }\n  }\n\n  let updatePayload = null;\n\n  for (const propKey in rawProps) {\n    if (!rawProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n\n    const nextProp = rawProps[propKey];\n\n    if (propKey === CHILDREN) {\n      // For text content children we compare against textContent. This\n      // might match additional HTML that is hidden when we read it using\n      // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\n      // satisfies our requirement. Our requirement is not to produce perfect\n      // HTML and attributes. Ideally we should preserve structure but it's\n      // ok not to if the visible content is still enough to indicate what\n      // even listeners these nodes might be wired up to.\n      // TODO: Warn if there is more than a single textNode as a child.\n      // TODO: Should we use domElement.firstChild.nodeValue to compare?\n      if (typeof nextProp === 'string') {\n        if (domElement.textContent !== nextProp) {\n          if (__DEV__ && !suppressHydrationWarning) {\n            warnForTextDifference(domElement.textContent, nextProp);\n          }\n\n          updatePayload = [CHILDREN, nextProp];\n        }\n      } else if (typeof nextProp === 'number') {\n        if (domElement.textContent !== '' + nextProp) {\n          if (__DEV__ && !suppressHydrationWarning) {\n            warnForTextDifference(domElement.textContent, nextProp);\n          }\n\n          updatePayload = [CHILDREN, '' + nextProp];\n        }\n      }\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n    } else if (__DEV__ && // Convince Flow we've calculated it (it's DEV-only in this method.)\n    typeof isCustomComponentTag === 'boolean') {\n      // Validate that the properties correspond to their expected values.\n      let serverValue;\n      const propertyInfo = getPropertyInfo(propKey);\n\n      if (suppressHydrationWarning) {// Don't bother comparing. We're ignoring all these warnings.\n      } else if (enableDeprecatedFlareAPI && propKey === DEPRECATED_flareListeners || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated\n      // TODO: Only ignore them on controlled tags.\n      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {// Noop\n      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n        const serverHTML = domElement.innerHTML;\n        const nextHtml = nextProp ? nextProp[HTML] : undefined;\n        const expectedHTML = normalizeHTML(domElement, nextHtml != null ? nextHtml : '');\n\n        if (expectedHTML !== serverHTML) {\n          warnForPropDifference(propKey, serverHTML, expectedHTML);\n        }\n      } else if (propKey === STYLE) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey);\n\n        if (canDiffStyleForHydrationWarning) {\n          const expectedStyle = createDangerousStringForStyles(nextProp);\n          serverValue = domElement.getAttribute('style');\n\n          if (expectedStyle !== serverValue) {\n            warnForPropDifference(propKey, serverValue, expectedStyle);\n          }\n        }\n      } else if (isCustomComponentTag) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n        serverValue = getValueForAttribute(domElement, propKey, nextProp);\n\n        if (nextProp !== serverValue) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {\n        let isMismatchDueToBadCasing = false;\n\n        if (propertyInfo !== null) {\n          // $FlowFixMe - Should be inferred as not undefined.\n          extraAttributeNames.delete(propertyInfo.attributeName);\n          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);\n        } else {\n          let ownNamespace = parentNamespace;\n\n          if (ownNamespace === HTML_NAMESPACE) {\n            ownNamespace = getIntrinsicNamespace(tag);\n          }\n\n          if (ownNamespace === HTML_NAMESPACE) {\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey.toLowerCase());\n          } else {\n            const standardName = getPossibleStandardName(propKey);\n\n            if (standardName !== null && standardName !== propKey) {\n              // If an SVG prop is supplied with bad casing, it will\n              // be successfully parsed from HTML, but will produce a mismatch\n              // (and would be incorrectly rendered on the client).\n              // However, we already warn about bad casing elsewhere.\n              // So we'll skip the misleading extra mismatch warning in this case.\n              isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.\n\n              extraAttributeNames.delete(standardName);\n            } // $FlowFixMe - Should be inferred as not undefined.\n\n\n            extraAttributeNames.delete(propKey);\n          }\n\n          serverValue = getValueForAttribute(domElement, propKey, nextProp);\n        }\n\n        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      }\n    }\n  }\n\n  if (__DEV__) {\n    // $FlowFixMe - Should be inferred as not undefined.\n    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {\n      // $FlowFixMe - Should be inferred as not undefined.\n      warnForExtraAttributes(extraAttributeNames);\n    }\n  }\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      ReactDOMInputPostMountWrapper(domElement, rawProps, true);\n      break;\n\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n\n    case 'select':\n    case 'option':\n      // For input and textarea we current always set the value property at\n      // post mount to force it to diverge from attributes. However, for\n      // option and select we don't quite do the same thing and select\n      // is not resilient to the DOM state changing so we don't do that here.\n      // TODO: Consider not doing this for input and textarea.\n      break;\n\n    default:\n      if (typeof rawProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n\n  return updatePayload;\n}\nexport function diffHydratedText(textNode, text) {\n  const isDifferent = textNode.nodeValue !== text;\n  return isDifferent;\n}\nexport function warnForUnmatchedText(textNode, text) {\n  if (__DEV__) {\n    warnForTextDifference(textNode.nodeValue, text);\n  }\n}\nexport function warnForDeletedHydratableElement(parentNode, child) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());\n  }\n}\nexport function warnForDeletedHydratableText(parentNode, child) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Did not expect server HTML to contain the text node \"%s\" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());\n  }\n}\nexport function warnForInsertedHydratedElement(parentNode, tag, props) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());\n  }\n}\nexport function warnForInsertedHydratedText(parentNode, text) {\n  if (__DEV__) {\n    if (text === '') {\n      // We expect to insert empty text nodes since they're not represented in\n      // the HTML.\n      // TODO: Remove this special case if we can just avoid inserting empty\n      // text nodes.\n      return;\n    }\n\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Expected server HTML to contain a matching text node for \"%s\" in <%s>.', text, parentNode.nodeName.toLowerCase());\n  }\n}\nexport function restoreControlledState(domElement, tag, props) {\n  switch (tag) {\n    case 'input':\n      ReactDOMInputRestoreControlledState(domElement, props);\n      return;\n\n    case 'textarea':\n      ReactDOMTextareaRestoreControlledState(domElement, props);\n      return;\n\n    case 'select':\n      ReactDOMSelectRestoreControlledState(domElement, props);\n      return;\n  }\n}\nexport function listenToEventResponderEventTypes(eventTypes, document) {\n  if (enableDeprecatedFlareAPI) {\n    // Get the listening Map for this element. We use this to track\n    // what events we're listening to.\n    const listenerMap = getListenerMapForElement(document); // Go through each target event type of the event responder\n\n    for (let i = 0, length = eventTypes.length; i < length; ++i) {\n      const eventType = eventTypes[i];\n      const isPassive = !endsWith(eventType, '_active');\n      const eventKey = isPassive ? eventType + '_passive' : eventType;\n      const targetEventType = isPassive ? eventType : eventType.substring(0, eventType.length - 7);\n\n      if (!listenerMap.has(eventKey)) {\n        if (isPassive) {\n          const activeKey = targetEventType + '_active'; // If we have an active event listener, do not register\n          // a passive event listener. We use the same active event\n          // listener.\n\n          if (listenerMap.has(activeKey)) {\n            continue;\n          }\n        } else {\n          // If we have a passive event listener, remove the\n          // existing passive event listener before we add the\n          // active event listener.\n          const passiveKey = targetEventType + '_passive';\n          const passiveListener = listenerMap.get(passiveKey);\n\n          if (passiveListener != null) {\n            removeActiveResponderEventSystemEvent(document, targetEventType, passiveListener);\n          }\n        }\n\n        const eventListener = addResponderEventSystemEvent(document, targetEventType, isPassive);\n        listenerMap.set(eventKey, eventListener);\n      }\n    }\n  }\n} // We can remove this once the event API is stable and out of a flag\n\nif (enableDeprecatedFlareAPI) {\n  setListenToResponderEventTypes(listenToEventResponderEventTypes);\n}","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react-dom/src/client/ReactDOMComponent.js"],"names":["registrationNameModules","canUseDOM","endsWith","setListenToResponderEventTypes","getValueForAttribute","getValueForProperty","setValueForProperty","initWrapperState","ReactDOMInputInitWrapperState","getHostProps","ReactDOMInputGetHostProps","postMountWrapper","ReactDOMInputPostMountWrapper","updateChecked","ReactDOMInputUpdateChecked","updateWrapper","ReactDOMInputUpdateWrapper","restoreControlledState","ReactDOMInputRestoreControlledState","ReactDOMOptionGetHostProps","ReactDOMOptionPostMountWrapper","validateProps","ReactDOMOptionValidateProps","ReactDOMSelectInitWrapperState","ReactDOMSelectGetHostProps","ReactDOMSelectPostMountWrapper","ReactDOMSelectRestoreControlledState","postUpdateWrapper","ReactDOMSelectPostUpdateWrapper","ReactDOMTextareaInitWrapperState","ReactDOMTextareaGetHostProps","ReactDOMTextareaPostMountWrapper","ReactDOMTextareaUpdateWrapper","ReactDOMTextareaRestoreControlledState","track","setInnerHTML","setTextContent","TOP_ERROR","TOP_INVALID","TOP_LOAD","TOP_RESET","TOP_SUBMIT","TOP_TOGGLE","getListenerMapForElement","addResponderEventSystemEvent","removeActiveResponderEventSystemEvent","trapBubbledEvent","mediaEventTypes","createDangerousStringForStyles","setValueForStyles","validateShorthandPropertyCollisionInDev","Namespaces","getIntrinsicNamespace","getPropertyInfo","shouldIgnoreAttribute","shouldRemoveAttribute","assertValidProps","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","isCustomComponent","possibleStandardNames","validateProperties","validateARIAProperties","validateInputProperties","validateUnknownProperties","enableDeprecatedFlareAPI","enableTrustedTypesIntegration","legacyListenToEvent","didWarnInvalidHydration","didWarnScriptTags","DANGEROUSLY_SET_INNER_HTML","SUPPRESS_CONTENT_EDITABLE_WARNING","SUPPRESS_HYDRATION_WARNING","AUTOFOCUS","CHILDREN","STYLE","HTML","DEPRECATED_flareListeners","html","HTML_NAMESPACE","warnedUnknownTags","suppressHydrationWarning","validatePropertiesInDevelopment","warnForTextDifference","warnForPropDifference","warnForExtraAttributes","warnForInvalidEventListener","canDiffStyleForHydrationWarning","normalizeMarkupForTextOrAttribute","normalizeHTML","__DEV__","time","dialog","webview","type","props","document","documentMode","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","markup","markupString","replace","serverText","clientText","normalizedClientText","normalizedServerText","console","error","propName","serverValue","clientValue","normalizedClientValue","normalizedServerValue","JSON","stringify","attributeNames","names","forEach","name","push","registrationName","listener","parent","testElement","namespaceURI","ownerDocument","createElement","tagName","createElementNS","innerHTML","ensureListeningTo","rootContainerElement","isDocumentOrFragment","nodeType","doc","getOwnerDocumentFromRootContainer","noop","trapClickOnNonInteractiveElement","node","onclick","setInitialDOMProperties","tag","domElement","nextProps","isCustomComponentTag","propKey","hasOwnProperty","nextProp","Object","freeze","nextHtml","undefined","canSetTextContent","updateDOMProperties","updatePayload","wasCustomComponentTag","i","length","propValue","parentNamespace","toLowerCase","div","firstChild","removeChild","is","multiple","size","prototype","toString","call","createTextNode","text","setInitialProperties","rawProps","onClick","diffProperties","lastRawProps","nextRawProps","lastProps","styleName","styleUpdates","lastStyle","lastProp","lastHtml","updateProperties","getPossibleStandardName","lowerCasedName","diffHydratedProperties","extraAttributeNames","Set","attributes","add","textContent","propertyInfo","serverHTML","expectedHTML","delete","expectedStyle","getAttribute","isMismatchDueToBadCasing","attributeName","ownNamespace","standardName","diffHydratedText","textNode","isDifferent","nodeValue","warnForUnmatchedText","warnForDeletedHydratableElement","parentNode","child","nodeName","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","listenToEventResponderEventTypes","eventTypes","listenerMap","eventType","isPassive","eventKey","targetEventType","substring","has","activeKey","passiveKey","passiveListener","get","eventListener","set"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {registrationNameModules} from 'legacy-events/EventPluginRegistry';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\nimport endsWith from 'shared/endsWith';\nimport {setListenToResponderEventTypes} from '../events/DeprecatedDOMEventResponderSystem';\n\nimport {\n  getValueForAttribute,\n  getValueForProperty,\n  setValueForProperty,\n} from './DOMPropertyOperations';\nimport {\n  initWrapperState as ReactDOMInputInitWrapperState,\n  getHostProps as ReactDOMInputGetHostProps,\n  postMountWrapper as ReactDOMInputPostMountWrapper,\n  updateChecked as ReactDOMInputUpdateChecked,\n  updateWrapper as ReactDOMInputUpdateWrapper,\n  restoreControlledState as ReactDOMInputRestoreControlledState,\n} from './ReactDOMInput';\nimport {\n  getHostProps as ReactDOMOptionGetHostProps,\n  postMountWrapper as ReactDOMOptionPostMountWrapper,\n  validateProps as ReactDOMOptionValidateProps,\n} from './ReactDOMOption';\nimport {\n  initWrapperState as ReactDOMSelectInitWrapperState,\n  getHostProps as ReactDOMSelectGetHostProps,\n  postMountWrapper as ReactDOMSelectPostMountWrapper,\n  restoreControlledState as ReactDOMSelectRestoreControlledState,\n  postUpdateWrapper as ReactDOMSelectPostUpdateWrapper,\n} from './ReactDOMSelect';\nimport {\n  initWrapperState as ReactDOMTextareaInitWrapperState,\n  getHostProps as ReactDOMTextareaGetHostProps,\n  postMountWrapper as ReactDOMTextareaPostMountWrapper,\n  updateWrapper as ReactDOMTextareaUpdateWrapper,\n  restoreControlledState as ReactDOMTextareaRestoreControlledState,\n} from './ReactDOMTextarea';\nimport {track} from './inputValueTracking';\nimport setInnerHTML from './setInnerHTML';\nimport setTextContent from './setTextContent';\nimport {\n  TOP_ERROR,\n  TOP_INVALID,\n  TOP_LOAD,\n  TOP_RESET,\n  TOP_SUBMIT,\n  TOP_TOGGLE,\n} from '../events/DOMTopLevelEventTypes';\nimport {getListenerMapForElement} from '../events/DOMEventListenerMap';\nimport {\n  addResponderEventSystemEvent,\n  removeActiveResponderEventSystemEvent,\n  trapBubbledEvent,\n} from '../events/ReactDOMEventListener.js';\nimport {mediaEventTypes} from '../events/DOMTopLevelEventTypes';\nimport {\n  createDangerousStringForStyles,\n  setValueForStyles,\n  validateShorthandPropertyCollisionInDev,\n} from '../shared/CSSPropertyOperations';\nimport {Namespaces, getIntrinsicNamespace} from '../shared/DOMNamespaces';\nimport {\n  getPropertyInfo,\n  shouldIgnoreAttribute,\n  shouldRemoveAttribute,\n} from '../shared/DOMProperty';\nimport assertValidProps from '../shared/assertValidProps';\nimport {DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE} from '../shared/HTMLNodeType';\nimport isCustomComponent from '../shared/isCustomComponent';\nimport possibleStandardNames from '../shared/possibleStandardNames';\nimport {validateProperties as validateARIAProperties} from '../shared/ReactDOMInvalidARIAHook';\nimport {validateProperties as validateInputProperties} from '../shared/ReactDOMNullInputValuePropHook';\nimport {validateProperties as validateUnknownProperties} from '../shared/ReactDOMUnknownPropertyHook';\n\nimport {\n  enableDeprecatedFlareAPI,\n  enableTrustedTypesIntegration,\n} from 'shared/ReactFeatureFlags';\nimport {legacyListenToEvent} from '../events/DOMLegacyEventPluginSystem';\n\nlet didWarnInvalidHydration = false;\nlet didWarnScriptTags = false;\n\nconst DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\nconst SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\nconst SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\nconst AUTOFOCUS = 'autoFocus';\nconst CHILDREN = 'children';\nconst STYLE = 'style';\nconst HTML = '__html';\nconst DEPRECATED_flareListeners = 'DEPRECATED_flareListeners';\n\nconst {html: HTML_NAMESPACE} = Namespaces;\n\nlet warnedUnknownTags;\nlet suppressHydrationWarning;\n\nlet validatePropertiesInDevelopment;\nlet warnForTextDifference;\nlet warnForPropDifference;\nlet warnForExtraAttributes;\nlet warnForInvalidEventListener;\nlet canDiffStyleForHydrationWarning;\n\nlet normalizeMarkupForTextOrAttribute;\nlet normalizeHTML;\n\nif (__DEV__) {\n  warnedUnknownTags = {\n    // Chrome is the only major browser not shipping <time>. But as of July\n    // 2017 it intends to ship it due to widespread usage. We intentionally\n    // *don't* warn for <time> even if it's unrecognized by Chrome because\n    // it soon will be, and many apps have been using it anyway.\n    time: true,\n    // There are working polyfills for <dialog>. Let people use it.\n    dialog: true,\n    // Electron ships a custom <webview> tag to display external web content in\n    // an isolated frame and process.\n    // This tag is not present in non Electron environments such as JSDom which\n    // is often used for testing purposes.\n    // @see https://electronjs.org/docs/api/webview-tag\n    webview: true,\n  };\n\n  validatePropertiesInDevelopment = function(type, props) {\n    validateARIAProperties(type, props);\n    validateInputProperties(type, props);\n    validateUnknownProperties(type, props, /* canUseEventSystem */ true);\n  };\n\n  // IE 11 parses & normalizes the style attribute as opposed to other\n  // browsers. It adds spaces and sorts the properties in some\n  // non-alphabetical order. Handling that would require sorting CSS\n  // properties in the client & server versions or applying\n  // `expectedStyle` to a temporary DOM node to read its `style` attribute\n  // normalized. Since it only affects IE, we're skipping style warnings\n  // in that browser completely in favor of doing all that work.\n  // See https://github.com/facebook/react/issues/11807\n  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;\n\n  // HTML parsing normalizes CR and CRLF to LF.\n  // It also can turn \\u0000 into \\uFFFD inside attributes.\n  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream\n  // If we have a mismatch, it might be caused by that.\n  // We will still patch up in this case but not fire the warning.\n  const NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g;\n  const NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\n\n  normalizeMarkupForTextOrAttribute = function(markup: mixed): string {\n    const markupString =\n      typeof markup === 'string' ? markup : '' + (markup: any);\n    return markupString\n      .replace(NORMALIZE_NEWLINES_REGEX, '\\n')\n      .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');\n  };\n\n  warnForTextDifference = function(\n    serverText: string,\n    clientText: string | number,\n  ) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    const normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);\n    const normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);\n    if (normalizedServerText === normalizedClientText) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Text content did not match. Server: \"%s\" Client: \"%s\"',\n      normalizedServerText,\n      normalizedClientText,\n    );\n  };\n\n  warnForPropDifference = function(\n    propName: string,\n    serverValue: mixed,\n    clientValue: mixed,\n  ) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    const normalizedClientValue = normalizeMarkupForTextOrAttribute(\n      clientValue,\n    );\n    const normalizedServerValue = normalizeMarkupForTextOrAttribute(\n      serverValue,\n    );\n    if (normalizedServerValue === normalizedClientValue) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Prop `%s` did not match. Server: %s Client: %s',\n      propName,\n      JSON.stringify(normalizedServerValue),\n      JSON.stringify(normalizedClientValue),\n    );\n  };\n\n  warnForExtraAttributes = function(attributeNames: Set<string>) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    const names = [];\n    attributeNames.forEach(function(name) {\n      names.push(name);\n    });\n    console.error('Extra attributes from the server: %s', names);\n  };\n\n  warnForInvalidEventListener = function(registrationName, listener) {\n    if (listener === false) {\n      console.error(\n        'Expected `%s` listener to be a function, instead got `false`.\\n\\n' +\n          'If you used to conditionally omit it with %s={condition && value}, ' +\n          'pass %s={condition ? value : undefined} instead.',\n        registrationName,\n        registrationName,\n        registrationName,\n      );\n    } else {\n      console.error(\n        'Expected `%s` listener to be a function, instead got a value of `%s` type.',\n        registrationName,\n        typeof listener,\n      );\n    }\n  };\n\n  // Parse the HTML and read it back to normalize the HTML string so that it\n  // can be used for comparison.\n  normalizeHTML = function(parent: Element, html: string) {\n    // We could have created a separate document here to avoid\n    // re-initializing custom elements if they exist. But this breaks\n    // how <noscript> is being handled. So we use the same document.\n    // See the discussion in https://github.com/facebook/react/pull/11157.\n    const testElement =\n      parent.namespaceURI === HTML_NAMESPACE\n        ? parent.ownerDocument.createElement(parent.tagName)\n        : parent.ownerDocument.createElementNS(\n            (parent.namespaceURI: any),\n            parent.tagName,\n          );\n    testElement.innerHTML = html;\n    return testElement.innerHTML;\n  };\n}\n\nfunction ensureListeningTo(\n  rootContainerElement: Element | Node,\n  registrationName: string,\n): void {\n  const isDocumentOrFragment =\n    rootContainerElement.nodeType === DOCUMENT_NODE ||\n    rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;\n  const doc = isDocumentOrFragment\n    ? rootContainerElement\n    : rootContainerElement.ownerDocument;\n  legacyListenToEvent(registrationName, doc);\n}\n\nfunction getOwnerDocumentFromRootContainer(\n  rootContainerElement: Element | Document,\n): Document {\n  return rootContainerElement.nodeType === DOCUMENT_NODE\n    ? (rootContainerElement: any)\n    : rootContainerElement.ownerDocument;\n}\n\nfunction noop() {}\n\nexport function trapClickOnNonInteractiveElement(node: HTMLElement) {\n  // Mobile Safari does not fire properly bubble click events on\n  // non-interactive elements, which means delegated click listeners do not\n  // fire. The workaround for this bug involves attaching an empty click\n  // listener on the target node.\n  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n  // Just set it using the onclick property so that we don't have to manage any\n  // bookkeeping for it. Not sure if we need to clear it when the listener is\n  // removed.\n  // TODO: Only do this for the relevant Safaris maybe?\n  node.onclick = noop;\n}\n\nfunction setInitialDOMProperties(\n  tag: string,\n  domElement: Element,\n  rootContainerElement: Element | Document,\n  nextProps: Object,\n  isCustomComponentTag: boolean,\n): void {\n  for (const propKey in nextProps) {\n    if (!nextProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n    const nextProp = nextProps[propKey];\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n      // Relies on `updateStylesByID` not mutating `styleUpdates`.\n      setValueForStyles(domElement, nextProp);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n      if (nextHtml != null) {\n        setInnerHTML(domElement, nextHtml);\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string') {\n        // Avoid setting initial textContent when the text is empty. In IE11 setting\n        // textContent on a <textarea> will cause the placeholder to not\n        // show within the <textarea> until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        const canSetTextContent = tag !== 'textarea' || nextProp !== '';\n        if (canSetTextContent) {\n          setTextContent(domElement, nextProp);\n        }\n      } else if (typeof nextProp === 'number') {\n        setTextContent(domElement, '' + nextProp);\n      }\n    } else if (\n      (enableDeprecatedFlareAPI && propKey === DEPRECATED_flareListeners) ||\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (propKey === AUTOFOCUS) {\n      // We polyfill it separately on the client during commit.\n      // We could have excluded it in the property list instead of\n      // adding a special case here, but then it wouldn't be emitted\n      // on server rendering (but we *do* want to emit it in SSR).\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n    } else if (nextProp != null) {\n      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\n    }\n  }\n}\n\nfunction updateDOMProperties(\n  domElement: Element,\n  updatePayload: Array<any>,\n  wasCustomComponentTag: boolean,\n  isCustomComponentTag: boolean,\n): void {\n  // TODO: Handle wasCustomComponentTag\n  for (let i = 0; i < updatePayload.length; i += 2) {\n    const propKey = updatePayload[i];\n    const propValue = updatePayload[i + 1];\n    if (propKey === STYLE) {\n      setValueForStyles(domElement, propValue);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      setInnerHTML(domElement, propValue);\n    } else if (propKey === CHILDREN) {\n      setTextContent(domElement, propValue);\n    } else {\n      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\n    }\n  }\n}\n\nexport function createElement(\n  type: string,\n  props: Object,\n  rootContainerElement: Element | Document,\n  parentNamespace: string,\n): Element {\n  let isCustomComponentTag;\n\n  // We create tags in the namespace of their parent container, except HTML\n  // tags get no namespace.\n  const ownerDocument: Document = getOwnerDocumentFromRootContainer(\n    rootContainerElement,\n  );\n  let domElement: Element;\n  let namespaceURI = parentNamespace;\n  if (namespaceURI === HTML_NAMESPACE) {\n    namespaceURI = getIntrinsicNamespace(type);\n  }\n  if (namespaceURI === HTML_NAMESPACE) {\n    if (__DEV__) {\n      isCustomComponentTag = isCustomComponent(type, props);\n      // Should this check be gated by parent namespace? Not sure we want to\n      // allow <SVG> or <mATH>.\n      if (!isCustomComponentTag && type !== type.toLowerCase()) {\n        console.error(\n          '<%s /> is using incorrect casing. ' +\n            'Use PascalCase for React components, ' +\n            'or lowercase for HTML elements.',\n          type,\n        );\n      }\n    }\n\n    if (type === 'script') {\n      // Create the script via .innerHTML so its \"parser-inserted\" flag is\n      // set to true and it does not execute\n      const div = ownerDocument.createElement('div');\n      if (__DEV__) {\n        if (enableTrustedTypesIntegration && !didWarnScriptTags) {\n          console.error(\n            'Encountered a script tag while rendering React component. ' +\n              'Scripts inside React components are never executed when rendering ' +\n              'on the client. Consider using template tag instead ' +\n              '(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template).',\n          );\n          didWarnScriptTags = true;\n        }\n      }\n      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\n      // This is guaranteed to yield a script element.\n      const firstChild = ((div.firstChild: any): HTMLScriptElement);\n      domElement = div.removeChild(firstChild);\n    } else if (typeof props.is === 'string') {\n      // $FlowIssue `createElement` should be updated for Web Components\n      domElement = ownerDocument.createElement(type, {is: props.is});\n    } else {\n      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\n      // See discussion in https://github.com/facebook/react/pull/6896\n      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n      domElement = ownerDocument.createElement(type);\n      // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`\n      // attributes on `select`s needs to be added before `option`s are inserted.\n      // This prevents:\n      // - a bug where the `select` does not scroll to the correct option because singular\n      //  `select` elements automatically pick the first item #13222\n      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239\n      // See https://github.com/facebook/react/issues/13222\n      // and https://github.com/facebook/react/issues/14239\n      if (type === 'select') {\n        const node = ((domElement: any): HTMLSelectElement);\n        if (props.multiple) {\n          node.multiple = true;\n        } else if (props.size) {\n          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where\n          // it is possible that no option is selected.\n          //\n          // This is only necessary when a select in \"single selection mode\".\n          node.size = props.size;\n        }\n      }\n    }\n  } else {\n    domElement = ownerDocument.createElementNS(namespaceURI, type);\n  }\n\n  if (__DEV__) {\n    if (namespaceURI === HTML_NAMESPACE) {\n      if (\n        !isCustomComponentTag &&\n        Object.prototype.toString.call(domElement) ===\n          '[object HTMLUnknownElement]' &&\n        !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)\n      ) {\n        warnedUnknownTags[type] = true;\n        console.error(\n          'The tag <%s> is unrecognized in this browser. ' +\n            'If you meant to render a React component, start its name with ' +\n            'an uppercase letter.',\n          type,\n        );\n      }\n    }\n  }\n\n  return domElement;\n}\n\nexport function createTextNode(\n  text: string,\n  rootContainerElement: Element | Document,\n): Text {\n  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(\n    text,\n  );\n}\n\nexport function setInitialProperties(\n  domElement: Element,\n  tag: string,\n  rawProps: Object,\n  rootContainerElement: Element | Document,\n): void {\n  const isCustomComponentTag = isCustomComponent(tag, rawProps);\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, rawProps);\n  }\n\n  // TODO: Make sure that we check isMounted before firing any of these events.\n  let props: Object;\n  switch (tag) {\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      trapBubbledEvent(TOP_LOAD, domElement);\n      props = rawProps;\n      break;\n    case 'video':\n    case 'audio':\n      // Create listener for each media event\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        trapBubbledEvent(mediaEventTypes[i], domElement);\n      }\n      props = rawProps;\n      break;\n    case 'source':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      props = rawProps;\n      break;\n    case 'img':\n    case 'image':\n    case 'link':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      trapBubbledEvent(TOP_LOAD, domElement);\n      props = rawProps;\n      break;\n    case 'form':\n      trapBubbledEvent(TOP_RESET, domElement);\n      trapBubbledEvent(TOP_SUBMIT, domElement);\n      props = rawProps;\n      break;\n    case 'details':\n      trapBubbledEvent(TOP_TOGGLE, domElement);\n      props = rawProps;\n      break;\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      props = ReactDOMInputGetHostProps(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      props = ReactDOMOptionGetHostProps(domElement, rawProps);\n      break;\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      props = ReactDOMSelectGetHostProps(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      props = ReactDOMTextareaGetHostProps(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    default:\n      props = rawProps;\n  }\n\n  assertValidProps(tag, props);\n\n  setInitialDOMProperties(\n    tag,\n    domElement,\n    rootContainerElement,\n    props,\n    isCustomComponentTag,\n  );\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMInputPostMountWrapper(domElement, rawProps, false);\n      break;\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n    case 'option':\n      ReactDOMOptionPostMountWrapper(domElement, rawProps);\n      break;\n    case 'select':\n      ReactDOMSelectPostMountWrapper(domElement, rawProps);\n      break;\n    default:\n      if (typeof props.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n}\n\n// Calculate the diff between the two objects.\nexport function diffProperties(\n  domElement: Element,\n  tag: string,\n  lastRawProps: Object,\n  nextRawProps: Object,\n  rootContainerElement: Element | Document,\n): null | Array<mixed> {\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, nextRawProps);\n  }\n\n  let updatePayload: null | Array<any> = null;\n\n  let lastProps: Object;\n  let nextProps: Object;\n  switch (tag) {\n    case 'input':\n      lastProps = ReactDOMInputGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMInputGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'option':\n      lastProps = ReactDOMOptionGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMOptionGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'select':\n      lastProps = ReactDOMSelectGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMSelectGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'textarea':\n      lastProps = ReactDOMTextareaGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMTextareaGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    default:\n      lastProps = lastRawProps;\n      nextProps = nextRawProps;\n      if (\n        typeof lastProps.onClick !== 'function' &&\n        typeof nextProps.onClick === 'function'\n      ) {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n\n  assertValidProps(tag, nextProps);\n\n  let propKey;\n  let styleName;\n  let styleUpdates = null;\n  for (propKey in lastProps) {\n    if (\n      nextProps.hasOwnProperty(propKey) ||\n      !lastProps.hasOwnProperty(propKey) ||\n      lastProps[propKey] == null\n    ) {\n      continue;\n    }\n    if (propKey === STYLE) {\n      const lastStyle = lastProps[propKey];\n      for (styleName in lastStyle) {\n        if (lastStyle.hasOwnProperty(styleName)) {\n          if (!styleUpdates) {\n            styleUpdates = {};\n          }\n          styleUpdates[styleName] = '';\n        }\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {\n      // Noop. This is handled by the clear text mechanism.\n    } else if (\n      (enableDeprecatedFlareAPI && propKey === DEPRECATED_flareListeners) ||\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (propKey === AUTOFOCUS) {\n      // Noop. It doesn't work on updates anyway.\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      // This is a special case. If any listener updates we need to ensure\n      // that the \"current\" fiber pointer gets updated so we need a commit\n      // to update this element.\n      if (!updatePayload) {\n        updatePayload = [];\n      }\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the whitelist in the commit phase instead.\n      (updatePayload = updatePayload || []).push(propKey, null);\n    }\n  }\n  for (propKey in nextProps) {\n    const nextProp = nextProps[propKey];\n    const lastProp = lastProps != null ? lastProps[propKey] : undefined;\n    if (\n      !nextProps.hasOwnProperty(propKey) ||\n      nextProp === lastProp ||\n      (nextProp == null && lastProp == null)\n    ) {\n      continue;\n    }\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n      if (lastProp) {\n        // Unset styles on `lastProp` but not on `nextProp`.\n        for (styleName in lastProp) {\n          if (\n            lastProp.hasOwnProperty(styleName) &&\n            (!nextProp || !nextProp.hasOwnProperty(styleName))\n          ) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n            styleUpdates[styleName] = '';\n          }\n        }\n        // Update styles that changed since `lastProp`.\n        for (styleName in nextProp) {\n          if (\n            nextProp.hasOwnProperty(styleName) &&\n            lastProp[styleName] !== nextProp[styleName]\n          ) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n            styleUpdates[styleName] = nextProp[styleName];\n          }\n        }\n      } else {\n        // Relies on `updateStylesByID` not mutating `styleUpdates`.\n        if (!styleUpdates) {\n          if (!updatePayload) {\n            updatePayload = [];\n          }\n          updatePayload.push(propKey, styleUpdates);\n        }\n        styleUpdates = nextProp;\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n      const lastHtml = lastProp ? lastProp[HTML] : undefined;\n      if (nextHtml != null) {\n        if (lastHtml !== nextHtml) {\n          (updatePayload = updatePayload || []).push(propKey, nextHtml);\n        }\n      } else {\n        // TODO: It might be too late to clear this if we have children\n        // inserted already.\n      }\n    } else if (propKey === CHILDREN) {\n      if (\n        lastProp !== nextProp &&\n        (typeof nextProp === 'string' || typeof nextProp === 'number')\n      ) {\n        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\n      }\n    } else if (\n      (enableDeprecatedFlareAPI && propKey === DEPRECATED_flareListeners) ||\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        // We eagerly listen to this even though we haven't committed yet.\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n      if (!updatePayload && lastProp !== nextProp) {\n        // This is a special case. If any listener updates we need to ensure\n        // that the \"current\" props pointer gets updated so we need a commit\n        // to update this element.\n        updatePayload = [];\n      }\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the whitelist during the commit.\n      (updatePayload = updatePayload || []).push(propKey, nextProp);\n    }\n  }\n  if (styleUpdates) {\n    if (__DEV__) {\n      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);\n    }\n    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);\n  }\n  return updatePayload;\n}\n\n// Apply the diff.\nexport function updateProperties(\n  domElement: Element,\n  updatePayload: Array<any>,\n  tag: string,\n  lastRawProps: Object,\n  nextRawProps: Object,\n): void {\n  // Update checked *before* name.\n  // In the middle of an update, it is possible to have multiple checked.\n  // When a checked radio tries to change name, browser makes another radio's checked false.\n  if (\n    tag === 'input' &&\n    nextRawProps.type === 'radio' &&\n    nextRawProps.name != null\n  ) {\n    ReactDOMInputUpdateChecked(domElement, nextRawProps);\n  }\n\n  const wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\n  const isCustomComponentTag = isCustomComponent(tag, nextRawProps);\n  // Apply the diff.\n  updateDOMProperties(\n    domElement,\n    updatePayload,\n    wasCustomComponentTag,\n    isCustomComponentTag,\n  );\n\n  // TODO: Ensure that an update gets scheduled if any of the special props\n  // changed.\n  switch (tag) {\n    case 'input':\n      // Update the wrapper around inputs *after* updating props. This has to\n      // happen after `updateDOMProperties`. Otherwise HTML5 input validations\n      // raise warnings and prevent the new value from being assigned.\n      ReactDOMInputUpdateWrapper(domElement, nextRawProps);\n      break;\n    case 'textarea':\n      ReactDOMTextareaUpdateWrapper(domElement, nextRawProps);\n      break;\n    case 'select':\n      // <select> value update needs to occur after <option> children\n      // reconciliation\n      ReactDOMSelectPostUpdateWrapper(domElement, nextRawProps);\n      break;\n  }\n}\n\nfunction getPossibleStandardName(propName: string): string | null {\n  if (__DEV__) {\n    const lowerCasedName = propName.toLowerCase();\n    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      return null;\n    }\n    return possibleStandardNames[lowerCasedName] || null;\n  }\n  return null;\n}\n\nexport function diffHydratedProperties(\n  domElement: Element,\n  tag: string,\n  rawProps: Object,\n  parentNamespace: string,\n  rootContainerElement: Element | Document,\n): null | Array<mixed> {\n  let isCustomComponentTag;\n  let extraAttributeNames: Set<string>;\n\n  if (__DEV__) {\n    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING] === true;\n    isCustomComponentTag = isCustomComponent(tag, rawProps);\n    validatePropertiesInDevelopment(tag, rawProps);\n  }\n\n  // TODO: Make sure that we check isMounted before firing any of these events.\n  switch (tag) {\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      trapBubbledEvent(TOP_LOAD, domElement);\n      break;\n    case 'video':\n    case 'audio':\n      // Create listener for each media event\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        trapBubbledEvent(mediaEventTypes[i], domElement);\n      }\n      break;\n    case 'source':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      break;\n    case 'img':\n    case 'image':\n    case 'link':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      trapBubbledEvent(TOP_LOAD, domElement);\n      break;\n    case 'form':\n      trapBubbledEvent(TOP_RESET, domElement);\n      trapBubbledEvent(TOP_SUBMIT, domElement);\n      break;\n    case 'details':\n      trapBubbledEvent(TOP_TOGGLE, domElement);\n      break;\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      break;\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n  }\n\n  assertValidProps(tag, rawProps);\n\n  if (__DEV__) {\n    extraAttributeNames = new Set();\n    const attributes = domElement.attributes;\n    for (let i = 0; i < attributes.length; i++) {\n      const name = attributes[i].name.toLowerCase();\n      switch (name) {\n        // Built-in SSR attribute is whitelisted\n        case 'data-reactroot':\n          break;\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        case 'value':\n          break;\n        case 'checked':\n          break;\n        case 'selected':\n          break;\n        default:\n          // Intentionally use the original name.\n          // See discussion in https://github.com/facebook/react/pull/10676.\n          extraAttributeNames.add(attributes[i].name);\n      }\n    }\n  }\n\n  let updatePayload = null;\n  for (const propKey in rawProps) {\n    if (!rawProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n    const nextProp = rawProps[propKey];\n    if (propKey === CHILDREN) {\n      // For text content children we compare against textContent. This\n      // might match additional HTML that is hidden when we read it using\n      // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\n      // satisfies our requirement. Our requirement is not to produce perfect\n      // HTML and attributes. Ideally we should preserve structure but it's\n      // ok not to if the visible content is still enough to indicate what\n      // even listeners these nodes might be wired up to.\n      // TODO: Warn if there is more than a single textNode as a child.\n      // TODO: Should we use domElement.firstChild.nodeValue to compare?\n      if (typeof nextProp === 'string') {\n        if (domElement.textContent !== nextProp) {\n          if (__DEV__ && !suppressHydrationWarning) {\n            warnForTextDifference(domElement.textContent, nextProp);\n          }\n          updatePayload = [CHILDREN, nextProp];\n        }\n      } else if (typeof nextProp === 'number') {\n        if (domElement.textContent !== '' + nextProp) {\n          if (__DEV__ && !suppressHydrationWarning) {\n            warnForTextDifference(domElement.textContent, nextProp);\n          }\n          updatePayload = [CHILDREN, '' + nextProp];\n        }\n      }\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n    } else if (\n      __DEV__ &&\n      // Convince Flow we've calculated it (it's DEV-only in this method.)\n      typeof isCustomComponentTag === 'boolean'\n    ) {\n      // Validate that the properties correspond to their expected values.\n      let serverValue;\n      const propertyInfo = getPropertyInfo(propKey);\n      if (suppressHydrationWarning) {\n        // Don't bother comparing. We're ignoring all these warnings.\n      } else if (\n        (enableDeprecatedFlareAPI && propKey === DEPRECATED_flareListeners) ||\n        propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n        propKey === SUPPRESS_HYDRATION_WARNING ||\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        propKey === 'value' ||\n        propKey === 'checked' ||\n        propKey === 'selected'\n      ) {\n        // Noop\n      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n        const serverHTML = domElement.innerHTML;\n        const nextHtml = nextProp ? nextProp[HTML] : undefined;\n        const expectedHTML = normalizeHTML(\n          domElement,\n          nextHtml != null ? nextHtml : '',\n        );\n        if (expectedHTML !== serverHTML) {\n          warnForPropDifference(propKey, serverHTML, expectedHTML);\n        }\n      } else if (propKey === STYLE) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey);\n\n        if (canDiffStyleForHydrationWarning) {\n          const expectedStyle = createDangerousStringForStyles(nextProp);\n          serverValue = domElement.getAttribute('style');\n          if (expectedStyle !== serverValue) {\n            warnForPropDifference(propKey, serverValue, expectedStyle);\n          }\n        }\n      } else if (isCustomComponentTag) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n        serverValue = getValueForAttribute(domElement, propKey, nextProp);\n\n        if (nextProp !== serverValue) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      } else if (\n        !shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) &&\n        !shouldRemoveAttribute(\n          propKey,\n          nextProp,\n          propertyInfo,\n          isCustomComponentTag,\n        )\n      ) {\n        let isMismatchDueToBadCasing = false;\n        if (propertyInfo !== null) {\n          // $FlowFixMe - Should be inferred as not undefined.\n          extraAttributeNames.delete(propertyInfo.attributeName);\n          serverValue = getValueForProperty(\n            domElement,\n            propKey,\n            nextProp,\n            propertyInfo,\n          );\n        } else {\n          let ownNamespace = parentNamespace;\n          if (ownNamespace === HTML_NAMESPACE) {\n            ownNamespace = getIntrinsicNamespace(tag);\n          }\n          if (ownNamespace === HTML_NAMESPACE) {\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey.toLowerCase());\n          } else {\n            const standardName = getPossibleStandardName(propKey);\n            if (standardName !== null && standardName !== propKey) {\n              // If an SVG prop is supplied with bad casing, it will\n              // be successfully parsed from HTML, but will produce a mismatch\n              // (and would be incorrectly rendered on the client).\n              // However, we already warn about bad casing elsewhere.\n              // So we'll skip the misleading extra mismatch warning in this case.\n              isMismatchDueToBadCasing = true;\n              // $FlowFixMe - Should be inferred as not undefined.\n              extraAttributeNames.delete(standardName);\n            }\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey);\n          }\n          serverValue = getValueForAttribute(domElement, propKey, nextProp);\n        }\n\n        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      }\n    }\n  }\n\n  if (__DEV__) {\n    // $FlowFixMe - Should be inferred as not undefined.\n    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {\n      // $FlowFixMe - Should be inferred as not undefined.\n      warnForExtraAttributes(extraAttributeNames);\n    }\n  }\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMInputPostMountWrapper(domElement, rawProps, true);\n      break;\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n    case 'select':\n    case 'option':\n      // For input and textarea we current always set the value property at\n      // post mount to force it to diverge from attributes. However, for\n      // option and select we don't quite do the same thing and select\n      // is not resilient to the DOM state changing so we don't do that here.\n      // TODO: Consider not doing this for input and textarea.\n      break;\n    default:\n      if (typeof rawProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n\n  return updatePayload;\n}\n\nexport function diffHydratedText(textNode: Text, text: string): boolean {\n  const isDifferent = textNode.nodeValue !== text;\n  return isDifferent;\n}\n\nexport function warnForUnmatchedText(textNode: Text, text: string) {\n  if (__DEV__) {\n    warnForTextDifference(textNode.nodeValue, text);\n  }\n}\n\nexport function warnForDeletedHydratableElement(\n  parentNode: Element | Document,\n  child: Element,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Did not expect server HTML to contain a <%s> in <%s>.',\n      child.nodeName.toLowerCase(),\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForDeletedHydratableText(\n  parentNode: Element | Document,\n  child: Text,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Did not expect server HTML to contain the text node \"%s\" in <%s>.',\n      child.nodeValue,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForInsertedHydratedElement(\n  parentNode: Element | Document,\n  tag: string,\n  props: Object,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Expected server HTML to contain a matching <%s> in <%s>.',\n      tag,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForInsertedHydratedText(\n  parentNode: Element | Document,\n  text: string,\n) {\n  if (__DEV__) {\n    if (text === '') {\n      // We expect to insert empty text nodes since they're not represented in\n      // the HTML.\n      // TODO: Remove this special case if we can just avoid inserting empty\n      // text nodes.\n      return;\n    }\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Expected server HTML to contain a matching text node for \"%s\" in <%s>.',\n      text,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function restoreControlledState(\n  domElement: Element,\n  tag: string,\n  props: Object,\n): void {\n  switch (tag) {\n    case 'input':\n      ReactDOMInputRestoreControlledState(domElement, props);\n      return;\n    case 'textarea':\n      ReactDOMTextareaRestoreControlledState(domElement, props);\n      return;\n    case 'select':\n      ReactDOMSelectRestoreControlledState(domElement, props);\n      return;\n  }\n}\n\nexport function listenToEventResponderEventTypes(\n  eventTypes: Array<string>,\n  document: Document,\n): void {\n  if (enableDeprecatedFlareAPI) {\n    // Get the listening Map for this element. We use this to track\n    // what events we're listening to.\n    const listenerMap = getListenerMapForElement(document);\n\n    // Go through each target event type of the event responder\n    for (let i = 0, length = eventTypes.length; i < length; ++i) {\n      const eventType = eventTypes[i];\n      const isPassive = !endsWith(eventType, '_active');\n      const eventKey = isPassive ? eventType + '_passive' : eventType;\n      const targetEventType = isPassive\n        ? eventType\n        : eventType.substring(0, eventType.length - 7);\n      if (!listenerMap.has(eventKey)) {\n        if (isPassive) {\n          const activeKey = targetEventType + '_active';\n          // If we have an active event listener, do not register\n          // a passive event listener. We use the same active event\n          // listener.\n          if (listenerMap.has(activeKey)) {\n            continue;\n          }\n        } else {\n          // If we have a passive event listener, remove the\n          // existing passive event listener before we add the\n          // active event listener.\n          const passiveKey = targetEventType + '_passive';\n          const passiveListener = listenerMap.get(passiveKey);\n          if (passiveListener != null) {\n            removeActiveResponderEventSystemEvent(\n              document,\n              targetEventType,\n              passiveListener,\n            );\n          }\n        }\n        const eventListener = addResponderEventSystemEvent(\n          document,\n          targetEventType,\n          isPassive,\n        );\n        listenerMap.set(eventKey, eventListener);\n      }\n    }\n  }\n}\n\n// We can remove this once the event API is stable and out of a flag\nif (enableDeprecatedFlareAPI) {\n  setListenToResponderEventTypes(listenToEventResponderEventTypes);\n}\n"]},"metadata":{},"sourceType":"module"}