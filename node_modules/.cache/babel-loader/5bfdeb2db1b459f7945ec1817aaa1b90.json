{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint valid-typeof: 0 */\nimport invariant from 'shared/invariant';\nconst EVENT_POOL_SIZE = 10;\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nconst EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: function () {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n}\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\n\n\nfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n  if (__DEV__) {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n    delete this.isDefaultPrevented;\n    delete this.isPropagationStopped;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n  const Interface = this.constructor.Interface;\n\n  for (const propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n\n    if (__DEV__) {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n\n    const normalize = Interface[propName];\n\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  const defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\n  if (defaultPrevented) {\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = functionThatReturnsFalse;\n  }\n\n  this.isPropagationStopped = functionThatReturnsFalse;\n  return this;\n}\n\nObject.assign(SyntheticEvent.prototype, {\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    const event = this.nativeEvent;\n\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      event.returnValue = false;\n    }\n\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  },\n  stopPropagation: function () {\n    const event = this.nativeEvent;\n\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = functionThatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = functionThatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: functionThatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    const Interface = this.constructor.Interface;\n\n    for (const propName in Interface) {\n      if (__DEV__) {\n        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n      } else {\n        this[propName] = null;\n      }\n    }\n\n    this.dispatchConfig = null;\n    this._targetInst = null;\n    this.nativeEvent = null;\n    this.isDefaultPrevented = functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    this._dispatchListeners = null;\n    this._dispatchInstances = null;\n\n    if (__DEV__) {\n      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n      Object.defineProperty(this, 'isDefaultPrevented', getPooledWarningPropertyDefinition('isDefaultPrevented', functionThatReturnsFalse));\n      Object.defineProperty(this, 'isPropagationStopped', getPooledWarningPropertyDefinition('isPropagationStopped', functionThatReturnsFalse));\n      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', () => {}));\n      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', () => {}));\n    }\n  }\n});\nSyntheticEvent.Interface = EventInterface;\n/**\n * Helper to reduce boilerplate when creating subclasses.\n */\n\nSyntheticEvent.extend = function (Interface) {\n  const Super = this;\n\n  const E = function () {};\n\n  E.prototype = Super.prototype;\n  const prototype = new E();\n\n  function Class() {\n    return Super.apply(this, arguments);\n  }\n\n  Object.assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n  Class.Interface = Object.assign({}, Super.Interface, Interface);\n  Class.extend = Super.extend;\n  addEventPoolingTo(Class);\n  return Class;\n};\n\naddEventPoolingTo(SyntheticEvent);\n/**\n * Helper to nullify syntheticEvent instance properties when destructing\n *\n * @param {String} propName\n * @param {?object} getVal\n * @return {object} defineProperty object\n */\n\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  const isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n\n  function set(val) {\n    const action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    const action = isFunction ? 'accessing the method' : 'accessing the property';\n    const result = isFunction ? 'This is a no-op function' : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    if (__DEV__) {\n      console.error(\"This synthetic event is reused for performance reasons. If you're seeing this, \" + \"you're %s `%s` on a released/nullified synthetic event. %s. \" + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result);\n    }\n  }\n}\n\nfunction getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\n  const EventConstructor = this;\n\n  if (EventConstructor.eventPool.length) {\n    const instance = EventConstructor.eventPool.pop();\n    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);\n    return instance;\n  }\n\n  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);\n}\n\nfunction releasePooledEvent(event) {\n  const EventConstructor = this;\n  invariant(event instanceof EventConstructor, 'Trying to release an event instance into a pool of a different type.');\n  event.destructor();\n\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n    EventConstructor.eventPool.push(event);\n  }\n}\n\nfunction addEventPoolingTo(EventConstructor) {\n  EventConstructor.eventPool = [];\n  EventConstructor.getPooled = getPooledEvent;\n  EventConstructor.release = releasePooledEvent;\n}\n\nexport default SyntheticEvent;","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/legacy-events/SyntheticEvent.js"],"names":["invariant","EVENT_POOL_SIZE","EventInterface","type","target","currentTarget","eventPhase","bubbles","cancelable","timeStamp","event","Date","now","defaultPrevented","isTrusted","functionThatReturnsTrue","functionThatReturnsFalse","SyntheticEvent","dispatchConfig","targetInst","nativeEvent","nativeEventTarget","__DEV__","preventDefault","stopPropagation","isDefaultPrevented","isPropagationStopped","_targetInst","Interface","constructor","propName","hasOwnProperty","normalize","returnValue","Object","assign","prototype","cancelBubble","persist","isPersistent","destructor","defineProperty","getPooledWarningPropertyDefinition","_dispatchListeners","_dispatchInstances","extend","Super","E","Class","apply","arguments","addEventPoolingTo","getVal","isFunction","configurable","set","get","val","action","warn","result","console","error","getPooledEvent","nativeInst","EventConstructor","eventPool","length","instance","pop","call","releasePooledEvent","push","getPooled","release"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint valid-typeof: 0 */\n\nimport invariant from 'shared/invariant';\n\nconst EVENT_POOL_SIZE = 10;\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: function() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null,\n};\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n}\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  if (__DEV__) {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n    delete this.isDefaultPrevented;\n    delete this.isPropagationStopped;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n\n  const Interface = this.constructor.Interface;\n  for (const propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    if (__DEV__) {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    const normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  const defaultPrevented =\n    nativeEvent.defaultPrevented != null\n      ? nativeEvent.defaultPrevented\n      : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = functionThatReturnsFalse;\n  }\n  this.isPropagationStopped = functionThatReturnsFalse;\n  return this;\n}\n\nObject.assign(SyntheticEvent.prototype, {\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    const event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  },\n\n  stopPropagation: function() {\n    const event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = functionThatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = functionThatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: functionThatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    const Interface = this.constructor.Interface;\n    for (const propName in Interface) {\n      if (__DEV__) {\n        Object.defineProperty(\n          this,\n          propName,\n          getPooledWarningPropertyDefinition(propName, Interface[propName]),\n        );\n      } else {\n        this[propName] = null;\n      }\n    }\n    this.dispatchConfig = null;\n    this._targetInst = null;\n    this.nativeEvent = null;\n    this.isDefaultPrevented = functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    this._dispatchListeners = null;\n    this._dispatchInstances = null;\n    if (__DEV__) {\n      Object.defineProperty(\n        this,\n        'nativeEvent',\n        getPooledWarningPropertyDefinition('nativeEvent', null),\n      );\n      Object.defineProperty(\n        this,\n        'isDefaultPrevented',\n        getPooledWarningPropertyDefinition(\n          'isDefaultPrevented',\n          functionThatReturnsFalse,\n        ),\n      );\n      Object.defineProperty(\n        this,\n        'isPropagationStopped',\n        getPooledWarningPropertyDefinition(\n          'isPropagationStopped',\n          functionThatReturnsFalse,\n        ),\n      );\n      Object.defineProperty(\n        this,\n        'preventDefault',\n        getPooledWarningPropertyDefinition('preventDefault', () => {}),\n      );\n      Object.defineProperty(\n        this,\n        'stopPropagation',\n        getPooledWarningPropertyDefinition('stopPropagation', () => {}),\n      );\n    }\n  },\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n */\nSyntheticEvent.extend = function(Interface) {\n  const Super = this;\n\n  const E = function() {};\n  E.prototype = Super.prototype;\n  const prototype = new E();\n\n  function Class() {\n    return Super.apply(this, arguments);\n  }\n  Object.assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = Object.assign({}, Super.Interface, Interface);\n  Class.extend = Super.extend;\n  addEventPoolingTo(Class);\n\n  return Class;\n};\n\naddEventPoolingTo(SyntheticEvent);\n\n/**\n * Helper to nullify syntheticEvent instance properties when destructing\n *\n * @param {String} propName\n * @param {?object} getVal\n * @return {object} defineProperty object\n */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  const isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get,\n  };\n\n  function set(val) {\n    const action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    const action = isFunction\n      ? 'accessing the method'\n      : 'accessing the property';\n    const result = isFunction\n      ? 'This is a no-op function'\n      : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    if (__DEV__) {\n      console.error(\n        \"This synthetic event is reused for performance reasons. If you're seeing this, \" +\n          \"you're %s `%s` on a released/nullified synthetic event. %s. \" +\n          'If you must keep the original synthetic event around, use event.persist(). ' +\n          'See https://fb.me/react-event-pooling for more information.',\n        action,\n        propName,\n        result,\n      );\n    }\n  }\n}\n\nfunction getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\n  const EventConstructor = this;\n  if (EventConstructor.eventPool.length) {\n    const instance = EventConstructor.eventPool.pop();\n    EventConstructor.call(\n      instance,\n      dispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeInst,\n    );\n    return instance;\n  }\n  return new EventConstructor(\n    dispatchConfig,\n    targetInst,\n    nativeEvent,\n    nativeInst,\n  );\n}\n\nfunction releasePooledEvent(event) {\n  const EventConstructor = this;\n  invariant(\n    event instanceof EventConstructor,\n    'Trying to release an event instance into a pool of a different type.',\n  );\n  event.destructor();\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n    EventConstructor.eventPool.push(event);\n  }\n}\n\nfunction addEventPoolingTo(EventConstructor) {\n  EventConstructor.eventPool = [];\n  EventConstructor.getPooled = getPooledEvent;\n  EventConstructor.release = releasePooledEvent;\n}\n\nexport default SyntheticEvent;\n"]},"metadata":{},"sourceType":"module"}