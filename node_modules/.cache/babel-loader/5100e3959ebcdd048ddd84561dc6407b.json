{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { setComponentTree } from 'legacy-events/EventPluginUtils';\nimport { getFiberCurrentPropsFromNode, getInstanceFromNode, getNodeFromInstance } from './ReactDOMComponentTree';\nimport BeforeInputEventPlugin from '../events/BeforeInputEventPlugin';\nimport ChangeEventPlugin from '../events/ChangeEventPlugin';\nimport EnterLeaveEventPlugin from '../events/EnterLeaveEventPlugin';\nimport SelectEventPlugin from '../events/SelectEventPlugin';\nimport SimpleEventPlugin from '../events/SimpleEventPlugin';\nimport { injectEventPluginOrder, injectEventPluginsByName } from 'legacy-events/EventPluginRegistry';\n/**\n * Specifies a deterministic ordering of `EventPlugin`s. A convenient way to\n * reason about plugins, without having to package every one of them. This\n * is better than having plugins be ordered in the same order that they\n * are injected because that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\n\nconst DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];\n/**\n * Inject modules for resolving DOM hierarchy and plugin ordering.\n */\n\ninjectEventPluginOrder(DOMEventPluginOrder);\nsetComponentTree(getFiberCurrentPropsFromNode, getInstanceFromNode, getNodeFromInstance);\n/**\n * Some important event plugins included by default (without having to require\n * them).\n */\n\ninjectEventPluginsByName({\n  SimpleEventPlugin: SimpleEventPlugin,\n  EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n  ChangeEventPlugin: ChangeEventPlugin,\n  SelectEventPlugin: SelectEventPlugin,\n  BeforeInputEventPlugin: BeforeInputEventPlugin\n});","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react-dom/src/client/ReactDOMClientInjection.js"],"names":["setComponentTree","getFiberCurrentPropsFromNode","getInstanceFromNode","getNodeFromInstance","BeforeInputEventPlugin","ChangeEventPlugin","EnterLeaveEventPlugin","SelectEventPlugin","SimpleEventPlugin","injectEventPluginOrder","injectEventPluginsByName","DOMEventPluginOrder"],"mappings":"AAAA;;;;;;AAOA,SAAQA,gBAAR,QAA+B,gCAA/B;AAEA,SACEC,4BADF,EAEEC,mBAFF,EAGEC,mBAHF,QAIO,yBAJP;AAKA,OAAOC,sBAAP,MAAmC,kCAAnC;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,SACEC,sBADF,EAEEC,wBAFF,QAGO,mCAHP;AAKA;;;;;;;;;AAQA,MAAMC,mBAAmB,GAAG,CAC1B,sBAD0B,EAE1B,mBAF0B,EAG1B,uBAH0B,EAI1B,mBAJ0B,EAK1B,mBAL0B,EAM1B,wBAN0B,CAA5B;AASA;;;;AAGAF,sBAAsB,CAACE,mBAAD,CAAtB;AACAX,gBAAgB,CACdC,4BADc,EAEdC,mBAFc,EAGdC,mBAHc,CAAhB;AAMA;;;;;AAIAO,wBAAwB,CAAC;AACvBF,EAAAA,iBAAiB,EAAEA,iBADI;AAEvBF,EAAAA,qBAAqB,EAAEA,qBAFA;AAGvBD,EAAAA,iBAAiB,EAAEA,iBAHI;AAIvBE,EAAAA,iBAAiB,EAAEA,iBAJI;AAKvBH,EAAAA,sBAAsB,EAAEA;AALD,CAAD,CAAxB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {setComponentTree} from 'legacy-events/EventPluginUtils';\n\nimport {\n  getFiberCurrentPropsFromNode,\n  getInstanceFromNode,\n  getNodeFromInstance,\n} from './ReactDOMComponentTree';\nimport BeforeInputEventPlugin from '../events/BeforeInputEventPlugin';\nimport ChangeEventPlugin from '../events/ChangeEventPlugin';\nimport EnterLeaveEventPlugin from '../events/EnterLeaveEventPlugin';\nimport SelectEventPlugin from '../events/SelectEventPlugin';\nimport SimpleEventPlugin from '../events/SimpleEventPlugin';\nimport {\n  injectEventPluginOrder,\n  injectEventPluginsByName,\n} from 'legacy-events/EventPluginRegistry';\n\n/**\n * Specifies a deterministic ordering of `EventPlugin`s. A convenient way to\n * reason about plugins, without having to package every one of them. This\n * is better than having plugins be ordered in the same order that they\n * are injected because that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nconst DOMEventPluginOrder = [\n  'ResponderEventPlugin',\n  'SimpleEventPlugin',\n  'EnterLeaveEventPlugin',\n  'ChangeEventPlugin',\n  'SelectEventPlugin',\n  'BeforeInputEventPlugin',\n];\n\n/**\n * Inject modules for resolving DOM hierarchy and plugin ordering.\n */\ninjectEventPluginOrder(DOMEventPluginOrder);\nsetComponentTree(\n  getFiberCurrentPropsFromNode,\n  getInstanceFromNode,\n  getNodeFromInstance,\n);\n\n/**\n * Some important event plugins included by default (without having to require\n * them).\n */\ninjectEventPluginsByName({\n  SimpleEventPlugin: SimpleEventPlugin,\n  EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n  ChangeEventPlugin: ChangeEventPlugin,\n  SelectEventPlugin: SelectEventPlugin,\n  BeforeInputEventPlugin: BeforeInputEventPlugin,\n});\n"]},"metadata":{},"sourceType":"module"}