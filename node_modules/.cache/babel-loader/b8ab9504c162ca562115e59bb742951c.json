{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\nconst modifierKeyToProp = {\n  Alt: 'altKey',\n  Control: 'ctrlKey',\n  Meta: 'metaKey',\n  Shift: 'shiftKey'\n}; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support\n// getModifierState. If getModifierState is not supported, we map it to a set of\n// modifier keys exposed by the event. In this case, Lock-keys are not supported.\n\nfunction modifierStateGetter(keyArg) {\n  const syntheticEvent = this;\n  const nativeEvent = syntheticEvent.nativeEvent;\n\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n\n  const keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nexport default getEventModifierState;","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react-dom/src/events/getEventModifierState.js"],"names":["modifierKeyToProp","Alt","Control","Meta","Shift","modifierStateGetter","keyArg","syntheticEvent","nativeEvent","getModifierState","keyProp","getEventModifierState"],"mappings":"AAAA;;;;;;;;;AASA;;;;AAOA,MAAMA,iBAAiB,GAAG;AACxBC,EAAAA,GAAG,EAAE,QADmB;AAExBC,EAAAA,OAAO,EAAE,SAFe;AAGxBC,EAAAA,IAAI,EAAE,SAHkB;AAIxBC,EAAAA,KAAK,EAAE;AAJiB,CAA1B,C,CAOA;AACA;AACA;;AACA,SAASC,mBAAT,CAA6BC,MAA7B,EAAsD;AACpD,QAAMC,cAAc,GAAG,IAAvB;AACA,QAAMC,WAAW,GAAGD,cAAc,CAACC,WAAnC;;AACA,MAAIA,WAAW,CAACC,gBAAhB,EAAkC;AAChC,WAAOD,WAAW,CAACC,gBAAZ,CAA6BH,MAA7B,CAAP;AACD;;AACD,QAAMI,OAAO,GAAGV,iBAAiB,CAACM,MAAD,CAAjC;AACA,SAAOI,OAAO,GAAG,CAAC,CAACF,WAAW,CAACE,OAAD,CAAhB,GAA4B,KAA1C;AACD;;AAED,SAASC,qBAAT,CACEH,WADF,EAE+B;AAC7B,SAAOH,mBAAP;AACD;;AAED,eAAeM,qBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nimport type {AnyNativeEvent} from 'legacy-events/PluginModuleType';\n\nconst modifierKeyToProp = {\n  Alt: 'altKey',\n  Control: 'ctrlKey',\n  Meta: 'metaKey',\n  Shift: 'shiftKey',\n};\n\n// Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support\n// getModifierState. If getModifierState is not supported, we map it to a set of\n// modifier keys exposed by the event. In this case, Lock-keys are not supported.\nfunction modifierStateGetter(keyArg: string): boolean {\n  const syntheticEvent = this;\n  const nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  const keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(\n  nativeEvent: AnyNativeEvent,\n): (keyArg: string) => boolean {\n  return modifierStateGetter;\n}\n\nexport default getEventModifierState;\n"]},"metadata":{},"sourceType":"module"}