{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { enableProfilerTimer } from 'shared/ReactFeatureFlags';\nimport { getCurrentTime } from './ReactFiberWorkLoop';\nimport { inferPriorityFromExpirationTime } from './ReactFiberExpirationTime';\nimport { DidCapture } from 'shared/ReactSideEffectTags';\nlet onScheduleFiberRoot = null;\nlet onCommitFiberRoot = null;\nlet onCommitFiberUnmount = null;\nlet hasLoggedError = false;\nexport const isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\nexport function injectInternals(internals) {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      console.error('The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');\n    } // DevTools exists, even though it doesn't support Fiber.\n\n\n    return true;\n  }\n\n  try {\n    const rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.\n\n    if (__DEV__) {\n      // Only used by Fast Refresh\n      if (typeof hook.onScheduleFiberRoot === 'function') {\n        onScheduleFiberRoot = (root, children) => {\n          try {\n            hook.onScheduleFiberRoot(rendererID, root, children);\n          } catch (err) {\n            if (__DEV__ && !hasLoggedError) {\n              hasLoggedError = true;\n              console.error('React instrumentation encountered an error: %s', err);\n            }\n          }\n        };\n      }\n    }\n\n    onCommitFiberRoot = (root, expirationTime) => {\n      try {\n        const didError = (root.current.effectTag & DidCapture) === DidCapture;\n\n        if (enableProfilerTimer) {\n          const currentTime = getCurrentTime();\n          const priorityLevel = inferPriorityFromExpirationTime(currentTime, expirationTime);\n          hook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);\n        } else {\n          hook.onCommitFiberRoot(rendererID, root, undefined, didError);\n        }\n      } catch (err) {\n        if (__DEV__) {\n          if (!hasLoggedError) {\n            hasLoggedError = true;\n            console.error('React instrumentation encountered an error: %s', err);\n          }\n        }\n      }\n    };\n\n    onCommitFiberUnmount = fiber => {\n      try {\n        hook.onCommitFiberUnmount(rendererID, fiber);\n      } catch (err) {\n        if (__DEV__) {\n          if (!hasLoggedError) {\n            hasLoggedError = true;\n            console.error('React instrumentation encountered an error: %s', err);\n          }\n        }\n      }\n    };\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      console.error('React instrumentation encountered an error: %s.', err);\n    }\n  } // DevTools exists\n\n\n  return true;\n}\nexport function onScheduleRoot(root, children) {\n  if (typeof onScheduleFiberRoot === 'function') {\n    onScheduleFiberRoot(root, children);\n  }\n}\nexport function onCommitRoot(root, expirationTime) {\n  if (typeof onCommitFiberRoot === 'function') {\n    onCommitFiberRoot(root, expirationTime);\n  }\n}\nexport function onCommitUnmount(fiber) {\n  if (typeof onCommitFiberUnmount === 'function') {\n    onCommitFiberUnmount(fiber);\n  }\n}","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react-reconciler/src/ReactFiberDevToolsHook.js"],"names":["enableProfilerTimer","getCurrentTime","inferPriorityFromExpirationTime","DidCapture","onScheduleFiberRoot","onCommitFiberRoot","onCommitFiberUnmount","hasLoggedError","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","injectInternals","internals","hook","isDisabled","supportsFiber","__DEV__","console","error","rendererID","inject","root","children","err","expirationTime","didError","current","effectTag","currentTime","priorityLevel","undefined","fiber","onScheduleRoot","onCommitRoot","onCommitUnmount"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableProfilerTimer} from 'shared/ReactFeatureFlags';\nimport {getCurrentTime} from './ReactFiberWorkLoop';\nimport {inferPriorityFromExpirationTime} from './ReactFiberExpirationTime';\n\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {DidCapture} from 'shared/ReactSideEffectTags';\n\ndeclare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n\nlet onScheduleFiberRoot = null;\nlet onCommitFiberRoot = null;\nlet onCommitFiberUnmount = null;\nlet hasLoggedError = false;\n\nexport const isDevToolsPresent =\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\nexport function injectInternals(internals: Object): boolean {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      console.error(\n        'The installed version of React DevTools is too old and will not work ' +\n          'with the current version of React. Please update React DevTools. ' +\n          'https://fb.me/react-devtools',\n      );\n    }\n    // DevTools exists, even though it doesn't support Fiber.\n    return true;\n  }\n  try {\n    const rendererID = hook.inject(internals);\n    // We have successfully injected, so now it is safe to set up hooks.\n    if (__DEV__) {\n      // Only used by Fast Refresh\n      if (typeof hook.onScheduleFiberRoot === 'function') {\n        onScheduleFiberRoot = (root, children) => {\n          try {\n            hook.onScheduleFiberRoot(rendererID, root, children);\n          } catch (err) {\n            if (__DEV__ && !hasLoggedError) {\n              hasLoggedError = true;\n              console.error(\n                'React instrumentation encountered an error: %s',\n                err,\n              );\n            }\n          }\n        };\n      }\n    }\n    onCommitFiberRoot = (root, expirationTime) => {\n      try {\n        const didError = (root.current.effectTag & DidCapture) === DidCapture;\n        if (enableProfilerTimer) {\n          const currentTime = getCurrentTime();\n          const priorityLevel = inferPriorityFromExpirationTime(\n            currentTime,\n            expirationTime,\n          );\n          hook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);\n        } else {\n          hook.onCommitFiberRoot(rendererID, root, undefined, didError);\n        }\n      } catch (err) {\n        if (__DEV__) {\n          if (!hasLoggedError) {\n            hasLoggedError = true;\n            console.error(\n              'React instrumentation encountered an error: %s',\n              err,\n            );\n          }\n        }\n      }\n    };\n    onCommitFiberUnmount = fiber => {\n      try {\n        hook.onCommitFiberUnmount(rendererID, fiber);\n      } catch (err) {\n        if (__DEV__) {\n          if (!hasLoggedError) {\n            hasLoggedError = true;\n            console.error(\n              'React instrumentation encountered an error: %s',\n              err,\n            );\n          }\n        }\n      }\n    };\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      console.error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n  // DevTools exists\n  return true;\n}\n\nexport function onScheduleRoot(root: FiberRoot, children: ReactNodeList) {\n  if (typeof onScheduleFiberRoot === 'function') {\n    onScheduleFiberRoot(root, children);\n  }\n}\n\nexport function onCommitRoot(root: FiberRoot, expirationTime: ExpirationTime) {\n  if (typeof onCommitFiberRoot === 'function') {\n    onCommitFiberRoot(root, expirationTime);\n  }\n}\n\nexport function onCommitUnmount(fiber: Fiber) {\n  if (typeof onCommitFiberUnmount === 'function') {\n    onCommitFiberUnmount(fiber);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}