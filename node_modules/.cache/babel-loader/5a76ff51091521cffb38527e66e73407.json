{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { REACT_CONTEXT_TYPE, REACT_FORWARD_REF_TYPE, REACT_FRAGMENT_TYPE, REACT_PORTAL_TYPE, REACT_MEMO_TYPE, REACT_PROFILER_TYPE, REACT_PROVIDER_TYPE, REACT_STRICT_MODE_TYPE, REACT_SUSPENSE_TYPE, REACT_SUSPENSE_LIST_TYPE, REACT_LAZY_TYPE, REACT_BLOCK_TYPE } from 'shared/ReactSymbols';\nimport { refineResolvedLazyComponent } from 'shared/ReactLazyComponent';\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  const functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (__DEV__) {\n    if (typeof type.tag === 'number') {\n      console.error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return `Profiler`;\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type.render);\n\n      case REACT_LAZY_TYPE:\n        {\n          const thenable = type;\n          const resolvedThenable = refineResolvedLazyComponent(thenable);\n\n          if (resolvedThenable) {\n            return getComponentName(resolvedThenable);\n          }\n\n          break;\n        }\n    }\n  }\n\n  return null;\n}\n\nexport default getComponentName;","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/shared/getComponentName.js"],"names":["REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_FRAGMENT_TYPE","REACT_PORTAL_TYPE","REACT_MEMO_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_STRICT_MODE_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","refineResolvedLazyComponent","getWrappedName","outerType","innerType","wrapperName","functionName","displayName","name","getComponentName","type","__DEV__","tag","console","error","$$typeof","render","thenable","resolvedThenable"],"mappings":"AAAA;;;;;;;;AAWA,SACEA,kBADF,EAEEC,sBAFF,EAGEC,mBAHF,EAIEC,iBAJF,EAKEC,eALF,EAMEC,mBANF,EAOEC,mBAPF,EAQEC,sBARF,EASEC,mBATF,EAUEC,wBAVF,EAWEC,eAXF,EAYEC,gBAZF,QAaO,qBAbP;AAcA,SAAQC,2BAAR,QAA0C,2BAA1C;;AAEA,SAASC,cAAT,CACEC,SADF,EAEEC,SAFF,EAGEC,WAHF,EAIU;AACR,QAAMC,YAAY,GAAGF,SAAS,CAACG,WAAV,IAAyBH,SAAS,CAACI,IAAnC,IAA2C,EAAhE;AACA,SACGL,SAAD,CAAiBI,WAAjB,KACCD,YAAY,KAAK,EAAjB,GAAuB,GAAED,WAAY,IAAGC,YAAa,GAArD,GAA0DD,WAD3D,CADF;AAID;;AAED,SAASI,gBAAT,CAA0BC,IAA1B,EAAsD;AACpD,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB;AACA,WAAO,IAAP;AACD;;AACD,MAAIC,OAAJ,EAAa;AACX,QAAI,OAAQD,IAAD,CAAYE,GAAnB,KAA2B,QAA/B,EAAyC;AACvCC,MAAAA,OAAO,CAACC,KAAR,CACE,0DACE,sDAFJ;AAID;AACF;;AACD,MAAI,OAAOJ,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAQA,IAAD,CAAYH,WAAZ,IAA2BG,IAAI,CAACF,IAAhC,IAAwC,IAA/C;AACD;;AACD,MAAI,OAAOE,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOA,IAAP;AACD;;AACD,UAAQA,IAAR;AACE,SAAKnB,mBAAL;AACE,aAAO,UAAP;;AACF,SAAKC,iBAAL;AACE,aAAO,QAAP;;AACF,SAAKE,mBAAL;AACE,aAAQ,UAAR;;AACF,SAAKE,sBAAL;AACE,aAAO,YAAP;;AACF,SAAKC,mBAAL;AACE,aAAO,UAAP;;AACF,SAAKC,wBAAL;AACE,aAAO,cAAP;AAZJ;;AAcA,MAAI,OAAOY,IAAP,KAAgB,QAApB,EAA8B;AAC5B,YAAQA,IAAI,CAACK,QAAb;AACE,WAAK1B,kBAAL;AACE,eAAO,kBAAP;;AACF,WAAKM,mBAAL;AACE,eAAO,kBAAP;;AACF,WAAKL,sBAAL;AACE,eAAOY,cAAc,CAACQ,IAAD,EAAOA,IAAI,CAACM,MAAZ,EAAoB,YAApB,CAArB;;AACF,WAAKvB,eAAL;AACE,eAAOgB,gBAAgB,CAACC,IAAI,CAACA,IAAN,CAAvB;;AACF,WAAKV,gBAAL;AACE,eAAOS,gBAAgB,CAACC,IAAI,CAACM,MAAN,CAAvB;;AACF,WAAKjB,eAAL;AAAsB;AACpB,gBAAMkB,QAA8B,GAAIP,IAAxC;AACA,gBAAMQ,gBAAgB,GAAGjB,2BAA2B,CAACgB,QAAD,CAApD;;AACA,cAAIC,gBAAJ,EAAsB;AACpB,mBAAOT,gBAAgB,CAACS,gBAAD,CAAvB;AACD;;AACD;AACD;AAlBH;AAoBD;;AACD,SAAO,IAAP;AACD;;AAED,eAAeT,gBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'shared/ReactLazyComponent';\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_BLOCK_TYPE,\n} from 'shared/ReactSymbols';\nimport {refineResolvedLazyComponent} from 'shared/ReactLazyComponent';\n\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const functionName = innerType.displayName || innerType.name || '';\n  return (\n    (outerType: any).displayName ||\n    (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName)\n  );\n}\n\nfunction getComponentName(type: mixed): string | null {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  if (__DEV__) {\n    if (typeof (type: any).tag === 'number') {\n      console.error(\n        'Received an unexpected object in getComponentName(). ' +\n          'This is likely a bug in React. Please file an issue.',\n      );\n    }\n  }\n  if (typeof type === 'function') {\n    return (type: any).displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return `Profiler`;\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type.render);\n      case REACT_LAZY_TYPE: {\n        const thenable: LazyComponent<mixed> = (type: any);\n        const resolvedThenable = refineResolvedLazyComponent(thenable);\n        if (resolvedThenable) {\n          return getComponentName(resolvedThenable);\n        }\n        break;\n      }\n    }\n  }\n  return null;\n}\n\nexport default getComponentName;\n"]},"metadata":{},"sourceType":"module"}