{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport getEventModifierState from './getEventModifierState';\nlet previousScreenX = 0;\nlet previousScreenY = 0; // Use flags to signal movementX/Y has already been set\n\nlet isMovementXSet = false;\nlet isMovementYSet = false;\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nconst SyntheticMouseEvent = SyntheticUIEvent.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: null,\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  movementX: function (event) {\n    if ('movementX' in event) {\n      return event.movementX;\n    }\n\n    const screenX = previousScreenX;\n    previousScreenX = event.screenX;\n\n    if (!isMovementXSet) {\n      isMovementXSet = true;\n      return 0;\n    }\n\n    return event.type === 'mousemove' ? event.screenX - screenX : 0;\n  },\n  movementY: function (event) {\n    if ('movementY' in event) {\n      return event.movementY;\n    }\n\n    const screenY = previousScreenY;\n    previousScreenY = event.screenY;\n\n    if (!isMovementYSet) {\n      isMovementYSet = true;\n      return 0;\n    }\n\n    return event.type === 'mousemove' ? event.screenY - screenY : 0;\n  }\n});\nexport default SyntheticMouseEvent;","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react-dom/src/events/SyntheticMouseEvent.js"],"names":["SyntheticUIEvent","getEventModifierState","previousScreenX","previousScreenY","isMovementXSet","isMovementYSet","SyntheticMouseEvent","extend","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","button","buttons","relatedTarget","event","fromElement","srcElement","toElement","movementX","type","movementY"],"mappings":"AAAA;;;;;;AAOA,OAAOA,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,IAAIC,eAAe,GAAG,CAAtB;AACA,IAAIC,eAAe,GAAG,CAAtB,C,CACA;;AACA,IAAIC,cAAc,GAAG,KAArB;AACA,IAAIC,cAAc,GAAG,KAArB;AAEA;;;;;AAIA,MAAMC,mBAAmB,GAAGN,gBAAgB,CAACO,MAAjB,CAAwB;AAClDC,EAAAA,OAAO,EAAE,IADyC;AAElDC,EAAAA,OAAO,EAAE,IAFyC;AAGlDC,EAAAA,OAAO,EAAE,IAHyC;AAIlDC,EAAAA,OAAO,EAAE,IAJyC;AAKlDC,EAAAA,KAAK,EAAE,IAL2C;AAMlDC,EAAAA,KAAK,EAAE,IAN2C;AAOlDC,EAAAA,OAAO,EAAE,IAPyC;AAQlDC,EAAAA,QAAQ,EAAE,IARwC;AASlDC,EAAAA,MAAM,EAAE,IAT0C;AAUlDC,EAAAA,OAAO,EAAE,IAVyC;AAWlDC,EAAAA,gBAAgB,EAAEjB,qBAXgC;AAYlDkB,EAAAA,MAAM,EAAE,IAZ0C;AAalDC,EAAAA,OAAO,EAAE,IAbyC;AAclDC,EAAAA,aAAa,EAAE,UAASC,KAAT,EAAgB;AAC7B,WACEA,KAAK,CAACD,aAAN,KACCC,KAAK,CAACC,WAAN,KAAsBD,KAAK,CAACE,UAA5B,GACGF,KAAK,CAACG,SADT,GAEGH,KAAK,CAACC,WAHV,CADF;AAMD,GArBiD;AAsBlDG,EAAAA,SAAS,EAAE,UAASJ,KAAT,EAAgB;AACzB,QAAI,eAAeA,KAAnB,EAA0B;AACxB,aAAOA,KAAK,CAACI,SAAb;AACD;;AAED,UAAMlB,OAAO,GAAGN,eAAhB;AACAA,IAAAA,eAAe,GAAGoB,KAAK,CAACd,OAAxB;;AAEA,QAAI,CAACJ,cAAL,EAAqB;AACnBA,MAAAA,cAAc,GAAG,IAAjB;AACA,aAAO,CAAP;AACD;;AAED,WAAOkB,KAAK,CAACK,IAAN,KAAe,WAAf,GAA6BL,KAAK,CAACd,OAAN,GAAgBA,OAA7C,GAAuD,CAA9D;AACD,GApCiD;AAqClDoB,EAAAA,SAAS,EAAE,UAASN,KAAT,EAAgB;AACzB,QAAI,eAAeA,KAAnB,EAA0B;AACxB,aAAOA,KAAK,CAACM,SAAb;AACD;;AAED,UAAMnB,OAAO,GAAGN,eAAhB;AACAA,IAAAA,eAAe,GAAGmB,KAAK,CAACb,OAAxB;;AAEA,QAAI,CAACJ,cAAL,EAAqB;AACnBA,MAAAA,cAAc,GAAG,IAAjB;AACA,aAAO,CAAP;AACD;;AAED,WAAOiB,KAAK,CAACK,IAAN,KAAe,WAAf,GAA6BL,KAAK,CAACb,OAAN,GAAgBA,OAA7C,GAAuD,CAA9D;AACD;AAnDiD,CAAxB,CAA5B;AAsDA,eAAeH,mBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport getEventModifierState from './getEventModifierState';\n\nlet previousScreenX = 0;\nlet previousScreenY = 0;\n// Use flags to signal movementX/Y has already been set\nlet isMovementXSet = false;\nlet isMovementYSet = false;\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst SyntheticMouseEvent = SyntheticUIEvent.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: null,\n  buttons: null,\n  relatedTarget: function(event) {\n    return (\n      event.relatedTarget ||\n      (event.fromElement === event.srcElement\n        ? event.toElement\n        : event.fromElement)\n    );\n  },\n  movementX: function(event) {\n    if ('movementX' in event) {\n      return event.movementX;\n    }\n\n    const screenX = previousScreenX;\n    previousScreenX = event.screenX;\n\n    if (!isMovementXSet) {\n      isMovementXSet = true;\n      return 0;\n    }\n\n    return event.type === 'mousemove' ? event.screenX - screenX : 0;\n  },\n  movementY: function(event) {\n    if ('movementY' in event) {\n      return event.movementY;\n    }\n\n    const screenY = previousScreenY;\n    previousScreenY = event.screenY;\n\n    if (!isMovementYSet) {\n      isMovementYSet = true;\n      return 0;\n    }\n\n    return event.type === 'mousemove' ? event.screenY - screenY : 0;\n  },\n});\n\nexport default SyntheticMouseEvent;\n"]},"metadata":{},"sourceType":"module"}