{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nconst hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport const REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nexport const REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nexport const REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nexport const REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nexport const REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nexport const REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nexport const REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nexport const REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nexport const REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nexport const REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nexport const REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nexport const REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nexport const REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nexport const REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nexport const REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nexport const REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nexport const REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nexport const REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\nexport function getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  const maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/shared/ReactSymbols.js"],"names":["hasSymbol","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_ASYNC_MODE_TYPE","REACT_CONCURRENT_MODE_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_RESPONDER_TYPE","REACT_SCOPE_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nconst hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nexport const REACT_ELEMENT_TYPE = hasSymbol\n  ? Symbol.for('react.element')\n  : 0xeac7;\nexport const REACT_PORTAL_TYPE = hasSymbol\n  ? Symbol.for('react.portal')\n  : 0xeaca;\nexport const REACT_FRAGMENT_TYPE = hasSymbol\n  ? Symbol.for('react.fragment')\n  : 0xeacb;\nexport const REACT_STRICT_MODE_TYPE = hasSymbol\n  ? Symbol.for('react.strict_mode')\n  : 0xeacc;\nexport const REACT_PROFILER_TYPE = hasSymbol\n  ? Symbol.for('react.profiler')\n  : 0xead2;\nexport const REACT_PROVIDER_TYPE = hasSymbol\n  ? Symbol.for('react.provider')\n  : 0xeacd;\nexport const REACT_CONTEXT_TYPE = hasSymbol\n  ? Symbol.for('react.context')\n  : 0xeace;\n// TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\nexport const REACT_ASYNC_MODE_TYPE = hasSymbol\n  ? Symbol.for('react.async_mode')\n  : 0xeacf;\nexport const REACT_CONCURRENT_MODE_TYPE = hasSymbol\n  ? Symbol.for('react.concurrent_mode')\n  : 0xeacf;\nexport const REACT_FORWARD_REF_TYPE = hasSymbol\n  ? Symbol.for('react.forward_ref')\n  : 0xead0;\nexport const REACT_SUSPENSE_TYPE = hasSymbol\n  ? Symbol.for('react.suspense')\n  : 0xead1;\nexport const REACT_SUSPENSE_LIST_TYPE = hasSymbol\n  ? Symbol.for('react.suspense_list')\n  : 0xead8;\nexport const REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nexport const REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nexport const REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nexport const REACT_FUNDAMENTAL_TYPE = hasSymbol\n  ? Symbol.for('react.fundamental')\n  : 0xead5;\nexport const REACT_RESPONDER_TYPE = hasSymbol\n  ? Symbol.for('react.responder')\n  : 0xead6;\nexport const REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}