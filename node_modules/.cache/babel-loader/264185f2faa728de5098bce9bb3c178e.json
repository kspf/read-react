{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map; // prettier-ignore\n\nconst elementListenerMap = new PossiblyWeakMap();\nexport function getListenerMapForElement(element) {\n  let listenerMap = elementListenerMap.get(element);\n\n  if (listenerMap === undefined) {\n    listenerMap = new Map();\n    elementListenerMap.set(element, listenerMap);\n  }\n\n  return listenerMap;\n}","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react-dom/src/events/DOMEventListenerMap.js"],"names":["PossiblyWeakMap","WeakMap","Map","elementListenerMap","getListenerMapForElement","element","listenerMap","get","undefined","set"],"mappings":"AAAA;;;;;;;;AAWA,MAAMA,eAAe,GAAG,OAAOC,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0CC,GAAlE,C,CACA;;AACA,MAAMC,kBAMD,GAAG,IAAIH,eAAJ,EANR;AAQA,OAAO,SAASI,wBAAT,CACLC,OADK,EAEqD;AAC1D,MAAIC,WAAW,GAAGH,kBAAkB,CAACI,GAAnB,CAAuBF,OAAvB,CAAlB;;AACA,MAAIC,WAAW,KAAKE,SAApB,EAA+B;AAC7BF,IAAAA,WAAW,GAAG,IAAIJ,GAAJ,EAAd;AACAC,IAAAA,kBAAkB,CAACM,GAAnB,CAAuBJ,OAAvB,EAAgCC,WAAhC;AACD;;AACD,SAAOA,WAAP;AACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DOMTopLevelEventType} from 'legacy-events/TopLevelEventTypes';\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n// prettier-ignore\nconst elementListenerMap:\n  // $FlowFixMe Work around Flow bug\n  | WeakMap\n  | Map<\n      Document | Element | Node,\n      Map<DOMTopLevelEventType | string, null | (any => void)>,\n    > = new PossiblyWeakMap();\n\nexport function getListenerMapForElement(\n  element: Document | Element | Node,\n): Map<DOMTopLevelEventType | string, null | (any => void)> {\n  let listenerMap = elementListenerMap.get(element);\n  if (listenerMap === undefined) {\n    listenerMap = new Map();\n    elementListenerMap.set(element, listenerMap);\n  }\n  return listenerMap;\n}\n"]},"metadata":{},"sourceType":"module"}