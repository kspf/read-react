{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nexport const isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridArea: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\n\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\n\n\nconst prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\n\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react-dom/src/shared/CSSProperty.js"],"names":["isUnitlessNumber","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixKey","prefix","key","charAt","toUpperCase","substring","prefixes","Object","keys","forEach","prop"],"mappings":"AAAA;;;;;;;AAOA;;;AAGA,OAAO,MAAMA,gBAAgB,GAAG;AAC9BC,EAAAA,uBAAuB,EAAE,IADK;AAE9BC,EAAAA,iBAAiB,EAAE,IAFW;AAG9BC,EAAAA,gBAAgB,EAAE,IAHY;AAI9BC,EAAAA,gBAAgB,EAAE,IAJY;AAK9BC,EAAAA,OAAO,EAAE,IALqB;AAM9BC,EAAAA,YAAY,EAAE,IANgB;AAO9BC,EAAAA,eAAe,EAAE,IAPa;AAQ9BC,EAAAA,WAAW,EAAE,IARiB;AAS9BC,EAAAA,OAAO,EAAE,IATqB;AAU9BC,EAAAA,IAAI,EAAE,IAVwB;AAW9BC,EAAAA,QAAQ,EAAE,IAXoB;AAY9BC,EAAAA,YAAY,EAAE,IAZgB;AAa9BC,EAAAA,UAAU,EAAE,IAbkB;AAc9BC,EAAAA,YAAY,EAAE,IAdgB;AAe9BC,EAAAA,SAAS,EAAE,IAfmB;AAgB9BC,EAAAA,QAAQ,EAAE,IAhBoB;AAiB9BC,EAAAA,OAAO,EAAE,IAjBqB;AAkB9BC,EAAAA,UAAU,EAAE,IAlBkB;AAmB9BC,EAAAA,WAAW,EAAE,IAnBiB;AAoB9BC,EAAAA,YAAY,EAAE,IApBgB;AAqB9BC,EAAAA,UAAU,EAAE,IArBkB;AAsB9BC,EAAAA,aAAa,EAAE,IAtBe;AAuB9BC,EAAAA,cAAc,EAAE,IAvBc;AAwB9BC,EAAAA,eAAe,EAAE,IAxBa;AAyB9BC,EAAAA,UAAU,EAAE,IAzBkB;AA0B9BC,EAAAA,SAAS,EAAE,IA1BmB;AA2B9BC,EAAAA,UAAU,EAAE,IA3BkB;AA4B9BC,EAAAA,OAAO,EAAE,IA5BqB;AA6B9BC,EAAAA,KAAK,EAAE,IA7BuB;AA8B9BC,EAAAA,OAAO,EAAE,IA9BqB;AA+B9BC,EAAAA,OAAO,EAAE,IA/BqB;AAgC9BC,EAAAA,MAAM,EAAE,IAhCsB;AAiC9BC,EAAAA,MAAM,EAAE,IAjCsB;AAkC9BC,EAAAA,IAAI,EAAE,IAlCwB;AAoC9B;AACAC,EAAAA,WAAW,EAAE,IArCiB;AAsC9BC,EAAAA,YAAY,EAAE,IAtCgB;AAuC9BC,EAAAA,WAAW,EAAE,IAvCiB;AAwC9BC,EAAAA,eAAe,EAAE,IAxCa;AAyC9BC,EAAAA,gBAAgB,EAAE,IAzCY;AA0C9BC,EAAAA,gBAAgB,EAAE,IA1CY;AA2C9BC,EAAAA,aAAa,EAAE,IA3Ce;AA4C9BC,EAAAA,WAAW,EAAE;AA5CiB,CAAzB;AA+CP;;;;;;;AAMA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,GAA3B,EAAgC;AAC9B,SAAOD,MAAM,GAAGC,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAAT,GAAuCF,GAAG,CAACG,SAAJ,CAAc,CAAd,CAA9C;AACD;AAED;;;;;;AAIA,MAAMC,QAAQ,GAAG,CAAC,QAAD,EAAW,IAAX,EAAiB,KAAjB,EAAwB,GAAxB,CAAjB,C,CAEA;AACA;;AACAC,MAAM,CAACC,IAAP,CAAYnD,gBAAZ,EAA8BoD,OAA9B,CAAsC,UAASC,IAAT,EAAe;AACnDJ,EAAAA,QAAQ,CAACG,OAAT,CAAiB,UAASR,MAAT,EAAiB;AAChC5C,IAAAA,gBAAgB,CAAC2C,SAAS,CAACC,MAAD,EAASS,IAAT,CAAV,CAAhB,GAA4CrD,gBAAgB,CAACqD,IAAD,CAA5D;AACD,GAFD;AAGD,CAJD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nexport const isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridArea: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nconst prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function(prop) {\n  prefixes.forEach(function(prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n"]},"metadata":{},"sourceType":"module"}