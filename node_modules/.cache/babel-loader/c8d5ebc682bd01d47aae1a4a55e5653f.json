{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport invariant from 'shared/invariant'; // TODO: We can remove this if we add invariantWithStack()\n// or add stack by default to invariants where possible.\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport voidElementTags from './voidElementTags';\nconst HTML = '__html';\nlet ReactDebugCurrentFrame = null;\n\nif (__DEV__) {\n  ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n}\n\nfunction assertValidProps(tag, props) {\n  if (!props) {\n    return;\n  } // Note the use of `==` which checks for null or undefined.\n\n\n  if (voidElementTags[tag]) {\n    invariant(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must neither have `children` nor ' + 'use `dangerouslySetInnerHTML`.%s', tag, __DEV__ ? ReactDebugCurrentFrame.getStackAddendum() : '');\n  }\n\n  if (props.dangerouslySetInnerHTML != null) {\n    invariant(props.children == null, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.');\n    invariant(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.');\n  }\n\n  if (__DEV__) {\n    if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {\n      console.error('A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.');\n    }\n  }\n\n  invariant(props.style == null || typeof props.style === 'object', 'The `style` prop expects a mapping from style properties to values, ' + \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" + 'using JSX.%s', __DEV__ ? ReactDebugCurrentFrame.getStackAddendum() : '');\n}\n\nexport default assertValidProps;","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react-dom/src/shared/assertValidProps.js"],"names":["invariant","ReactSharedInternals","voidElementTags","HTML","ReactDebugCurrentFrame","__DEV__","assertValidProps","tag","props","children","dangerouslySetInnerHTML","getStackAddendum","suppressContentEditableWarning","contentEditable","console","error","style"],"mappings":"AAAA;;;;;;AAOA,OAAOA,SAAP,MAAsB,kBAAtB,C,CACA;AACA;;AACA,OAAOC,oBAAP,MAAiC,6BAAjC;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,MAAMC,IAAI,GAAG,QAAb;AAEA,IAAIC,sBAAsB,GAAG,IAA7B;;AACA,IAAIC,OAAJ,EAAa;AACXD,EAAAA,sBAAsB,GAAGH,oBAAoB,CAACG,sBAA9C;AACD;;AAED,SAASE,gBAAT,CAA0BC,GAA1B,EAAuCC,KAAvC,EAAuD;AACrD,MAAI,CAACA,KAAL,EAAY;AACV;AACD,GAHoD,CAIrD;;;AACA,MAAIN,eAAe,CAACK,GAAD,CAAnB,EAA0B;AACxBP,IAAAA,SAAS,CACPQ,KAAK,CAACC,QAAN,IAAkB,IAAlB,IAA0BD,KAAK,CAACE,uBAAN,IAAiC,IADpD,EAEP,mEACE,kCAHK,EAIPH,GAJO,EAKPF,OAAO,GAAGD,sBAAsB,CAACO,gBAAvB,EAAH,GAA+C,EAL/C,CAAT;AAOD;;AACD,MAAIH,KAAK,CAACE,uBAAN,IAAiC,IAArC,EAA2C;AACzCV,IAAAA,SAAS,CACPQ,KAAK,CAACC,QAAN,IAAkB,IADX,EAEP,oEAFO,CAAT;AAIAT,IAAAA,SAAS,CACP,OAAOQ,KAAK,CAACE,uBAAb,KAAyC,QAAzC,IACEP,IAAI,IAAIK,KAAK,CAACE,uBAFT,EAGP,0EACE,wEADF,GAEE,uBALK,CAAT;AAOD;;AACD,MAAIL,OAAJ,EAAa;AACX,QACE,CAACG,KAAK,CAACI,8BAAP,IACAJ,KAAK,CAACK,eADN,IAEAL,KAAK,CAACC,QAAN,IAAkB,IAHpB,EAIE;AACAK,MAAAA,OAAO,CAACC,KAAR,CACE,yEACE,iEADF,GAEE,+DAFF,GAGE,2BAJJ;AAMD;AACF;;AACDf,EAAAA,SAAS,CACPQ,KAAK,CAACQ,KAAN,IAAe,IAAf,IAAuB,OAAOR,KAAK,CAACQ,KAAb,KAAuB,QADvC,EAEP,yEACE,wEADF,GAEE,cAJK,EAKPX,OAAO,GAAGD,sBAAsB,CAACO,gBAAvB,EAAH,GAA+C,EAL/C,CAAT;AAOD;;AAED,eAAeL,gBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport invariant from 'shared/invariant';\n// TODO: We can remove this if we add invariantWithStack()\n// or add stack by default to invariants where possible.\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nimport voidElementTags from './voidElementTags';\n\nconst HTML = '__html';\n\nlet ReactDebugCurrentFrame = null;\nif (__DEV__) {\n  ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n}\n\nfunction assertValidProps(tag: string, props: ?Object) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (voidElementTags[tag]) {\n    invariant(\n      props.children == null && props.dangerouslySetInnerHTML == null,\n      '%s is a void element tag and must neither have `children` nor ' +\n        'use `dangerouslySetInnerHTML`.%s',\n      tag,\n      __DEV__ ? ReactDebugCurrentFrame.getStackAddendum() : '',\n    );\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    invariant(\n      props.children == null,\n      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',\n    );\n    invariant(\n      typeof props.dangerouslySetInnerHTML === 'object' &&\n        HTML in props.dangerouslySetInnerHTML,\n      '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\n        'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +\n        'for more information.',\n    );\n  }\n  if (__DEV__) {\n    if (\n      !props.suppressContentEditableWarning &&\n      props.contentEditable &&\n      props.children != null\n    ) {\n      console.error(\n        'A component is `contentEditable` and contains `children` managed by ' +\n          'React. It is now your responsibility to guarantee that none of ' +\n          'those nodes are unexpectedly modified or duplicated. This is ' +\n          'probably not intentional.',\n      );\n    }\n  }\n  invariant(\n    props.style == null || typeof props.style === 'object',\n    'The `style` prop expects a mapping from style properties to values, ' +\n      \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" +\n      'using JSX.%s',\n    __DEV__ ? ReactDebugCurrentFrame.getStackAddendum() : '',\n  );\n}\n\nexport default assertValidProps;\n"]},"metadata":{},"sourceType":"module"}