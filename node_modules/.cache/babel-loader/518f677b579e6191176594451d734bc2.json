{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { accumulateTwoPhaseDispatches } from 'legacy-events/EventPropagators';\nimport SyntheticEvent from 'legacy-events/SyntheticEvent';\nimport * as DOMTopLevelEventTypes from './DOMTopLevelEventTypes';\nimport { topLevelEventsToDispatchConfig, simpleEventPluginEventTypes } from './DOMEventProperties';\nimport SyntheticAnimationEvent from './SyntheticAnimationEvent';\nimport SyntheticClipboardEvent from './SyntheticClipboardEvent';\nimport SyntheticFocusEvent from './SyntheticFocusEvent';\nimport SyntheticKeyboardEvent from './SyntheticKeyboardEvent';\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\nimport SyntheticPointerEvent from './SyntheticPointerEvent';\nimport SyntheticDragEvent from './SyntheticDragEvent';\nimport SyntheticTouchEvent from './SyntheticTouchEvent';\nimport SyntheticTransitionEvent from './SyntheticTransitionEvent';\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport SyntheticWheelEvent from './SyntheticWheelEvent';\nimport getEventCharCode from './getEventCharCode'; // Only used in DEV for exhaustiveness validation.\n\nconst knownHTMLTopLevelTypes = [DOMTopLevelEventTypes.TOP_ABORT, DOMTopLevelEventTypes.TOP_CANCEL, DOMTopLevelEventTypes.TOP_CAN_PLAY, DOMTopLevelEventTypes.TOP_CAN_PLAY_THROUGH, DOMTopLevelEventTypes.TOP_CLOSE, DOMTopLevelEventTypes.TOP_DURATION_CHANGE, DOMTopLevelEventTypes.TOP_EMPTIED, DOMTopLevelEventTypes.TOP_ENCRYPTED, DOMTopLevelEventTypes.TOP_ENDED, DOMTopLevelEventTypes.TOP_ERROR, DOMTopLevelEventTypes.TOP_INPUT, DOMTopLevelEventTypes.TOP_INVALID, DOMTopLevelEventTypes.TOP_LOAD, DOMTopLevelEventTypes.TOP_LOADED_DATA, DOMTopLevelEventTypes.TOP_LOADED_METADATA, DOMTopLevelEventTypes.TOP_LOAD_START, DOMTopLevelEventTypes.TOP_PAUSE, DOMTopLevelEventTypes.TOP_PLAY, DOMTopLevelEventTypes.TOP_PLAYING, DOMTopLevelEventTypes.TOP_PROGRESS, DOMTopLevelEventTypes.TOP_RATE_CHANGE, DOMTopLevelEventTypes.TOP_RESET, DOMTopLevelEventTypes.TOP_SEEKED, DOMTopLevelEventTypes.TOP_SEEKING, DOMTopLevelEventTypes.TOP_STALLED, DOMTopLevelEventTypes.TOP_SUBMIT, DOMTopLevelEventTypes.TOP_SUSPEND, DOMTopLevelEventTypes.TOP_TIME_UPDATE, DOMTopLevelEventTypes.TOP_TOGGLE, DOMTopLevelEventTypes.TOP_VOLUME_CHANGE, DOMTopLevelEventTypes.TOP_WAITING];\nconst SimpleEventPlugin = {\n  // simpleEventPluginEventTypes gets populated from\n  // the DOMEventProperties module.\n  eventTypes: simpleEventPluginEventTypes,\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {\n    const dispatchConfig = topLevelEventsToDispatchConfig.get(topLevelType);\n\n    if (!dispatchConfig) {\n      return null;\n    }\n\n    let EventConstructor;\n\n    switch (topLevelType) {\n      case DOMTopLevelEventTypes.TOP_KEY_PRESS:\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n\n      /* falls through */\n\n      case DOMTopLevelEventTypes.TOP_KEY_DOWN:\n      case DOMTopLevelEventTypes.TOP_KEY_UP:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_BLUR:\n      case DOMTopLevelEventTypes.TOP_FOCUS:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_CLICK:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n\n      /* falls through */\n\n      case DOMTopLevelEventTypes.TOP_AUX_CLICK:\n      case DOMTopLevelEventTypes.TOP_DOUBLE_CLICK:\n      case DOMTopLevelEventTypes.TOP_MOUSE_DOWN:\n      case DOMTopLevelEventTypes.TOP_MOUSE_MOVE:\n      case DOMTopLevelEventTypes.TOP_MOUSE_UP: // TODO: Disabled elements should not respond to mouse events\n\n      /* falls through */\n\n      case DOMTopLevelEventTypes.TOP_MOUSE_OUT:\n      case DOMTopLevelEventTypes.TOP_MOUSE_OVER:\n      case DOMTopLevelEventTypes.TOP_CONTEXT_MENU:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_DRAG:\n      case DOMTopLevelEventTypes.TOP_DRAG_END:\n      case DOMTopLevelEventTypes.TOP_DRAG_ENTER:\n      case DOMTopLevelEventTypes.TOP_DRAG_EXIT:\n      case DOMTopLevelEventTypes.TOP_DRAG_LEAVE:\n      case DOMTopLevelEventTypes.TOP_DRAG_OVER:\n      case DOMTopLevelEventTypes.TOP_DRAG_START:\n      case DOMTopLevelEventTypes.TOP_DROP:\n        EventConstructor = SyntheticDragEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_TOUCH_CANCEL:\n      case DOMTopLevelEventTypes.TOP_TOUCH_END:\n      case DOMTopLevelEventTypes.TOP_TOUCH_MOVE:\n      case DOMTopLevelEventTypes.TOP_TOUCH_START:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_ANIMATION_END:\n      case DOMTopLevelEventTypes.TOP_ANIMATION_ITERATION:\n      case DOMTopLevelEventTypes.TOP_ANIMATION_START:\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_TRANSITION_END:\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_SCROLL:\n        EventConstructor = SyntheticUIEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_WHEEL:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_COPY:\n      case DOMTopLevelEventTypes.TOP_CUT:\n      case DOMTopLevelEventTypes.TOP_PASTE:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_GOT_POINTER_CAPTURE:\n      case DOMTopLevelEventTypes.TOP_LOST_POINTER_CAPTURE:\n      case DOMTopLevelEventTypes.TOP_POINTER_CANCEL:\n      case DOMTopLevelEventTypes.TOP_POINTER_DOWN:\n      case DOMTopLevelEventTypes.TOP_POINTER_MOVE:\n      case DOMTopLevelEventTypes.TOP_POINTER_OUT:\n      case DOMTopLevelEventTypes.TOP_POINTER_OVER:\n      case DOMTopLevelEventTypes.TOP_POINTER_UP:\n        EventConstructor = SyntheticPointerEvent;\n        break;\n\n      default:\n        if (__DEV__) {\n          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {\n            console.error('SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);\n          }\n        } // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n\n\n        EventConstructor = SyntheticEvent;\n        break;\n    }\n\n    const event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n    accumulateTwoPhaseDispatches(event);\n    return event;\n  }\n};\nexport default SimpleEventPlugin;","map":{"version":3,"sources":["/Users/malinfeng/Desktop/mywww/react-test/src/react/packages/react-dom/src/events/SimpleEventPlugin.js"],"names":["accumulateTwoPhaseDispatches","SyntheticEvent","DOMTopLevelEventTypes","topLevelEventsToDispatchConfig","simpleEventPluginEventTypes","SyntheticAnimationEvent","SyntheticClipboardEvent","SyntheticFocusEvent","SyntheticKeyboardEvent","SyntheticMouseEvent","SyntheticPointerEvent","SyntheticDragEvent","SyntheticTouchEvent","SyntheticTransitionEvent","SyntheticUIEvent","SyntheticWheelEvent","getEventCharCode","knownHTMLTopLevelTypes","TOP_ABORT","TOP_CANCEL","TOP_CAN_PLAY","TOP_CAN_PLAY_THROUGH","TOP_CLOSE","TOP_DURATION_CHANGE","TOP_EMPTIED","TOP_ENCRYPTED","TOP_ENDED","TOP_ERROR","TOP_INPUT","TOP_INVALID","TOP_LOAD","TOP_LOADED_DATA","TOP_LOADED_METADATA","TOP_LOAD_START","TOP_PAUSE","TOP_PLAY","TOP_PLAYING","TOP_PROGRESS","TOP_RATE_CHANGE","TOP_RESET","TOP_SEEKED","TOP_SEEKING","TOP_STALLED","TOP_SUBMIT","TOP_SUSPEND","TOP_TIME_UPDATE","TOP_TOGGLE","TOP_VOLUME_CHANGE","TOP_WAITING","SimpleEventPlugin","eventTypes","extractEvents","topLevelType","targetInst","nativeEvent","nativeEventTarget","eventSystemFlags","dispatchConfig","get","EventConstructor","TOP_KEY_PRESS","TOP_KEY_DOWN","TOP_KEY_UP","TOP_BLUR","TOP_FOCUS","TOP_CLICK","button","TOP_AUX_CLICK","TOP_DOUBLE_CLICK","TOP_MOUSE_DOWN","TOP_MOUSE_MOVE","TOP_MOUSE_UP","TOP_MOUSE_OUT","TOP_MOUSE_OVER","TOP_CONTEXT_MENU","TOP_DRAG","TOP_DRAG_END","TOP_DRAG_ENTER","TOP_DRAG_EXIT","TOP_DRAG_LEAVE","TOP_DRAG_OVER","TOP_DRAG_START","TOP_DROP","TOP_TOUCH_CANCEL","TOP_TOUCH_END","TOP_TOUCH_MOVE","TOP_TOUCH_START","TOP_ANIMATION_END","TOP_ANIMATION_ITERATION","TOP_ANIMATION_START","TOP_TRANSITION_END","TOP_SCROLL","TOP_WHEEL","TOP_COPY","TOP_CUT","TOP_PASTE","TOP_GOT_POINTER_CAPTURE","TOP_LOST_POINTER_CAPTURE","TOP_POINTER_CANCEL","TOP_POINTER_DOWN","TOP_POINTER_MOVE","TOP_POINTER_OUT","TOP_POINTER_OVER","TOP_POINTER_UP","__DEV__","indexOf","console","error","event","getPooled"],"mappings":"AAAA;;;;;;;;AAkBA,SAAQA,4BAAR,QAA2C,gCAA3C;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,OAAO,KAAKC,qBAAZ,MAAuC,yBAAvC;AACA,SACEC,8BADF,EAEEC,2BAFF,QAGO,sBAHP;AAKA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CAEA;;AACA,MAAMC,sBAAmD,GAAG,CAC1Df,qBAAqB,CAACgB,SADoC,EAE1DhB,qBAAqB,CAACiB,UAFoC,EAG1DjB,qBAAqB,CAACkB,YAHoC,EAI1DlB,qBAAqB,CAACmB,oBAJoC,EAK1DnB,qBAAqB,CAACoB,SALoC,EAM1DpB,qBAAqB,CAACqB,mBANoC,EAO1DrB,qBAAqB,CAACsB,WAPoC,EAQ1DtB,qBAAqB,CAACuB,aARoC,EAS1DvB,qBAAqB,CAACwB,SAToC,EAU1DxB,qBAAqB,CAACyB,SAVoC,EAW1DzB,qBAAqB,CAAC0B,SAXoC,EAY1D1B,qBAAqB,CAAC2B,WAZoC,EAa1D3B,qBAAqB,CAAC4B,QAboC,EAc1D5B,qBAAqB,CAAC6B,eAdoC,EAe1D7B,qBAAqB,CAAC8B,mBAfoC,EAgB1D9B,qBAAqB,CAAC+B,cAhBoC,EAiB1D/B,qBAAqB,CAACgC,SAjBoC,EAkB1DhC,qBAAqB,CAACiC,QAlBoC,EAmB1DjC,qBAAqB,CAACkC,WAnBoC,EAoB1DlC,qBAAqB,CAACmC,YApBoC,EAqB1DnC,qBAAqB,CAACoC,eArBoC,EAsB1DpC,qBAAqB,CAACqC,SAtBoC,EAuB1DrC,qBAAqB,CAACsC,UAvBoC,EAwB1DtC,qBAAqB,CAACuC,WAxBoC,EAyB1DvC,qBAAqB,CAACwC,WAzBoC,EA0B1DxC,qBAAqB,CAACyC,UA1BoC,EA2B1DzC,qBAAqB,CAAC0C,WA3BoC,EA4B1D1C,qBAAqB,CAAC2C,eA5BoC,EA6B1D3C,qBAAqB,CAAC4C,UA7BoC,EA8B1D5C,qBAAqB,CAAC6C,iBA9BoC,EA+B1D7C,qBAAqB,CAAC8C,WA/BoC,CAA5D;AAkCA,MAAMC,iBAA2C,GAAG;AAClD;AACA;AACAC,EAAAA,UAAU,EAAE9C,2BAHsC;AAIlD+C,EAAAA,aAAa,EAAE,UACbC,YADa,EAEbC,UAFa,EAGbC,WAHa,EAIbC,iBAJa,EAKbC,gBALa,EAMe;AAC5B,UAAMC,cAAc,GAAGtD,8BAA8B,CAACuD,GAA/B,CAAmCN,YAAnC,CAAvB;;AACA,QAAI,CAACK,cAAL,EAAqB;AACnB,aAAO,IAAP;AACD;;AACD,QAAIE,gBAAJ;;AACA,YAAQP,YAAR;AACE,WAAKlD,qBAAqB,CAAC0D,aAA3B;AACE;AACA;AACA;AACA,YAAI5C,gBAAgB,CAACsC,WAAD,CAAhB,KAAkC,CAAtC,EAAyC;AACvC,iBAAO,IAAP;AACD;;AACH;;AACA,WAAKpD,qBAAqB,CAAC2D,YAA3B;AACA,WAAK3D,qBAAqB,CAAC4D,UAA3B;AACEH,QAAAA,gBAAgB,GAAGnD,sBAAnB;AACA;;AACF,WAAKN,qBAAqB,CAAC6D,QAA3B;AACA,WAAK7D,qBAAqB,CAAC8D,SAA3B;AACEL,QAAAA,gBAAgB,GAAGpD,mBAAnB;AACA;;AACF,WAAKL,qBAAqB,CAAC+D,SAA3B;AACE;AACA;AACA,YAAIX,WAAW,CAACY,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,iBAAO,IAAP;AACD;;AACH;;AACA,WAAKhE,qBAAqB,CAACiE,aAA3B;AACA,WAAKjE,qBAAqB,CAACkE,gBAA3B;AACA,WAAKlE,qBAAqB,CAACmE,cAA3B;AACA,WAAKnE,qBAAqB,CAACoE,cAA3B;AACA,WAAKpE,qBAAqB,CAACqE,YAA3B,CA5BF,CA6BE;;AACA;;AACA,WAAKrE,qBAAqB,CAACsE,aAA3B;AACA,WAAKtE,qBAAqB,CAACuE,cAA3B;AACA,WAAKvE,qBAAqB,CAACwE,gBAA3B;AACEf,QAAAA,gBAAgB,GAAGlD,mBAAnB;AACA;;AACF,WAAKP,qBAAqB,CAACyE,QAA3B;AACA,WAAKzE,qBAAqB,CAAC0E,YAA3B;AACA,WAAK1E,qBAAqB,CAAC2E,cAA3B;AACA,WAAK3E,qBAAqB,CAAC4E,aAA3B;AACA,WAAK5E,qBAAqB,CAAC6E,cAA3B;AACA,WAAK7E,qBAAqB,CAAC8E,aAA3B;AACA,WAAK9E,qBAAqB,CAAC+E,cAA3B;AACA,WAAK/E,qBAAqB,CAACgF,QAA3B;AACEvB,QAAAA,gBAAgB,GAAGhD,kBAAnB;AACA;;AACF,WAAKT,qBAAqB,CAACiF,gBAA3B;AACA,WAAKjF,qBAAqB,CAACkF,aAA3B;AACA,WAAKlF,qBAAqB,CAACmF,cAA3B;AACA,WAAKnF,qBAAqB,CAACoF,eAA3B;AACE3B,QAAAA,gBAAgB,GAAG/C,mBAAnB;AACA;;AACF,WAAKV,qBAAqB,CAACqF,iBAA3B;AACA,WAAKrF,qBAAqB,CAACsF,uBAA3B;AACA,WAAKtF,qBAAqB,CAACuF,mBAA3B;AACE9B,QAAAA,gBAAgB,GAAGtD,uBAAnB;AACA;;AACF,WAAKH,qBAAqB,CAACwF,kBAA3B;AACE/B,QAAAA,gBAAgB,GAAG9C,wBAAnB;AACA;;AACF,WAAKX,qBAAqB,CAACyF,UAA3B;AACEhC,QAAAA,gBAAgB,GAAG7C,gBAAnB;AACA;;AACF,WAAKZ,qBAAqB,CAAC0F,SAA3B;AACEjC,QAAAA,gBAAgB,GAAG5C,mBAAnB;AACA;;AACF,WAAKb,qBAAqB,CAAC2F,QAA3B;AACA,WAAK3F,qBAAqB,CAAC4F,OAA3B;AACA,WAAK5F,qBAAqB,CAAC6F,SAA3B;AACEpC,QAAAA,gBAAgB,GAAGrD,uBAAnB;AACA;;AACF,WAAKJ,qBAAqB,CAAC8F,uBAA3B;AACA,WAAK9F,qBAAqB,CAAC+F,wBAA3B;AACA,WAAK/F,qBAAqB,CAACgG,kBAA3B;AACA,WAAKhG,qBAAqB,CAACiG,gBAA3B;AACA,WAAKjG,qBAAqB,CAACkG,gBAA3B;AACA,WAAKlG,qBAAqB,CAACmG,eAA3B;AACA,WAAKnG,qBAAqB,CAACoG,gBAA3B;AACA,WAAKpG,qBAAqB,CAACqG,cAA3B;AACE5C,QAAAA,gBAAgB,GAAGjD,qBAAnB;AACA;;AACF;AACE,YAAI8F,OAAJ,EAAa;AACX,cAAIvF,sBAAsB,CAACwF,OAAvB,CAA+BrD,YAA/B,MAAiD,CAAC,CAAtD,EAAyD;AACvDsD,YAAAA,OAAO,CAACC,KAAR,CACE,iEACE,2DAFJ,EAGEvD,YAHF;AAKD;AACF,SATH,CAUE;AACA;;;AACAO,QAAAA,gBAAgB,GAAG1D,cAAnB;AACA;AA9FJ;;AAgGA,UAAM2G,KAAK,GAAGjD,gBAAgB,CAACkD,SAAjB,CACZpD,cADY,EAEZJ,UAFY,EAGZC,WAHY,EAIZC,iBAJY,CAAd;AAMAvD,IAAAA,4BAA4B,CAAC4G,KAAD,CAA5B;AACA,WAAOA,KAAP;AACD;AAxHiD,CAApD;AA2HA,eAAe3D,iBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  TopLevelType,\n  DOMTopLevelEventType,\n} from 'legacy-events/TopLevelEventTypes';\nimport type {ReactSyntheticEvent} from 'legacy-events/ReactSyntheticEventType';\nimport type {Fiber} from 'react-reconciler/src/ReactFiber';\nimport type {PluginModule} from 'legacy-events/PluginModuleType';\nimport type {EventSystemFlags} from 'legacy-events/EventSystemFlags';\n\nimport {accumulateTwoPhaseDispatches} from 'legacy-events/EventPropagators';\nimport SyntheticEvent from 'legacy-events/SyntheticEvent';\n\nimport * as DOMTopLevelEventTypes from './DOMTopLevelEventTypes';\nimport {\n  topLevelEventsToDispatchConfig,\n  simpleEventPluginEventTypes,\n} from './DOMEventProperties';\n\nimport SyntheticAnimationEvent from './SyntheticAnimationEvent';\nimport SyntheticClipboardEvent from './SyntheticClipboardEvent';\nimport SyntheticFocusEvent from './SyntheticFocusEvent';\nimport SyntheticKeyboardEvent from './SyntheticKeyboardEvent';\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\nimport SyntheticPointerEvent from './SyntheticPointerEvent';\nimport SyntheticDragEvent from './SyntheticDragEvent';\nimport SyntheticTouchEvent from './SyntheticTouchEvent';\nimport SyntheticTransitionEvent from './SyntheticTransitionEvent';\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport SyntheticWheelEvent from './SyntheticWheelEvent';\nimport getEventCharCode from './getEventCharCode';\n\n// Only used in DEV for exhaustiveness validation.\nconst knownHTMLTopLevelTypes: Array<DOMTopLevelEventType> = [\n  DOMTopLevelEventTypes.TOP_ABORT,\n  DOMTopLevelEventTypes.TOP_CANCEL,\n  DOMTopLevelEventTypes.TOP_CAN_PLAY,\n  DOMTopLevelEventTypes.TOP_CAN_PLAY_THROUGH,\n  DOMTopLevelEventTypes.TOP_CLOSE,\n  DOMTopLevelEventTypes.TOP_DURATION_CHANGE,\n  DOMTopLevelEventTypes.TOP_EMPTIED,\n  DOMTopLevelEventTypes.TOP_ENCRYPTED,\n  DOMTopLevelEventTypes.TOP_ENDED,\n  DOMTopLevelEventTypes.TOP_ERROR,\n  DOMTopLevelEventTypes.TOP_INPUT,\n  DOMTopLevelEventTypes.TOP_INVALID,\n  DOMTopLevelEventTypes.TOP_LOAD,\n  DOMTopLevelEventTypes.TOP_LOADED_DATA,\n  DOMTopLevelEventTypes.TOP_LOADED_METADATA,\n  DOMTopLevelEventTypes.TOP_LOAD_START,\n  DOMTopLevelEventTypes.TOP_PAUSE,\n  DOMTopLevelEventTypes.TOP_PLAY,\n  DOMTopLevelEventTypes.TOP_PLAYING,\n  DOMTopLevelEventTypes.TOP_PROGRESS,\n  DOMTopLevelEventTypes.TOP_RATE_CHANGE,\n  DOMTopLevelEventTypes.TOP_RESET,\n  DOMTopLevelEventTypes.TOP_SEEKED,\n  DOMTopLevelEventTypes.TOP_SEEKING,\n  DOMTopLevelEventTypes.TOP_STALLED,\n  DOMTopLevelEventTypes.TOP_SUBMIT,\n  DOMTopLevelEventTypes.TOP_SUSPEND,\n  DOMTopLevelEventTypes.TOP_TIME_UPDATE,\n  DOMTopLevelEventTypes.TOP_TOGGLE,\n  DOMTopLevelEventTypes.TOP_VOLUME_CHANGE,\n  DOMTopLevelEventTypes.TOP_WAITING,\n];\n\nconst SimpleEventPlugin: PluginModule<MouseEvent> = {\n  // simpleEventPluginEventTypes gets populated from\n  // the DOMEventProperties module.\n  eventTypes: simpleEventPluginEventTypes,\n  extractEvents: function(\n    topLevelType: TopLevelType,\n    targetInst: null | Fiber,\n    nativeEvent: MouseEvent,\n    nativeEventTarget: null | EventTarget,\n    eventSystemFlags: EventSystemFlags,\n  ): null | ReactSyntheticEvent {\n    const dispatchConfig = topLevelEventsToDispatchConfig.get(topLevelType);\n    if (!dispatchConfig) {\n      return null;\n    }\n    let EventConstructor;\n    switch (topLevelType) {\n      case DOMTopLevelEventTypes.TOP_KEY_PRESS:\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case DOMTopLevelEventTypes.TOP_KEY_DOWN:\n      case DOMTopLevelEventTypes.TOP_KEY_UP:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_BLUR:\n      case DOMTopLevelEventTypes.TOP_FOCUS:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_CLICK:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case DOMTopLevelEventTypes.TOP_AUX_CLICK:\n      case DOMTopLevelEventTypes.TOP_DOUBLE_CLICK:\n      case DOMTopLevelEventTypes.TOP_MOUSE_DOWN:\n      case DOMTopLevelEventTypes.TOP_MOUSE_MOVE:\n      case DOMTopLevelEventTypes.TOP_MOUSE_UP:\n      // TODO: Disabled elements should not respond to mouse events\n      /* falls through */\n      case DOMTopLevelEventTypes.TOP_MOUSE_OUT:\n      case DOMTopLevelEventTypes.TOP_MOUSE_OVER:\n      case DOMTopLevelEventTypes.TOP_CONTEXT_MENU:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_DRAG:\n      case DOMTopLevelEventTypes.TOP_DRAG_END:\n      case DOMTopLevelEventTypes.TOP_DRAG_ENTER:\n      case DOMTopLevelEventTypes.TOP_DRAG_EXIT:\n      case DOMTopLevelEventTypes.TOP_DRAG_LEAVE:\n      case DOMTopLevelEventTypes.TOP_DRAG_OVER:\n      case DOMTopLevelEventTypes.TOP_DRAG_START:\n      case DOMTopLevelEventTypes.TOP_DROP:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_TOUCH_CANCEL:\n      case DOMTopLevelEventTypes.TOP_TOUCH_END:\n      case DOMTopLevelEventTypes.TOP_TOUCH_MOVE:\n      case DOMTopLevelEventTypes.TOP_TOUCH_START:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_ANIMATION_END:\n      case DOMTopLevelEventTypes.TOP_ANIMATION_ITERATION:\n      case DOMTopLevelEventTypes.TOP_ANIMATION_START:\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_TRANSITION_END:\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_SCROLL:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_WHEEL:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_COPY:\n      case DOMTopLevelEventTypes.TOP_CUT:\n      case DOMTopLevelEventTypes.TOP_PASTE:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_GOT_POINTER_CAPTURE:\n      case DOMTopLevelEventTypes.TOP_LOST_POINTER_CAPTURE:\n      case DOMTopLevelEventTypes.TOP_POINTER_CANCEL:\n      case DOMTopLevelEventTypes.TOP_POINTER_DOWN:\n      case DOMTopLevelEventTypes.TOP_POINTER_MOVE:\n      case DOMTopLevelEventTypes.TOP_POINTER_OUT:\n      case DOMTopLevelEventTypes.TOP_POINTER_OVER:\n      case DOMTopLevelEventTypes.TOP_POINTER_UP:\n        EventConstructor = SyntheticPointerEvent;\n        break;\n      default:\n        if (__DEV__) {\n          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {\n            console.error(\n              'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' +\n                'is likely caused by a bug in React. Please file an issue.',\n              topLevelType,\n            );\n          }\n        }\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n    }\n    const event = EventConstructor.getPooled(\n      dispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n};\n\nexport default SimpleEventPlugin;\n"]},"metadata":{},"sourceType":"module"}